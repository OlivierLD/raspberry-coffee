import * as  Utils from './utils.js';

/**
 * MARS
 */

// Heliocentric longitude of Mars
export function lMars(x) {
	let L0 = 0;
	L0 += 6.20347711583;
	L0 += 0.18656368100 * Utils.cost(5.05037100303 + 3340.61242669980 * x);
	L0 += 0.01108216792 * Utils.cost(5.40099836958 + 6681.22485339960 * x);
	L0 += 0.00091798394 * Utils.cost(5.75478745111 + 10021.83728009940 * x);
	L0 += 0.00027744987 * Utils.cost(5.97049512942 + 3.52311834900 * x);
	L0 += 0.00010610230 * Utils.cost(2.93958524973 + 2281.23049651060 * x);
	L0 += 0.00012315897 * Utils.cost(0.84956081238 + 2810.92146160520 * x);
	L0 += 0.00008926772 * Utils.cost(4.15697845939 + 0.01725365220 * x);
	L0 += 0.00008715688 * Utils.cost(6.11005159792 + 13362.44970679920 * x);
	L0 += 0.00006797552 * Utils.cost(0.36462243626 + 398.14900340820 * x);
	L0 += 0.00007774867 * Utils.cost(3.33968655074 + 5621.84292321040 * x);
	L0 += 0.00003575079 * Utils.cost(1.66186540141 + 2544.31441988340 * x);
	L0 += 0.00004161101 * Utils.cost(0.22814975330 + 2942.46342329160 * x);
	L0 += 0.00003075250 * Utils.cost(0.85696597082 + 191.44826611160 * x);
	L0 += 0.00002628122 * Utils.cost(0.64806143570 + 3337.08930835080 * x);
	L0 += 0.00002937543 * Utils.cost(6.07893711408 + 0.06731030280 * x);
	L0 += 0.00002389420 * Utils.cost(5.03896401349 + 796.29800681640 * x);
	L0 += 0.00002579842 * Utils.cost(0.02996706197 + 3344.13554504880 * x);
	L0 += 0.00001528140 * Utils.cost(1.14979306228 + 6151.53388830500 * x);
	L0 += 0.00001798808 * Utils.cost(0.65634026844 + 529.69096509460 * x);
	L0 += 0.00001264356 * Utils.cost(3.62275092231 + 5092.15195811580 * x);
	L0 += 0.00001286232 * Utils.cost(3.06795924626 + 2146.16541647520 * x);
	L0 += 0.00001546408 * Utils.cost(2.91579633392 + 1751.53953141600 * x);
	L0 += 0.00001024907 * Utils.cost(3.69334293555 + 8962.45534991020 * x);
	L0 += 0.00000891567 * Utils.cost(0.18293899090 + 16703.06213349900 * x);
	L0 += 0.00000858760 * Utils.cost(2.40093704204 + 2914.01423582380 * x);
	L0 += 0.00000832718 * Utils.cost(2.46418591282 + 3340.59517304760 * x);
	L0 += 0.00000832724 * Utils.cost(4.49495753458 + 3340.62968035200 * x);
	L0 += 0.00000712899 * Utils.cost(3.66336014788 + 1059.38193018920 * x);
	L0 += 0.00000748724 * Utils.cost(3.82248399468 + 155.42039943420 * x);
	L0 += 0.00000723863 * Utils.cost(0.67497565801 + 3738.76143010800 * x);
	L0 += 0.00000635557 * Utils.cost(2.92182704275 + 8432.76438481560 * x);
	L0 += 0.00000655163 * Utils.cost(0.48864075176 + 3127.31333126180 * x);
	L0 += 0.00000550472 * Utils.cost(3.81001205408 + 0.98032106820 * x);
	L0 += 0.00000552746 * Utils.cost(4.47478863016 + 1748.01641306700 * x);
	L0 += 0.00000425972 * Utils.cost(0.55365138172 + 6283.07584999140 * x);
	L0 += 0.00000415132 * Utils.cost(0.49662314774 + 213.29909543800 * x);
	L0 += 0.00000472164 * Utils.cost(3.62547819410 + 1194.44701022460 * x);
	L0 += 0.00000306552 * Utils.cost(0.38052862973 + 6684.74797174860 * x);
	L0 += 0.00000312141 * Utils.cost(0.99853322843 + 6677.70173505060 * x);
	L0 += 0.00000293199 * Utils.cost(4.22131277914 + 20.77539549240 * x);
	L0 += 0.00000302377 * Utils.cost(4.48618150321 + 3532.06069281140 * x);
	L0 += 0.00000274028 * Utils.cost(0.54222141841 + 3340.54511639700 * x);
	L0 += 0.00000281073 * Utils.cost(5.88163372945 + 1349.86740965880 * x);
	L0 += 0.00000231185 * Utils.cost(1.28240685294 + 3870.30339179440 * x);
	L0 += 0.00000283600 * Utils.cost(5.76885494123 + 3149.16416058820 * x);
	L0 += 0.00000236114 * Utils.cost(5.75504515576 + 3333.49887969900 * x);
	L0 += 0.00000274035 * Utils.cost(0.13372501211 + 3340.67973700260 * x);
	L0 += 0.00000299396 * Utils.cost(2.78323705697 + 6254.62666252360 * x);
	L0 += 0.00000204161 * Utils.cost(2.82133266185 + 1221.84856632140 * x);
	L0 += 0.00000238857 * Utils.cost(5.37155471672 + 4136.91043351620 * x);
	L0 += 0.00000188639 * Utils.cost(1.49103016486 + 9492.14631500480 * x);
	L0 += 0.00000221225 * Utils.cost(3.50466672203 + 382.89653222320 * x);
	L0 += 0.00000179196 * Utils.cost(1.00561112574 + 951.71840625060 * x);
	L0 += 0.00000172110 * Utils.cost(0.43943041719 + 5486.77784317500 * x);
	L0 += 0.00000193126 * Utils.cost(3.35715137745 + 3.59042865180 * x);
	L0 += 0.00000144305 * Utils.cost(1.41874193418 + 135.06508003540 * x);
	L0 += 0.00000160011 * Utils.cost(3.94854735192 + 4562.46099302120 * x);
	L0 += 0.00000174068 * Utils.cost(2.41360332576 + 553.56940284240 * x);
	L0 += 0.00000130993 * Utils.cost(4.04491720264 + 12303.06777661000 * x);
	L0 += 0.00000138245 * Utils.cost(4.30145176915 + 7.11354700080 * x);
	L0 += 0.00000128062 * Utils.cost(1.80665643332 + 5088.62883976680 * x);
	L0 += 0.00000139897 * Utils.cost(3.32592516164 + 2700.71514038580 * x);
	L0 += 0.00000128102 * Utils.cost(2.20806651008 + 1592.59601363280 * x);
	L0 += 0.00000116945 * Utils.cost(3.12805282207 + 7903.07341972100 * x);
	L0 += 0.00000110375 * Utils.cost(1.05195079687 + 242.72860397400 * x);
	L0 += 0.00000113486 * Utils.cost(3.70070798123 + 1589.07289528380 * x);
	L0 += 0.00000100090 * Utils.cost(3.24343740861 + 11773.37681151540 * x);
	L0 += 0.00000095592 * Utils.cost(0.53954181149 + 20043.67456019880 * x);
	L0 += 0.00000098947 * Utils.cost(4.84558294740 + 6681.24210705180 * x);
	L0 += 0.00000104541 * Utils.cost(0.78535382076 + 8827.39026987480 * x);
	L0 += 0.00000084187 * Utils.cost(3.98970720730 + 4399.99435688900 * x);
	L0 += 0.00000086931 * Utils.cost(2.20186740523 + 11243.68584642080 * x);
	L0 += 0.00000071437 * Utils.cost(2.80307550016 + 3185.19202726560 * x);
	L0 += 0.00000072091 * Utils.cost(5.84672102525 + 5884.92684658320 * x);
	L0 += 0.00000073476 * Utils.cost(2.18428012567 + 8429.24126646660 * x);
	L0 += 0.00000098946 * Utils.cost(2.81481140371 + 6681.20759974740 * x);
	L0 += 0.00000068414 * Utils.cost(2.73834914412 + 2288.34404351140 * x);
	L0 += 0.00000086751 * Utils.cost(1.02092221563 + 7079.37385680780 * x);
	L0 += 0.00000065320 * Utils.cost(2.68118597578 + 28.44918746780 * x);
	L0 += 0.00000083749 * Utils.cost(3.20256130990 + 4690.47983635860 * x);
	L0 += 0.00000075034 * Utils.cost(0.76643418252 + 6467.92575796160 * x);
	L0 += 0.00000068984 * Utils.cost(3.76399731788 + 6041.32756708560 * x);
	L0 += 0.00000066706 * Utils.cost(0.73630620766 + 3723.50895892300 * x);
	L0 += 0.00000063314 * Utils.cost(4.52771470470 + 426.59819087600 * x);
	L0 += 0.00000061683 * Utils.cost(6.16831509419 + 2274.11694950980 * x);
	L0 += 0.00000052256 * Utils.cost(0.89941531307 + 9623.68827669120 * x);
	L0 += 0.00000055488 * Utils.cost(4.60625467020 + 4292.33083295040 * x);
	L0 += 0.00000051332 * Utils.cost(4.14823636534 + 3341.59274776800 * x);
	L0 += 0.00000056629 * Utils.cost(5.06250410206 + 15.25247118500 * x);
	L0 += 0.00000063376 * Utils.cost(0.91296240798 + 3553.91152213780 * x);
	L0 += 0.00000045829 * Utils.cost(0.78784235062 + 1990.74501704100 * x);
	L0 += 0.00000048542 * Utils.cost(3.95670418719 + 4535.05943692440 * x);
	L0 += 0.00000041223 * Utils.cost(6.02019329922 + 3894.18182954220 * x);
	L0 += 0.00000041939 * Utils.cost(3.58326425115 + 8031.09226305840 * x);
	L0 += 0.00000056396 * Utils.cost(1.68727150304 + 6872.67311951120 * x);
	L0 += 0.00000055909 * Utils.cost(3.46260833495 + 263.08392337280 * x);
	L0 += 0.00000051678 * Utils.cost(2.81307492682 + 3339.63210563160 * x);
	L0 += 0.00000040671 * Utils.cost(3.13832621829 + 9595.23908922340 * x);
	L0 += 0.00000038107 * Utils.cost(0.73401946320 + 10025.36039844840 * x);
	L0 += 0.00000039495 * Utils.cost(5.63225392160 + 3097.88382272579 * x);
	L0 += 0.00000044174 * Utils.cost(3.19529736702 + 5628.95647021120 * x);
	L0 += 0.00000036716 * Utils.cost(2.63720775102 + 692.15760122680 * x);
	L0 += 0.00000045905 * Utils.cost(0.28718981497 + 5614.72937620960 * x);
	L0 += 0.00000038352 * Utils.cost(5.82880707426 + 3191.04922956520 * x);
	L0 += 0.00000038206 * Utils.cost(2.34835984063 + 162.46663613220 * x);
	L0 += 0.00000032562 * Utils.cost(0.48400659333 + 6681.29216370240 * x);
	L0 += 0.00000037135 * Utils.cost(0.68508150774 + 2818.03500860600 * x);
	L0 += 0.00000031168 * Utils.cost(3.98160912982 + 20.35531939880 * x);
	L0 += 0.00000032561 * Utils.cost(0.89250316888 + 6681.15754309680 * x);
	L0 += 0.00000037752 * Utils.cost(4.15482955299 + 2803.80791460440 * x);
	L0 += 0.00000033626 * Utils.cost(6.11992401052 + 6489.77658728800 * x);
	L0 += 0.00000029007 * Utils.cost(2.42707385674 + 3319.83703120740 * x);
	L0 += 0.00000038790 * Utils.cost(1.35198498795 + 10018.31416175040 * x);
	L0 += 0.00000033148 * Utils.cost(1.14023770004 + 5.52292430740 * x);
	L0 += 0.00000027584 * Utils.cost(1.59691203058 + 7210.91581849420 * x);
	L0 += 0.00000028686 * Utils.cost(5.72055456734 + 7477.52286021600 * x);
	L0 += 0.00000034031 * Utils.cost(2.59544082509 + 11769.85369316640 * x);
	L0 += 0.00000025380 * Utils.cost(0.52093116112 + 10.63666534980 * x);
	L0 += 0.00000026357 * Utils.cost(1.34532646574 + 3496.03282613400 * x);
	L0 += 0.00000024554 * Utils.cost(4.00323183088 + 11371.70468975820 * x);
	L0 += 0.00000025637 * Utils.cost(0.24963523420 + 522.57741809380 * x);
	L0 += 0.00000027278 * Utils.cost(4.55645328122 + 3361.38782219220 * x);
	L0 += 0.00000023764 * Utils.cost(1.84058377256 + 12832.75874170460 * x);
	L0 += 0.00000022816 * Utils.cost(3.52628212106 + 1648.44675719740 * x);
	L0 += 0.00000022274 * Utils.cost(0.72106133721 + 266.60704172180 * x);
	L0 += 0.00000021202 * Utils.cost(3.11824472284 + 2957.71589447660 * x);
	L0 += 0.00000020158 * Utils.cost(3.67131504946 + 1758.65307841680 * x);
	L0 += 0.00000021530 * Utils.cost(6.15388757177 + 3264.34635542420 * x);
	L0 += 0.00000020093 * Utils.cost(1.08247416065 + 7064.12138562280 * x);
	L0 += 0.00000021343 * Utils.cost(4.28218757863 + 4032.77002792660 * x);
	L0 += 0.00000027540 * Utils.cost(6.08389942337 + 6674.11130639880 * x);
	L0 += 0.00000019849 * Utils.cost(2.37668920745 + 10713.99488132620 * x);
	L0 += 0.00000025512 * Utils.cost(3.43242352804 + 3443.70520091840 * x);
	L0 += 0.00000022542 * Utils.cost(5.64861703438 + 2388.89402044920 * x);
	L0 += 0.00000024378 * Utils.cost(0.96994696413 + 632.78373931320 * x);
	L0 += 0.00000023079 * Utils.cost(4.74990214223 + 3347.72597370060 * x);
	L0 += 0.00000017709 * Utils.cost(3.69742343974 + 3344.20285535160 * x);
	L0 += 0.00000022662 * Utils.cost(3.95446324417 + 4989.05918389720 * x);
	L0 += 0.00000022604 * Utils.cost(5.24082917494 + 3205.54734666440 * x);
	L0 += 0.00000016811 * Utils.cost(5.48619684111 + 3.88133535800 * x);
	L0 += 0.00000018422 * Utils.cost(4.22535881468 + 2787.04302385740 * x);
	L0 += 0.00000022737 * Utils.cost(4.98520896596 + 7632.94325965020 * x);
	L0 += 0.00000016648 * Utils.cost(2.52823633184 + 14584.29827312060 * x);
	L0 += 0.00000020963 * Utils.cost(4.27878216453 + 5099.26550511660 * x);
	L0 += 0.00000016042 * Utils.cost(1.76786752521 + 3475.67750673520 * x);
	L0 += 0.00000015816 * Utils.cost(3.13240869691 + 59.37386191360 * x);
	L0 += 0.00000018113 * Utils.cost(3.25756020453 + 3337.02199804800 * x);
	L0 += 0.00000019295 * Utils.cost(3.23911854642 + 7.04623669800 * x);
	L0 += 0.00000016772 * Utils.cost(4.39731507110 + 15643.68020330980 * x);
	L0 += 0.00000017555 * Utils.cost(4.09197396097 + 74.78159856730 * x);
	L0 += 0.00000013704 * Utils.cost(2.54117018160 + 4933.20844033260 * x);
	L0 += 0.00000016011 * Utils.cost(1.54669633224 + 14054.60730802600 * x);
	L0 += 0.00000013547 * Utils.cost(4.04152185347 + 4929.68532198360 * x);
	L0 += 0.00000014566 * Utils.cost(3.45210993051 + 7373.38245462640 * x);
	L0 += 0.00000013926 * Utils.cost(5.40797129468 + 10973.55568635000 * x);
	L0 += 0.00000014246 * Utils.cost(0.59808746067 + 23.87843774780 * x);
	L0 += 0.00000014023 * Utils.cost(1.44218648988 + 10404.73381232260 * x);
	L0 += 0.00000016051 * Utils.cost(3.79409950488 + 2118.76386037840 * x);
	L0 += 0.00000013714 * Utils.cost(3.59050634457 + 15113.98923821520 * x);
	L0 += 0.00000018038 * Utils.cost(4.25391532000 + 2487.41604494780 * x);
	L0 += 0.00000015846 * Utils.cost(0.56901288692 + 103.09277421860 * x);
	L0 += 0.00000013403 * Utils.cost(5.16920432994 + 10213.28554621100 * x);
	L0 += 0.00000016069 * Utils.cost(2.36895958451 + 3265.83082813250 * x);
	L0 += 0.00000012773 * Utils.cost(0.10483085657 + 7234.79425624200 * x);
	L0 += 0.00000012199 * Utils.cost(1.73079687044 + 36.02786667740 * x);
	L0 += 0.00000012283 * Utils.cost(5.19940030635 + 10021.85453375160 * x);
	L0 += 0.00000011945 * Utils.cost(5.47997890162 + 2921.12778282460 * x);
	L0 += 0.00000011890 * Utils.cost(4.76593905835 + 5828.02847164760 * x);
	L0 += 0.00000012283 * Utils.cost(3.16862882612 + 10021.82002644720 * x);
	L0 += 0.00000013274 * Utils.cost(6.17806905340 + 1744.42598441520 * x);
	L0 += 0.00000011777 * Utils.cost(5.72731550900 + 0.42007609361 * x);
	L0 += 0.00000012340 * Utils.cost(2.52146766331 + 2906.90068882300 * x);
	L0 += 0.00000014458 * Utils.cost(4.38010658432 + 316.39186965660 * x);
	L0 += 0.00000010639 * Utils.cost(3.45016942919 + 639.89728631400 * x);
	L0 += 0.00000010925 * Utils.cost(0.60397688999 + 5085.03841111500 * x);
	L0 += 0.00000010645 * Utils.cost(5.47696728127 + 419.48464387520 * x);
	L0 += 0.00000010797 * Utils.cost(1.37191539718 + 10419.98628350760 * x);
	L0 += 0.00000010565 * Utils.cost(1.09061610786 + 12168.00269657460 * x);
	L0 += 0.00000009578 * Utils.cost(4.89489266197 + 3230.40610548040 * x);
	L0 += 0.00000009808 * Utils.cost(5.83632873998 + 14314.16811304980 * x);
	L0 += 0.00000009720 * Utils.cost(6.28282606427 + 9225.53927328300 * x);
	L0 += 0.00000009146 * Utils.cost(1.10220667397 + 9808.53818466140 * x);
	L0 += 0.00000012733 * Utils.cost(1.79883375851 + 13745.34623902240 * x);
	L0 += 0.00000009779 * Utils.cost(3.60056884868 + 206.18554843720 * x);
	L0 += 0.00000012156 * Utils.cost(4.42295240981 + 14712.31711645800 * x);
	L0 += 0.00000008801 * Utils.cost(3.97218590685 + 170.67287061920 * x);
	L0 += 0.00000010685 * Utils.cost(4.33894776374 + 7740.60678358880 * x);
	L0 += 0.00000010041 * Utils.cost(1.38294666830 + 3583.34103067380 * x);
	L0 += 0.00000008499 * Utils.cost(4.29275471153 + 0.42988312670 * x);
	L0 += 0.00000009882 * Utils.cost(2.69148019691 + 36.60536530420 * x);
	L0 += 0.00000010585 * Utils.cost(0.89641284928 + 23384.28698689860 * x);
	L0 += 0.00000008478 * Utils.cost(2.86886131803 + 9381.93999378540 * x);
	L0 += 0.00000009560 * Utils.cost(4.33382353581 + 131.54196168640 * x);
	L0 += 0.00000008433 * Utils.cost(3.15239733970 + 6525.80445396540 * x);
	L0 += 0.00000007517 * Utils.cost(1.24476310635 + 6894.52394883760 * x);
	L0 += 0.00000006753 * Utils.cost(1.58869332894 + 6836.64525283380 * x);
	L0 += 0.00000006666 * Utils.cost(4.38910103043 + 66.48740891440 * x);
	L0 += 0.00000006697 * Utils.cost(5.77315870484 + 5202.35827933520 * x);
	L0 += 0.00000006188 * Utils.cost(1.57847967850 + 3325.35995551480 * x);
	L0 += 0.00000008392 * Utils.cost(2.90734956761 + 43.71891230500 * x);
	L0 += 0.00000006427 * Utils.cost(6.03333185624 + 574.34479833480 * x);
	L0 += 0.00000006296 * Utils.cost(0.06976040737 + 1964.83862685400 * x);
	L0 += 0.00000006144 * Utils.cost(5.43713363624 + 1861.74585263540 * x);
	L0 += 0.00000008180 * Utils.cost(0.43967386003 + 2707.82868738660 * x);
	L0 += 0.00000006532 * Utils.cost(1.24907069366 + 12964.30070339100 * x);
	L0 += 0.00000007341 * Utils.cost(4.95693808975 + 3767.21061757580 * x);
	L0 += 0.00000006134 * Utils.cost(3.16322441707 + 6680.24453233140 * x);
	L0 += 0.00000005937 * Utils.cost(4.22752447794 + 4459.36821880260 * x);
	L0 += 0.00000005848 * Utils.cost(4.30379700916 + 7875.67186362420 * x);
	L0 += 0.00000005895 * Utils.cost(0.77226207039 + 2699.73481931760 * x);
	L0 += 0.00000005962 * Utils.cost(3.01318151415 + 3369.06161416760 * x);
	L0 += 0.00000006307 * Utils.cost(1.77830983983 + 2178.13772229200 * x);
	L0 += 0.00000006103 * Utils.cost(4.49866000852 + 6682.20517446780 * x);
	L0 += 0.00000005770 * Utils.cost(0.96127853878 + 13916.01910964160 * x);
	L0 += 0.00000005725 * Utils.cost(4.93042706875 + 2384.32327072920 * x);
	L0 += 0.00000007576 * Utils.cost(6.16308742022 + 6531.66165626500 * x);
	L0 += 0.00000007285 * Utils.cost(0.52756973131 + 10575.40668294180 * x);
	L0 += 0.00000005212 * Utils.cost(3.48999909365 + 12935.85151592320 * x);
	L0 += 0.00000005266 * Utils.cost(4.51201042373 + 6144.42034130420 * x);
	L0 += 0.00000006632 * Utils.cost(3.48100908925 + 1118.75579210280 * x);
	L0 += 0.00000005182 * Utils.cost(3.25459432228 + 2391.43681773000 * x);
	L0 += 0.00000005214 * Utils.cost(0.01023839897 + 533.21408344360 * x);
	L0 += 0.00000005436 * Utils.cost(6.18510045571 + 8425.65083781480 * x);
	L0 += 0.00000005491 * Utils.cost(3.42235890731 + 3134.42687826260 * x);
	L0 += 0.00000005773 * Utils.cost(3.55190490896 + 8969.56889691100 * x);
	L0 += 0.00000005093 * Utils.cost(0.60873962999 + 8955.34180290940 * x);
	L0 += 0.00000004798 * Utils.cost(4.63144694279 + 4569.57454002200 * x);
	L0 += 0.00000005773 * Utils.cost(5.92316959013 + 640.87760738220 * x);
	L0 += 0.00000005661 * Utils.cost(0.75892958537 + 3120.19978426100 * x);
	L0 += 0.00000004912 * Utils.cost(1.70762118141 + 13358.92658845020 * x);
	L0 += 0.00000005438 * Utils.cost(4.29256867866 + 3503.07906283200 * x);
	L0 += 0.00000004631 * Utils.cost(3.34058594066 + 3116.26763099790 * x);
	L0 += 0.00000005823 * Utils.cost(2.39009621568 + 3302.47939106200 * x);
	L0 += 0.00000005095 * Utils.cost(1.12497131307 + 5331.35744374080 * x);
	L0 += 0.00000004409 * Utils.cost(1.38708732950 + 17256.63153634140 * x);
	L0 += 0.00000004193 * Utils.cost(0.19116539271 + 9830.38901398780 * x);
	L0 += 0.00000004164 * Utils.cost(0.43798301495 + 1066.49547719000 * x);
	L0 += 0.00000004220 * Utils.cost(1.69427060019 + 13524.91634293140 * x);
	L0 += 0.00000005192 * Utils.cost(3.63500646439 + 536.80451209540 * x);
	L0 += 0.00000005664 * Utils.cost(0.50446281443 + 5305.45105355380 * x);
	L0 += 0.00000005264 * Utils.cost(5.40031180025 + 3355.86489788480 * x);
	L0 += 0.00000005403 * Utils.cost(5.96867227489 + 3074.00538497800 * x);
	L0 += 0.00000004046 * Utils.cost(0.83826342101 + 10021.90459040220 * x);
	L0 += 0.00000004153 * Utils.cost(3.14497570817 + 8439.87793181640 * x);
	L0 += 0.00000004820 * Utils.cost(1.09025983917 + 13365.97282514820 * x);
	L0 += 0.00000004906 * Utils.cost(3.73078406569 + 1228.96211332220 * x);
	L0 += 0.00000004576 * Utils.cost(0.99344843456 + 6158.64743530580 * x);
	L0 += 0.00000004211 * Utils.cost(3.87091723842 + 3312.16323923200 * x);
	L0 += 0.00000004917 * Utils.cost(6.25051681717 + 17654.78053974960 * x);
	L0 += 0.00000003597 * Utils.cost(6.07298181151 + 10818.13528691580 * x);
	L0 += 0.00000003547 * Utils.cost(1.87663674277 + 17395.21973472580 * x);
	L0 += 0.00000003734 * Utils.cost(1.37011069213 + 3973.39616601300 * x);
	L0 += 0.00000004422 * Utils.cost(2.89974680697 + 6247.51311552280 * x);
	L0 += 0.00000003975 * Utils.cost(4.03441621102 + 1052.26838318840 * x);
	L0 += 0.00000004466 * Utils.cost(4.59188422424 + 5518.75014899180 * x);
	L0 += 0.00000003445 * Utils.cost(4.26610076208 + 3178.14579056760 * x);
	L0 += 0.00000003607 * Utils.cost(4.24527056399 + 8329.67161059700 * x);
	L0 += 0.00000003511 * Utils.cost(1.95133364438 + 10177.25767953360 * x);
	L0 += 0.00000003300 * Utils.cost(0.68865737747 + 149.56319713460 * x);
	L0 += 0.00000003235 * Utils.cost(3.90171358031 + 27.40155609680 * x);
	L0 += 0.00000003946 * Utils.cost(5.81982010903 + 6261.74020952440 * x);
	L0 += 0.00000003387 * Utils.cost(0.14377701728 + 10014.72373309860 * x);
	L0 += 0.00000003374 * Utils.cost(0.74722238154 + 6048.44111408640 * x);
	L0 += 0.00000003090 * Utils.cost(3.98540766861 + 2648.45482547300 * x);
	L0 += 0.00000003821 * Utils.cost(5.23987859516 + 5724.93569742900 * x);
	L0 += 0.00000003026 * Utils.cost(0.34314724795 + 220.41264243880 * x);
	L0 += 0.00000004052 * Utils.cost(1.24671617482 + 10021.76996979660 * x);
	L0 += 0.00000002937 * Utils.cost(0.73100893561 + 2.75151061100 * x);
	L0 += 0.00000003084 * Utils.cost(3.79925632319 + 169.58018313300 * x);
	L0 += 0.00000004040 * Utils.cost(2.91258200196 + 22747.29071487440 * x);
	L0 += 0.00000003246 * Utils.cost(4.90760526525 + 6702.00024889200 * x);
	L0 += 0.00000003223 * Utils.cost(0.92640008610 + 16865.52876963120 * x);
	L0 += 0.00000002879 * Utils.cost(1.47180601483 + 3346.13535100720 * x);
	L0 += 0.00000003723 * Utils.cost(0.49978317761 + 1.48447270830 * x);
	L0 += 0.00000002798 * Utils.cost(3.26910698548 + 9168.64089834740 * x);
	L0 += 0.00000003347 * Utils.cost(0.68791690253 + 3863.18984479360 * x);
	L0 += 0.00000003440 * Utils.cost(2.77706064625 + 6660.44945790720 * x);
	L0 += 0.00000002798 * Utils.cost(2.79673379094 + 16858.48253293320 * x);
	L0 += 0.00000002753 * Utils.cost(4.41190782119 + 3415.39402526710 * x);
	L0 += 0.00000002703 * Utils.cost(0.19222683184 + 3237.51965248120 * x);
	L0 += 0.00000002719 * Utils.cost(3.26628341377 + 3914.95722503460 * x);
	L0 += 0.00000002941 * Utils.cost(3.76169133143 + 6784.31762761820 * x);
	L0 += 0.00000003078 * Utils.cost(5.48104322207 + 3335.08950239240 * x);
	L0 += 0.00000002701 * Utils.cost(5.08537226206 + 6688.33840040040 * x);
	L0 += 0.00000002606 * Utils.cost(4.83032556909 + 4672.66731424060 * x);
	L0 += 0.00000002883 * Utils.cost(2.64068086362 + 3320.25710730100 * x);
	L0 += 0.00000003089 * Utils.cost(4.39619824300 + 1332.05488754080 * x);
	L0 += 0.00000003438 * Utils.cost(1.93467064449 + 10551.52824519400 * x);
	L0 += 0.00000003433 * Utils.cost(0.20933510815 + 6604.95878212400 * x);
	L0 += 0.00000002513 * Utils.cost(2.88151502604 + 17924.91069982040 * x);
	L0 += 0.00000002683 * Utils.cost(3.68680362407 + 3603.69635007260 * x);
	L0 += 0.00000002696 * Utils.cost(2.66931776730 + 10184.30391623160 * x);
	L0 += 0.00000002386 * Utils.cost(1.05710815775 + 3607.21946842160 * x);
	L0 += 0.00000002444 * Utils.cost(3.46901444423 + 6298.32832117640 * x);
	L0 += 0.00000002566 * Utils.cost(5.55941956468 + 6546.15977336420 * x);
	L0 += 0.00000002354 * Utils.cost(0.85896789940 + 3351.24909204960 * x);
	L0 += 0.00000002304 * Utils.cost(6.07210985790 + 1214.73501932060 * x);
	L0 += 0.00000002387 * Utils.cost(4.30419979225 + 3360.96774609859 * x);
	L0 += 0.00000003109 * Utils.cost(2.18099805904 + 16173.37116840440 * x);
	L0 += 0.00000002907 * Utils.cost(3.43894993113 + 2693.60159338500 * x);
	L0 += 0.00000002550 * Utils.cost(4.18354174372 + 3546.79797513700 * x);
	L0 += 0.00000002991 * Utils.cost(2.37500894603 + 13517.87010623340 * x);
	L0 += 0.00000002508 * Utils.cost(5.99249607455 + 5729.50644714900 * x);
	L0 += 0.00000002202 * Utils.cost(5.58486973955 + 664.75604513000 * x);
	L0 += 0.00000002467 * Utils.cost(2.81052575497 + 15110.46611986620 * x);
	L0 += 0.00000002154 * Utils.cost(3.59696831702 + 6677.63442474780 * x);
	L0 += 0.00000002166 * Utils.cost(3.35965682842 + 589.06482700820 * x);
	L0 += 0.00000002112 * Utils.cost(4.57048853017 + 6127.65545055720 * x);
	L0 += 0.00000002178 * Utils.cost(3.21663279493 + 20199.09495963300 * x);
	L0 += 0.00000002260 * Utils.cost(3.62776666288 + 7799.98064550240 * x);
	L0 += 0.00000002703 * Utils.cost(5.89441421026 + 6438.49624942560 * x);
	L0 += 0.00000002201 * Utils.cost(4.69972051344 + 17277.40693183380 * x);
	L0 += 0.00000002131 * Utils.cost(2.51801264340 + 1545.35398297880 * x);
	L0 += 0.00000002093 * Utils.cost(4.03688419630 + 6684.81528205140 * x);
	L0 += 0.00000002249 * Utils.cost(5.26171743929 + 5618.31980486140 * x);
	L0 += 0.00000002117 * Utils.cost(4.80404492675 + 3657.00429635640 * x);
	L0 += 0.00000002265 * Utils.cost(3.87401620754 + 110.20632121940 * x);
	L0 += 0.00000002521 * Utils.cost(4.21237950687 + 2494.52959194860 * x);
	L0 += 0.00000002492 * Utils.cost(6.10452779411 + 3329.97576135000 * x);
	L0 += 0.00000002154 * Utils.cost(4.59093274516 + 5625.36604155940 * x);
	L0 += 0.00000001929 * Utils.cost(1.21920197307 + 21.85082932640 * x);
	L0 += 0.00000002343 * Utils.cost(0.90613584736 + 227.47613278900 * x);
	L0 += 0.00000001871 * Utils.cost(2.03707390080 + 56.89837493560 * x);
	L0 += 0.00000001894 * Utils.cost(4.12432529517 + 3399.98628861340 * x);
	L0 += 0.00000002271 * Utils.cost(3.78951734652 + 7910.18696672180 * x);
	L0 += 0.00000001876 * Utils.cost(3.02034887080 + 4885.96640967860 * x);
	L0 += 0.00000002145 * Utils.cost(4.74972617629 + 18984.29263000960 * x);
	L0 += 0.00000002035 * Utils.cost(2.75110234296 + 128.01884333740 * x);
	L0 += 0.00000001770 * Utils.cost(2.73496011079 + 6606.44325483230 * x);
	L0 += 0.00000001733 * Utils.cost(1.70571779606 + 6.68366387410 * x);
	L0 += 0.00000001743 * Utils.cost(2.22986352012 + 17085.95866572220 * x);
	L0 += 0.00000001723 * Utils.cost(1.98207274526 + 735.87651353180 * x);
	L0 += 0.00000001814 * Utils.cost(0.92405242552 + 4555.34744602040 * x);
	L0 += 0.00000001661 * Utils.cost(3.07319305915 + 1692.16566950240 * x);
	L0 += 0.00000002332 * Utils.cost(5.05223613332 + 20618.01935853360 * x);
	L0 += 0.00000001653 * Utils.cost(3.86316179052 + 699.27114822760 * x);
	L0 += 0.00000001890 * Utils.cost(4.14080522607 + 5459.37628707820 * x);
	L0 += 0.00000001680 * Utils.cost(3.49750704538 + 3347.65866339780 * x);
	L0 += 0.00000001909 * Utils.cost(2.11478314309 + 6816.28993343500 * x);
	L0 += 0.00000001918 * Utils.cost(3.31232891649 + 3333.56619000180 * x);
	L0 += 0.00000001707 * Utils.cost(4.88386665097 + 3407.09983561420 * x);
	L0 += 0.00000001577 * Utils.cost(3.51777131580 + 13362.43245314700 * x);
	L0 += 0.00000001827 * Utils.cost(1.14937084769 + 2807.39834325620 * x);
	L0 += 0.00000002094 * Utils.cost(1.78938870686 + 20597.24396304120 * x);
	L0 += 0.00000001577 * Utils.cost(5.54854302324 + 13362.46696045140 * x);
	L0 += 0.00000001677 * Utils.cost(4.39073937265 + 8270.29774868340 * x);
	L0 += 0.00000001561 * Utils.cost(0.80246904730 + 3017.10701004240 * x);
	L0 += 0.00000001552 * Utils.cost(2.66876850182 + 3024.22055704320 * x);
	L0 += 0.00000001708 * Utils.cost(2.09721350898 + 2814.44457995420 * x);
	L0 += 0.00000002109 * Utils.cost(1.48733908496 + 2679.37949991880 * x);
	L0 += 0.00000001547 * Utils.cost(2.12956399169 + 661.23292678100 * x);
	L0 += 0.00000001764 * Utils.cost(5.90517079295 + 3326.38533269820 * x);
	L0 += 0.00000001503 * Utils.cost(4.34389183170 + 13936.79450513400 * x);
	L0 += 0.00000001504 * Utils.cost(0.83367652471 + 4775.76008845920 * x);
	L0 += 0.00000001543 * Utils.cost(5.82417982389 + 3344.49376205780 * x);
	L0 += 0.00000001458 * Utils.cost(1.42630589706 + 15508.61512327440 * x);
	L0 += 0.00000001648 * Utils.cost(2.88801518612 + 8273.82086703240 * x);
	L0 += 0.00000001527 * Utils.cost(1.10261249454 + 2675.85638156980 * x);
	L0 += 0.00000001800 * Utils.cost(5.17144672709 + 38.13303563780 * x);
	L0 += 0.00000001439 * Utils.cost(0.48751113425 + 76.26607127560 * x);
	L0 += 0.00000001478 * Utils.cost(4.63008666184 + 19800.94595622480 * x);
	L0 += 0.00000001770 * Utils.cost(2.18315009072 + 2301.58581590939 * x);
	L0 += 0.00000001712 * Utils.cost(2.60291779744 + 29.42950853600 * x);
	L0 += 0.00000001416 * Utils.cost(2.46912016889 + 2597.62236616720 * x);
	L0 += 0.00000001835 * Utils.cost(3.93223068469 + 6843.69148953180 * x);
	L0 += 0.00000001437 * Utils.cost(3.48241890037 + 3281.23856478620 * x);
	L0 += 0.00000001385 * Utils.cost(4.18004525683 + 2284.75361485960 * x);
	L0 += 0.00000001479 * Utils.cost(3.88994194685 + 6034.21402008480 * x);
	L0 += 0.00000001469 * Utils.cost(2.91808856545 + 12722.55242048520 * x);
	L0 += 0.00000001824 * Utils.cost(3.94139541752 + 18454.60166491500 * x);
	L0 += 0.00000001368 * Utils.cost(1.71899681607 + 13760.59871020740 * x);
	L0 += 0.00000001406 * Utils.cost(2.42916192473 + 853.19638175200 * x);
	L0 += 0.00000001361 * Utils.cost(4.69126219798 + 11081.21921028860 * x);
	L0 += 0.00000001375 * Utils.cost(4.90787845983 + 3304.58456002240 * x);
	L0 += 0.00000001544 * Utils.cost(3.23251603238 + 156.40072050240 * x);
	L0 += 0.00000001543 * Utils.cost(1.13497136095 + 3336.73109134180 * x);
	L0 += 0.00000001385 * Utils.cost(2.90281983822 + 1581.95934828300 * x);
	L0 += 0.00000001311 * Utils.cost(6.21748423079 + 2547.83753823240 * x);
	L0 += 0.00000001377 * Utils.cost(2.56537541792 + 568.82187402740 * x);
	L0 += 0.00000001474 * Utils.cost(4.65215247212 + 394.62588505920 * x);
	L0 += 0.00000001619 * Utils.cost(0.07481583409 + 1435.14766175940 * x);
	L0 += 0.00000001369 * Utils.cost(0.08979359617 + 7895.95987272020 * x);
	L0 += 0.00000001272 * Utils.cost(5.84659079053 + 21.33564046700 * x);
	L0 += 0.00000001331 * Utils.cost(3.80007277718 + 13119.72110282519 * x);
	L0 += 0.00000001202 * Utils.cost(5.90681878458 + 187.92514776260 * x);
	L0 += 0.00000001284 * Utils.cost(5.30205682052 + 6571.01853218020 * x);
	L0 += 0.00000001468 * Utils.cost(5.91503888421 + 3339.12795399150 * x);
	L0 += 0.00000001497 * Utils.cost(2.57629850836 + 151.89728108520 * x);
	L0 += 0.00000001270 * Utils.cost(4.08996241400 + 4356.27544458400 * x);
	L0 += 0.00000001159 * Utils.cost(0.00546309207 + 799.82112516540 * x);
	L0 += 0.00000001154 * Utils.cost(1.81024985603 + 158.94351778320 * x);
	L0 += 0.00000001170 * Utils.cost(4.15567553953 + 14.22709400160 * x);
	L0 += 0.00000001349 * Utils.cost(0.39391022745 + 2540.79130153440 * x);
	L0 += 0.00000001403 * Utils.cost(4.89956428847 + 4039.88357492740 * x);
	L0 += 0.00000001188 * Utils.cost(3.46422365287 + 1015.66301788420 * x);
	L0 += 0.00000001136 * Utils.cost(5.54132891775 + 13553.89797291080 * x);
	L0 += 0.00000001282 * Utils.cost(4.52288421340 + 3929.67725370800 * x);
	L0 += 0.00000001124 * Utils.cost(1.40102701439 + 13149.15061136120 * x);
	L0 += 0.00000001254 * Utils.cost(3.84775964741 + 3980.50971301380 * x);
	L0 += 0.00000001121 * Utils.cost(5.04552583589 + 23141.55838292460 * x);
	L0 += 0.00000001088 * Utils.cost(0.89388884633 + 3340.19235060619 * x);
	L0 += 0.00000001476 * Utils.cost(4.20852908107 + 16460.33352952499 * x);
	L0 += 0.00000001084 * Utils.cost(5.70551481838 + 3760.09707057500 * x);
	L0 += 0.00000001197 * Utils.cost(1.24543578245 + 26724.89941359840 * x);
	L0 += 0.00000001253 * Utils.cost(5.82286965998 + 3344.54457996290 * x);
	L0 += 0.00000001078 * Utils.cost(6.24742453183 + 17.81252211800 * x);
	L0 += 0.00000001462 * Utils.cost(2.27467510211 + 369.69981594040 * x);
	L0 += 0.00000001044 * Utils.cost(4.34158344243 + 2277.70737816160 * x);
	L0 += 0.00000001099 * Utils.cost(4.08747611117 + 802.36392244620 * x);
	L0 += 0.00000001122 * Utils.cost(4.31726854418 + 107.66352393860 * x);
	L0 += 0.00000001148 * Utils.cost(0.42666214138 + 949.17560896980 * x);
	L0 += 0.00000001183 * Utils.cost(0.31560034120 + 1162.47470440780 * x);
	L0 += 0.00000001130 * Utils.cost(3.46061330657 + 5732.04924442980 * x);
	L0 += 0.00000001059 * Utils.cost(1.34075999078 + 2149.68853482420 * x);
	L0 += 0.00000001126 * Utils.cost(5.22902222299 + 194.97138446060 * x);
	L0 += 0.00000000977 * Utils.cost(3.44426658417 + 9779.10867612540 * x);
	L0 += 0.00000001134 * Utils.cost(0.13507173479 + 12566.15169998280 * x);
	L0 += 0.00000001185 * Utils.cost(3.65682936623 + 6456.88005769770 * x);
	L0 += 0.00000000962 * Utils.cost(4.85370284827 + 3510.19260983280 * x);
	L0 += 0.00000001033 * Utils.cost(2.47380728164 + 31.97230581680 * x);
	L0 += 0.00000001172 * Utils.cost(1.72927931309 + 6923.95345737360 * x);
	L0 += 0.00000000986 * Utils.cost(1.05152205629 + 16335.83780453660 * x);
	L0 += 0.00000001292 * Utils.cost(6.02388659607 + 3316.73398895200 * x);
	L0 += 0.00000000932 * Utils.cost(1.56812178735 + 111.18664228760 * x);
	L0 += 0.00000001130 * Utils.cost(2.06879370733 + 3376.64029337720 * x);
	L0 += 0.00000000924 * Utils.cost(0.82106390115 + 3364.49086444760 * x);
	L0 += 0.00000001005 * Utils.cost(5.48594935121 + 11236.57229942000 * x);
	L0 += 0.00000000936 * Utils.cost(1.58837554752 + 10235.13637553740 * x);
	L0 += 0.00000001063 * Utils.cost(1.93321644244 + 87.30820453981 * x);
	L0 += 0.00000000945 * Utils.cost(5.10393817688 + 8013.27974094040 * x);
	L0 += 0.00000000957 * Utils.cost(4.41421752360 + 433.71173787680 * x);
	L0 += 0.00000000921 * Utils.cost(1.71021166461 + 2067.93140107260 * x);
	L0 += 0.00000000910 * Utils.cost(1.91562889347 + 401.67212175720 * x);
	L0 += 0.00000000931 * Utils.cost(4.61327789373 + 5415.65737477320 * x);
	L0 += 0.00000001033 * Utils.cost(3.98512631089 + 10596.18207843420 * x);
	L0 += 0.00000000908 * Utils.cost(5.30549216988 + 7107.82304427560 * x);
	L0 += 0.00000000945 * Utils.cost(0.21610469082 + 9872.27408296480 * x);
	L0 += 0.00000000991 * Utils.cost(2.76931703924 + 5938.23479286700 * x);
	L0 += 0.00000000918 * Utils.cost(4.37217510741 + 1854.63230563460 * x);
	L0 += 0.00000000889 * Utils.cost(1.81025662091 + 2409.24933984800 * x);
	L0 += 0.00000001058 * Utils.cost(3.63303046818 + 7255.56965173440 * x);
	L0 += 0.00000000860 * Utils.cost(2.78826625605 + 5621.86017686260 * x);
	L0 += 0.00000000860 * Utils.cost(0.75749461239 + 5621.82566955820 * x);
	L0 += 0.00000000850 * Utils.cost(3.82228424021 + 272.67295735160 * x);
	L0 += 0.00000000851 * Utils.cost(0.25287875945 + 11766.26326451460 * x);
	L0 += 0.00000000853 * Utils.cost(1.84243320985 + 2142.64229812620 * x);
	L0 += 0.00000001030 * Utils.cost(0.42255009123 + 1596.18644228460 * x);
	L0 += 0.00000000826 * Utils.cost(1.26069501589 + 20206.14119633100 * x);
	L0 += 0.00000000835 * Utils.cost(4.64394754967 + 127.95153303460 * x);
	L0 += 0.00000001046 * Utils.cost(3.50232998647 + 9866.41688066520 * x);
	L0 += 0.00000000824 * Utils.cost(2.42928138519 + 11.04570026390 * x);
	L0 += 0.00000001090 * Utils.cost(6.06536924506 + 3341.03250279340 * x);
	L0 += 0.00000000808 * Utils.cost(1.17345081945 + 6460.81221096080 * x);
	L0 += 0.00000000821 * Utils.cost(0.19617131185 + 22743.40937951640 * x);
	L0 += 0.00000000804 * Utils.cost(5.03144428114 + 2.54279728080 * x);
	L0 += 0.00000001074 * Utils.cost(2.80025232939 + 3077.52850332700 * x);
	L0 += 0.00000000794 * Utils.cost(4.57067003887 + 5223.69391980220 * x);
	L0 += 0.00000000822 * Utils.cost(0.90150471199 + 8646.06348025360 * x);
	L0 += 0.00000000884 * Utils.cost(1.71007411939 + 3.93215326310 * x);
	L0 += 0.00000000850 * Utils.cost(1.24977903471 + 12295.95422960920 * x);
	L0 += 0.00000000926 * Utils.cost(3.02847055739 + 3377.21779200400 * x);
	L0 += 0.00000000779 * Utils.cost(1.97930055918 + 5408.54382777240 * x);
	L0 += 0.00000000960 * Utils.cost(6.16414205869 + 8542.97070603500 * x);
	L0 += 0.00000000785 * Utils.cost(4.63077378309 + 3341.04230982650 * x);
	L0 += 0.00000000752 * Utils.cost(3.51125131831 + 10020.85695903120 * x);
	L0 += 0.00000000749 * Utils.cost(2.50286751020 + 2295.45759051220 * x);
	L0 += 0.00000000801 * Utils.cost(4.54004277501 + 1039.02661079040 * x);
	L0 += 0.00000000735 * Utils.cost(3.91703254169 + 12310.18132361080 * x);
	L0 += 0.00000000784 * Utils.cost(3.24368310213 + 3384.33133900480 * x);
	L0 += 0.00000000719 * Utils.cost(3.35536995801 + 11780.49035851620 * x);
	L0 += 0.00000000940 * Utils.cost(3.58974561600 + 23539.70738633280 * x);
	L0 += 0.00000000865 * Utils.cost(1.12444569157 + 206.70073729660 * x);
	L0 += 0.00000000731 * Utils.cost(5.61232905415 + 16062.18452611680 * x);
	L0 += 0.00000000823 * Utils.cost(2.65316808033 + 3169.93955608060 * x);
	L0 += 0.00000000903 * Utils.cost(4.86743346013 + 931.36308685180 * x);
	L0 += 0.00000000705 * Utils.cost(1.46305394620 + 792.77488846740 * x);
	L0 += 0.00000000754 * Utils.cost(2.89691411536 + 3296.89351439480 * x);
	L0 += 0.00000000736 * Utils.cost(2.21038016464 + 146.81168652360 * x);
	L0 += 0.00000000785 * Utils.cost(2.32844966721 + 3340.18254357310 * x);
	L0 += 0.00000000685 * Utils.cost(2.34948834397 + 1.18064265210 * x);
	L0 += 0.00000000677 * Utils.cost(4.33803507050 + 3877.41693879520 * x);
	L0 += 0.00000000729 * Utils.cost(3.56726385957 + 485.97205278960 * x);
	L0 += 0.00000000668 * Utils.cost(5.16798891078 + 12721.57209941700 * x);
	L0 += 0.00000000713 * Utils.cost(4.80558699772 + 4142.97634914600 * x);
	L0 += 0.00000000842 * Utils.cost(1.59708732155 + 16304.91313009080 * x);
	L0 += 0.00000000698 * Utils.cost(1.91829605833 + 6665.97238221460 * x);
	L0 += 0.00000000698 * Utils.cost(4.64681188157 + 11216.28429032400 * x);
	L0 += 0.00000000684 * Utils.cost(3.88514563357 + 846.08283475120 * x);
	L0 += 0.00000000666 * Utils.cost(2.23927960017 + 20735.83216142559 * x);
	L0 += 0.00000000638 * Utils.cost(2.05380863176 + 16699.53901514999 * x);
	L0 += 0.00000000726 * Utils.cost(5.04566216294 + 3329.56672643590 * x);
	L0 += 0.00000000697 * Utils.cost(0.30680314664 + 19676.45023123640 * x);
	L0 += 0.00000000650 * Utils.cost(3.23944472757 + 9588.12554222260 * x);
	L0 += 0.00000000736 * Utils.cost(2.24443728739 + 11250.79939342160 * x);
	L0 += 0.00000000692 * Utils.cost(1.76465916332 + 51.28033786241 * x);
	L0 += 0.00000000645 * Utils.cost(0.07661067442 + 52.26031491280 * x);
	L0 += 0.00000000685 * Utils.cost(2.72118140264 + 6643.09181776180 * x);
	L0 += 0.00000000684 * Utils.cost(1.26157751115 + 142.17862703620 * x);
	L0 += 0.00000000635 * Utils.cost(3.85231847116 + 6.06591562980 * x);
	L0 += 0.00000000819 * Utils.cost(6.04967230806 + 19402.79695281660 * x);
	L0 += 0.00000000664 * Utils.cost(3.60223930010 + 1903.43681250120 * x);
	L0 += 0.00000000613 * Utils.cost(4.96450118774 + 8859.36257569160 * x);
	L0 += 0.00000000615 * Utils.cost(5.74467417840 + 6696.47732458460 * x);
	L0 += 0.00000000622 * Utils.cost(1.64154132852 + 24150.08005134500 * x);
	L0 += 0.00000000659 * Utils.cost(0.12506816965 + 8116.37251515900 * x);
	L0 += 0.00000000679 * Utils.cost(1.94943016061 + 12995.22537783680 * x);
	L0 += 0.00000000616 * Utils.cost(4.94607504516 + 9485.03276800400 * x);
	L0 += 0.00000000793 * Utils.cost(2.84922599989 + 29.49181830340 * x);
	L0 += 0.00000000597 * Utils.cost(5.72067567055 + 3113.13629391080 * x);
	L0 += 0.00000000763 * Utils.cost(0.42513533173 + 3873.82651014340 * x);
	L0 += 0.00000000587 * Utils.cost(1.31684217558 + 9499.25986200560 * x);
	L0 += 0.00000000592 * Utils.cost(4.34796024028 + 3826.58447948940 * x);
	L0 += 0.00000000652 * Utils.cost(5.53658742492 + 9065.54812412880 * x);
	L0 += 0.00000000583 * Utils.cost(0.59190068342 + 26084.02180621620 * x);
	L0 += 0.00000000603 * Utils.cost(0.77135566630 + 3342.09689940810 * x);
	L0 += 0.00000000701 * Utils.cost(3.35897774328 + 6709.67404086740 * x);
	L0 += 0.00000000574 * Utils.cost(1.08976979801 + 6357.71943674220 * x);
	L0 += 0.00000000750 * Utils.cost(4.84737198179 + 10022.81760116760 * x);
	L0 += 0.00000000588 * Utils.cost(5.65927128604 + 2171.02417529120 * x);
	L0 += 0.00000000632 * Utils.cost(3.84852695407 + 16276.46394262300 * x);
	L0 += 0.00000000632 * Utils.cost(1.43230388645 + 16706.58525184800 * x);
	L0 += 0.00000000780 * Utils.cost(1.15181502540 + 377.37360791580 * x);
	L0 += 0.00000000554 * Utils.cost(4.18192049239 + 382.87927857100 * x);
	L0 += 0.00000000568 * Utils.cost(0.03816333919 + 6414.61781167780 * x);
	L0 += 0.00000000569 * Utils.cost(2.57704345512 + 35.56273446860 * x);
	L0 += 0.00000000566 * Utils.cost(0.62804830762 + 3189.56475685690 * x);
	L0 += 0.00000000687 * Utils.cost(5.61456944029 + 155.35308913140 * x);
	L0 += 0.00000000563 * Utils.cost(2.57358138188 + 19406.67828817460 * x);
	L0 += 0.00000000693 * Utils.cost(1.15645091892 + 966.97087743560 * x);
	L0 += 0.00000000576 * Utils.cost(1.60357663736 + 3192.53370227350 * x);
	L0 += 0.00000000621 * Utils.cost(2.23214771591 + 3274.12501778540 * x);
	L0 += 0.00000000586 * Utils.cost(6.17266280012 + 9602.35263622420 * x);
	L0 += 0.00000000541 * Utils.cost(0.53968808391 + 13171.00144068760 * x);
	L0 += 0.00000000570 * Utils.cost(3.11852290115 + 2221.85663459700 * x);
	L0 += 0.00000000542 * Utils.cost(0.41889651002 + 1641.33321019660 * x);
	L0 += 0.00000000532 * Utils.cost(0.16606105669 + 5511.63660199100 * x);
	L0 += 0.00000000530 * Utils.cost(3.78205188174 + 7270.28968040780 * x);
	L0 += 0.00000000575 * Utils.cost(5.48929613719 + 2075.04494807340 * x);
	L0 += 0.00000000670 * Utils.cost(3.67090656417 + 6475.03930496240 * x);
	L0 += 0.00000000509 * Utils.cost(4.21526585284 + 7380.49600162720 * x);
	L0 += 0.00000000510 * Utils.cost(1.59587338243 + 13362.38239649640 * x);
	L0 += 0.00000000494 * Utils.cost(2.13711598060 + 2604.73591316800 * x);
	L0 += 0.00000000534 * Utils.cost(1.03109772656 + 1478.86657406440 * x);
	L0 += 0.00000000506 * Utils.cost(5.92145494356 + 685.04405422600 * x);
	L0 += 0.00000000469 * Utils.cost(0.83917541691 + 3041.48603243060 * x);
	L0 += 0.00000000468 * Utils.cost(1.97135671591 + 2412.77245819700 * x);
	L0 += 0.00000000468 * Utils.cost(4.57635781664 + 11670.28403729680 * x);
	L0 += 0.00000000559 * Utils.cost(1.47641018288 + 8671.96987044060 * x);
	L0 += 0.00000000475 * Utils.cost(2.07517976424 + 5835.14201864840 * x);
	L0 += 0.00000000466 * Utils.cost(2.92801596791 + 2277.29834324750 * x);
	L0 += 0.00000000478 * Utils.cost(6.13550464878 + 4825.54491639400 * x);
	L0 += 0.00000000502 * Utils.cost(0.77928275348 + 4407.10790388980 * x);
	L0 += 0.00000000462 * Utils.cost(3.80503324215 + 11140.59307220220 * x);
	L0 += 0.00000000499 * Utils.cost(3.25557381873 + 1744.49329471800 * x);
	L0 += 0.00000000525 * Utils.cost(0.74022979976 + 1265.56747862640 * x);
	L0 += 0.00000000521 * Utils.cost(6.27577138682 + 3981.49003408200 * x);
	L0 += 0.00000000482 * Utils.cost(0.14820337530 + 14158.74771361560 * x);
	L0 += 0.00000000460 * Utils.cost(2.03348517376 + 25685.87280280800 * x);
	L0 += 0.00000000510 * Utils.cost(4.27704405425 + 3472.15438838620 * x);
	L0 += 0.00000000444 * Utils.cost(1.95486223268 + 3226.21331978640 * x);
	L0 += 0.00000000575 * Utils.cost(0.59007504383 + 2766.26762836500 * x);
	L0 += 0.00000000437 * Utils.cost(5.63861950911 + 8958.93223156120 * x);
	L0 += 0.00000000492 * Utils.cost(6.10071747922 + 2285.16264977370 * x);
	L0 += 0.00000000572 * Utils.cost(5.10308842466 + 8564.30634650200 * x);
	L0 += 0.00000000430 * Utils.cost(4.12851356192 + 13.24177239800 * x);
	L0 += 0.00000000544 * Utils.cost(4.78254843814 + 9380.95967271720 * x);
	L0 += 0.00000000430 * Utils.cost(3.83861916944 + 1765.76662541760 * x);
	L0 += 0.00000000499 * Utils.cost(4.26055736809 + 6652.77566593180 * x);
	L0 += 0.00000000541 * Utils.cost(0.84245625839 + 4981.94563689640 * x);
	L0 += 0.00000000591 * Utils.cost(2.01874828234 + 27490.69247804480 * x);
	L0 += 0.00000000438 * Utils.cost(1.36437546581 + 12509.25332504720 * x);
	L0 += 0.00000000470 * Utils.cost(4.70961176845 + 3723.49170527080 * x);
	L0 += 0.00000000421 * Utils.cost(1.76100140625 + 956.28915597060 * x);
	L0 += 0.00000000413 * Utils.cost(0.49206034039 + 13355.33615979840 * x);
	L0 += 0.00000000412 * Utils.cost(0.29353415123 + 2810.93871525740 * x);
	L0 += 0.00000000412 * Utils.cost(3.24865417750 + 18451.07854656599 * x);
	L0 += 0.00000000412 * Utils.cost(1.70721395764 + 7314.00859271280 * x);
	L0 += 0.00000000412 * Utils.cost(4.54594776716 + 2810.90420795300 * x);
	L0 += 0.00000000448 * Utils.cost(3.04254429984 + 5636.07001721200 * x);
	L0 += 0.00000000510 * Utils.cost(1.18739936388 + 13362.51701710200 * x);
	L0 += 0.00000000408 * Utils.cost(1.32068176489 + 20809.46762464520 * x);
	L0 += 0.00000000427 * Utils.cost(1.16100742040 + 19004.64794940840 * x);
	L0 += 0.00000000420 * Utils.cost(3.49180180953 + 1655.56030419820 * x);
	L0 += 0.00000000433 * Utils.cost(0.55429134487 + 9945.57120882380 * x);
	L0 += 0.00000000424 * Utils.cost(4.60854671688 + 6518.75821726740 * x);
	L0 += 0.00000000415 * Utils.cost(5.67120343816 + 99.56965586960 * x);
	L0 += 0.00000000476 * Utils.cost(5.94537443289 + 48835.19385644859 * x);
	L0 += 0.00000000405 * Utils.cost(5.63206200287 + 3450.81874791920 * x);
	L0 += 0.00000000495 * Utils.cost(4.38317490235 + 2480.30249794700 * x);
	L0 += 0.00000000415 * Utils.cost(3.61905205961 + 2089.78223039900 * x);
	L0 += 0.00000000395 * Utils.cost(0.25208772249 + 1375.77379984580 * x);
	L0 += 0.00000000421 * Utils.cost(2.26337694295 + 13892.14067189380 * x);
	L0 += 0.00000000391 * Utils.cost(5.25566087245 + 10042.61267559180 * x);
	L0 += 0.00000000504 * Utils.cost(4.91016850189 + 8965.97846825920 * x);
	L0 += 0.00000000417 * Utils.cost(3.45088934666 + 279.78650435240 * x);
	L0 += 0.00000000389 * Utils.cost(0.98703891513 + 7203.80227149340 * x);
	L0 += 0.00000000431 * Utils.cost(2.11881719623 + 56.80326216980 * x);
	L0 += 0.00000000497 * Utils.cost(1.63121523594 + 22345.26037610820 * x);
	L0 += 0.00000000377 * Utils.cost(4.06263841184 + 10124.93005431800 * x);
	L0 += 0.00000000377 * Utils.cost(3.16019395941 + 224.34479570190 * x);
	L0 += 0.00000000378 * Utils.cost(5.82532048605 + 6675.70192909220 * x);
	L0 += 0.00000000377 * Utils.cost(0.05833226835 + 905.45669666480 * x);
	L0 += 0.00000000445 * Utils.cost(0.33560120738 + 515.46387109300 * x);
	L0 += 0.00000000426 * Utils.cost(2.66458973231 + 4076.48894023160 * x);
	L0 += 0.00000000489 * Utils.cost(0.75760372851 + 3561.02506913860 * x);
	L0 += 0.00000000389 * Utils.cost(0.50283826580 + 2825.14855560680 * x);
	L0 += 0.00000000396 * Utils.cost(5.14198726837 + 5195.24473233440 * x);
	L0 += 0.00000000414 * Utils.cost(3.12530321804 + 10001.06188460700 * x);
	L0 += 0.00000000502 * Utils.cost(5.02356488339 + 73.29712585900 * x);
	L0 += 0.00000000432 * Utils.cost(3.31538359140 + 5617.91076994730 * x);
	L0 += 0.00000000359 * Utils.cost(4.97622870666 + 5820.91492464680 * x);
	L0 += 0.00000000359 * Utils.cost(5.42072227300 + 6019.99192661860 * x);
	L0 += 0.00000000449 * Utils.cost(3.79544854612 + 4996.17273089800 * x);
	L0 += 0.00000000374 * Utils.cost(2.85563965649 + 2111.65031337760 * x);
	L0 += 0.00000000426 * Utils.cost(0.24129917209 + 5625.77507647350 * x);
	L0 += 0.00000000423 * Utils.cost(3.60507971235 + 8226.57883637840 * x);
	L0 += 0.00000000402 * Utils.cost(4.51813719510 + 4392.88080988820 * x);
	L0 += 0.00000000391 * Utils.cost(4.26714089799 + 21795.21409161479 * x);
	L0 += 0.00000000447 * Utils.cost(4.25776540974 + 18052.92954315780 * x);
	L0 += 0.00000000355 * Utils.cost(4.17584780659 + 6740.59871531320 * x);
	L0 += 0.00000000353 * Utils.cost(1.81574804066 + 6686.74777770700 * x);
	L0 += 0.00000000462 * Utils.cost(3.22304237134 + 2011.10033643980 * x);
	L0 += 0.00000000341 * Utils.cost(3.22071023668 + 4253.18267036540 * x);
	L0 += 0.00000000475 * Utils.cost(4.28822688035 + 367.22432896240 * x);
	L0 += 0.00000000462 * Utils.cost(2.91312544527 + 418.92439890060 * x);
	L0 += 0.00000000416 * Utils.cost(4.83203726375 + 8535.85715903420 * x);
	L0 += 0.00000000431 * Utils.cost(3.22440150226 + 21265.52312652020 * x);
	L0 += 0.00000000333 * Utils.cost(3.99300815003 + 1353.39052800780 * x);
	L0 += 0.00000000340 * Utils.cost(0.71636465254 + 15664.03552270859 * x);
	L0 += 0.00000000416 * Utils.cost(2.58443168474 + 5753.38488489680 * x);
	L0 += 0.00000000356 * Utils.cost(2.35639379021 + 4.57074972000 * x);
	L0 += 0.00000000330 * Utils.cost(4.04831945983 + 3.10304225540 * x);
	L0 += 0.00000000381 * Utils.cost(4.06283076724 + 1062.90504853820 * x);
	L0 += 0.00000000431 * Utils.cost(5.42246026973 + 26482.17080962440 * x);
	L0 += 0.00000000328 * Utils.cost(4.06276954550 + 6944.30877677240 * x);
	L0 += 0.00000000334 * Utils.cost(5.10221163477 + 22324.90505670940 * x);
	L0 += 0.00000000400 * Utils.cost(2.28211698182 + 3209.07046501340 * x);
	L0 += 0.00000000420 * Utils.cost(2.44159662565 + 6155.05700665400 * x);
	L0 += 0.00000000375 * Utils.cost(1.09229714548 + 4246.06912336460 * x);
	L0 += 0.00000000449 * Utils.cost(4.38183542571 + 5106.37905211740 * x);
	L0 += 0.00000000330 * Utils.cost(2.55172725319 + 19513.98359510420 * x);
	L0 += 0.00000000319 * Utils.cost(4.05704496382 + 5430.39465709880 * x);
	L0 += 0.00000000310 * Utils.cost(4.99907184482 + 5095.67507646480 * x);
	L0 += 0.00000000344 * Utils.cost(0.62691832180 + 9389.05354078620 * x);
	L0 += 0.00000000319 * Utils.cost(3.31673970253 + 596.17837400900 * x);
	L0 += 0.00000000305 * Utils.cost(4.66942910910 + 6756.00645196690 * x);
	L0 += 0.00000000409 * Utils.cost(6.07568936266 + 50.83245930580 * x);
	L0 += 0.00000000377 * Utils.cost(5.42211267415 + 1190.92389187560 * x);
	L0 += 0.00000000342 * Utils.cost(2.67821304845 + 6148.01076995600 * x);
	L0 += 0.00000000298 * Utils.cost(5.91093444215 + 9886.77220006400 * x);
	L0 += 0.00000000299 * Utils.cost(5.44077050156 + 10028.95082710020 * x);
	L0 += 0.00000000315 * Utils.cost(1.03304445564 + 3490.17562383440 * x);
	L0 += 0.00000000369 * Utils.cost(3.93279262125 + 1879.55837475340 * x);
	L0 += 0.00000000304 * Utils.cost(4.56372485787 + 7483.58877584580 * x);
	L0 += 0.00000000330 * Utils.cost(3.29725079066 + 286.96236112060 * x);
	L0 += 0.00000000290 * Utils.cost(3.43850024020 + 6418.14093002680 * x);
	L0 += 0.00000000289 * Utils.cost(2.82766045300 + 3171.03224356680 * x);
	L0 += 0.00000000317 * Utils.cost(4.13345374602 + 1883.08149310240 * x);
	L0 += 0.00000000294 * Utils.cost(0.01906732590 + 202.25339517410 * x);
	L0 += 0.00000000310 * Utils.cost(4.37565854379 + 2796.69436760360 * x);
	L0 += 0.00000000364 * Utils.cost(0.54935210242 + 290.48547946960 * x);
	L0 += 0.00000000291 * Utils.cost(2.39413982848 + 29026.48522950779 * x);
	L0 += 0.00000000286 * Utils.cost(5.76562894312 + 5642.19824260920 * x);
	L0 += 0.00000000392 * Utils.cost(3.01171327788 + 10721.10842832700 * x);
	L0 += 0.00000000318 * Utils.cost(4.93376925851 + 1197.97012857360 * x);
	L0 += 0.00000000315 * Utils.cost(2.84437840100 + 10610.90210710760 * x);
	L0 += 0.00000000299 * Utils.cost(1.18299169304 + 550.04628449340 * x);
	L0 += 0.00000000336 * Utils.cost(4.30769818760 + 5989.06725217280 * x);
	L0 += 0.00000000315 * Utils.cost(1.41407863340 + 6947.83189512140 * x);
	L0 += 0.00000000294 * Utils.cost(6.16453752963 + 8982.81066930900 * x);
	L0 += 0.00000000285 * Utils.cost(2.82644088669 + 9654.61295113700 * x);
	L0 += 0.00000000281 * Utils.cost(0.27739627997 + 8166.15734309380 * x);
	L0 += 0.00000000279 * Utils.cost(4.08648927643 + 5355.23588148860 * x);
	L0 += 0.00000000330 * Utils.cost(3.11968019451 + 41.55079098480 * x);
	L0 += 0.00000000275 * Utils.cost(5.89019272334 + 3337.86091608880 * x);
	L0 += 0.00000000275 * Utils.cost(4.00268079937 + 3620.39893105220 * x);
	L0 += 0.00000000292 * Utils.cost(3.06830662617 + 4.36203638980 * x);
	L0 += 0.00000000317 * Utils.cost(0.01919037405 + 2267.00340250900 * x);
	L0 += 0.00000000272 * Utils.cost(1.70373580224 + 3742.28454845700 * x);
	L0 += 0.00000000294 * Utils.cost(0.16019381973 + 6670.58818804980 * x);
	L0 += 0.00000000264 * Utils.cost(2.07967576148 + 3735.23831175900 * x);
	L0 += 0.00000000262 * Utils.cost(4.49437120405 + 6887.41040183680 * x);
	L0 += 0.00000000307 * Utils.cost(3.03375977801 + 6660.86953400080 * x);
	L0 += 0.00000000280 * Utils.cost(0.47728086796 + 5401.43028077160 * x);
	L0 += 0.00000000268 * Utils.cost(0.46331887242 + 6578.13207918100 * x);
	L0 += 0.00000000312 * Utils.cost(3.62016422039 + 255.97037637200 * x);
	L0 += 0.00000000278 * Utils.cost(5.62032972822 + 3378.74546233760 * x);
	L0 += 0.00000000268 * Utils.cost(2.97528422526 + 21947.11137270000 * x);
	L0 += 0.00000000303 * Utils.cost(2.71946492092 + 3313.21087060300 * x);
	L0 += 0.00000000263 * Utils.cost(3.85883671333 + 28628.33622609960 * x);
	L0 += 0.00000000257 * Utils.cost(0.25607724431 + 19146.75926614180 * x);
	L0 += 0.00000000282 * Utils.cost(2.29169514758 + 2008.55753915900 * x);
	L0 += 0.00000000301 * Utils.cost(0.83275594655 + 2806.98930834210 * x);
	L0 += 0.00000000264 * Utils.cost(3.78635346388 + 3936.79080070880 * x);
	L0 += 0.00000000254 * Utils.cost(1.28062508539 + 95.97922721780 * x);
	L0 += 0.00000000250 * Utils.cost(5.58493858560 + 412.37109687440 * x);
	L0 += 0.00000000284 * Utils.cost(4.71065509252 + 5621.91023351320 * x);
	L0 += 0.00000000286 * Utils.cost(5.11854366190 + 5621.77561290760 * x);
	L0 += 0.00000000254 * Utils.cost(5.77068701321 + 5813.29118932200 * x);
	L0 += 0.00000000311 * Utils.cost(2.67573060947 + 912.57024366560 * x);
	L0 += 0.00000000252 * Utils.cost(4.19548440341 + 24.85875881600 * x);
	L0 += 0.00000000255 * Utils.cost(1.80023727978 + 3193.80074017620 * x);
	L0 += 0.00000000247 * Utils.cost(2.94199704738 + 310.84079886840 * x);
	L0 += 0.00000000261 * Utils.cost(5.68285399692 + 3133.91168940320 * x);
	L0 += 0.00000000255 * Utils.cost(4.46589323429 + 5490.30096152400 * x);
	L0 += 0.00000000247 * Utils.cost(2.28207487665 + 246.25172232300 * x);
	L0 += 0.00000000257 * Utils.cost(5.64335704456 + 10706.88133432540 * x);
	L0 += 0.00000000246 * Utils.cost(0.26910281348 + 22.76849660940 * x);
	L0 += 0.00000000241 * Utils.cost(0.03931394254 + 9070.11887384880 * x);
	L0 += 0.00000000283 * Utils.cost(1.30585259585 + 4025.65648092580 * x);
	L0 += 0.00000000272 * Utils.cost(1.28327911416 + 1442.26120876020 * x);
	L0 += 0.00000000294 * Utils.cost(4.02082336381 + 2814.85361486830 * x);
	L0 += 0.00000000249 * Utils.cost(4.92144829429 + 31022.75317085620 * x);
	L0 += 0.00000000237 * Utils.cost(3.07683243726 + 9947.05568153210 * x);
	L0 += 0.00000000236 * Utils.cost(6.05766380360 + 948.19528790160 * x);
	L0 += 0.00000000309 * Utils.cost(3.45153658664 + 25287.72379939980 * x);
	L0 += 0.00000000232 * Utils.cost(4.99538565545 + 1505.28780909299 * x);
	L0 += 0.00000000275 * Utils.cost(1.20294105507 + 6691.86151874940 * x);
	L0 += 0.00000000305 * Utils.cost(2.73902403412 + 176.69373013380 * x);
	L0 += 0.00000000231 * Utils.cost(5.13610567818 + 6997.61672305620 * x);
	L0 += 0.00000000237 * Utils.cost(0.90339496046 + 8.09386806900 * x);
	L0 += 0.00000000229 * Utils.cost(0.63250047970 + 23017.06265793620 * x);
	L0 += 0.00000000249 * Utils.cost(6.05357589804 + 2060.81785407180 * x);
	L0 += 0.00000000270 * Utils.cost(2.14769161882 + 2973.38809773740 * x);
	L0 += 0.00000000241 * Utils.cost(4.63019900075 + 1612.95133303160 * x);
	L0 += 0.00000000227 * Utils.cost(5.94537053649 + 2942.48067694380 * x);
	L0 += 0.00000000269 * Utils.cost(5.93687481153 + 4005.36847182980 * x);
	L0 += 0.00000000227 * Utils.cost(3.91459879933 + 2942.44616963940 * x);
	L0 += 0.00000000238 * Utils.cost(5.14570745178 + 721.13923120620 * x);
	L0 += 0.00000000275 * Utils.cost(1.06902528739 + 3343.36393731080 * x);
	L0 += 0.00000000232 * Utils.cost(3.52110290510 + 6674.17861670160 * x);
	L0 += 0.00000000277 * Utils.cost(0.19619249083 + 270.19747037360 * x);
	L0 += 0.00000000274 * Utils.cost(0.30235979008 + 5607.61582920880 * x);
	L0 += 0.00000000233 * Utils.cost(5.75237138576 + 604.84974070480 * x);
	L0 += 0.00000000214 * Utils.cost(3.38626276995 + 647.01083331480 * x);
	L0 += 0.00000000282 * Utils.cost(0.29694635625 + 12323.42309600880 * x);
	L0 += 0.00000000282 * Utils.cost(3.18114716742 + 6364.83298374300 * x);
	L0 += 0.00000000264 * Utils.cost(4.64751563064 + 1346.34429130980 * x);
	L0 += 0.00000000280 * Utils.cost(4.64995184564 + 6701.58017279840 * x);
	L0 += 0.00000000246 * Utils.cost(3.03036675631 + 3304.00706139560 * x);
	L0 += 0.00000000213 * Utils.cost(4.80555095681 + 8830.91338822380 * x);
	L0 += 0.00000000220 * Utils.cost(1.54642908481 + 23546.75362303080 * x);
	L0 += 0.00000000214 * Utils.cost(1.35475764936 + 184.84990797020 * x);
	L0 += 0.00000000228 * Utils.cost(4.29420876593 + 2970.91261075940 * x);
	L0 += 0.00000000229 * Utils.cost(2.53361265404 + 3710.31224264020 * x);
	L0 += 0.00000000273 * Utils.cost(1.89943168433 + 270.13016007080 * x);
	L0 += 0.00000000284 * Utils.cost(3.28345980607 + 16063.16484718500 * x);
	L0 += 0.00000000211 * Utils.cost(5.84341192825 + 1971.95217385480 * x);
	L0 += 0.00000000214 * Utils.cost(0.22905754741 + 5.19919116580 * x);
	L0 += 0.00000000246 * Utils.cost(4.55971876123 + 6040.34724601740 * x);
	L0 += 0.00000000229 * Utils.cost(1.24432891752 + 3568.08855948880 * x);
	L0 += 0.00000000216 * Utils.cost(3.20098680120 + 362.12113673080 * x);
	L0 += 0.00000000201 * Utils.cost(2.45025935972 + 20426.57109242200 * x);
	L0 += 0.00000000223 * Utils.cost(2.07804482295 + 17101.21113690720 * x);
	L0 += 0.00000000271 * Utils.cost(3.49210901141 + 3436.59165391760 * x);
	L0 += 0.00000000226 * Utils.cost(0.42945734871 + 557.09252119140 * x);
	L0 += 0.00000000264 * Utils.cost(5.05794940070 + 2938.94030494260 * x);
	L0 += 0.00000000207 * Utils.cost(6.03491870748 + 22487.37169284160 * x);
	L0 += 0.00000000197 * Utils.cost(5.62923956977 + 5209.47182633600 * x);
	L0 += 0.00000000211 * Utils.cost(2.26445749553 + 765.79306444640 * x);
	L0 += 0.00000000202 * Utils.cost(0.88670673933 + 767.84881934860 * x);
	L0 += 0.00000000212 * Utils.cost(1.85965510753 + 4782.87363546000 * x);
	L0 += 0.00000000194 * Utils.cost(4.77420671032 + 6850.80503653260 * x);
	L0 += 0.00000000192 * Utils.cost(0.51565572072 + 323.50541665740 * x);
	L0 += 0.00000000209 * Utils.cost(4.79794980231 + 14047.49376102520 * x);
	L0 += 0.00000000193 * Utils.cost(2.56057288512 + 18606.49894600020 * x);
	L0 += 0.00000000209 * Utils.cost(1.46088434217 + 5.85720229960 * x);
	L0 += 0.00000000214 * Utils.cost(0.97578687412 + 17468.85519794540 * x);
	L0 += 0.00000000196 * Utils.cost(4.08789826861 + 3262.86188271590 * x);
	L0 += 0.00000000198 * Utils.cost(3.99111216230 + 10018.24685144760 * x);
	L0 += 0.00000000235 * Utils.cost(1.11133081576 + 625.67019231240 * x);
	L0 += 0.00000000197 * Utils.cost(0.48692287381 + 15106.87569121440 * x);
	L0 += 0.00000000214 * Utils.cost(5.33581901309 + 955.24152459960 * x);
	L0 += 0.00000000199 * Utils.cost(0.40088144456 + 7586.68155006440 * x);
	L0 += 0.00000000251 * Utils.cost(5.57906426342 + 138.58819838440 * x);
	L0 += 0.00000000208 * Utils.cost(4.11480858445 + 1755.06264976500 * x);
	L0 += 0.00000000210 * Utils.cost(2.30499661227 + 53.30794628380 * x);
	L0 += 0.00000000253 * Utils.cost(1.27099771143 + 309.27832265580 * x);
	L0 += 0.00000000242 * Utils.cost(3.71426781511 + 3212.59358336240 * x);
	L0 += 0.00000000178 * Utils.cost(3.06961783443 + 1437.17561419860 * x);
	L0 += 0.00000000203 * Utils.cost(0.28410501881 + 582.99891137840 * x);
	L0 += 0.00000000190 * Utils.cost(0.10457198807 + 26087.90314157420 * x);
	L0 += 0.00000000178 * Utils.cost(0.53068485806 + 7366.26890762560 * x);
	L0 += 0.00000000245 * Utils.cost(4.20195166994 + 8436.28750316460 * x);
	L0 += 0.00000000176 * Utils.cost(3.66697456425 + 6688.27109009760 * x);
	L0 += 0.00000000177 * Utils.cost(4.48104044431 + 8799.98871377800 * x);
	L0 += 0.00000000181 * Utils.cost(3.57461078885 + 15121.10278521600 * x);
	L0 += 0.00000000198 * Utils.cost(3.55065962909 + 24606.13555322000 * x);
	L0 += 0.00000000187 * Utils.cost(3.45440079747 + 1329.51209026000 * x);
	L0 += 0.00000000176 * Utils.cost(5.81532365473 + 12406.16055082860 * x);
	L0 += 0.00000000235 * Utils.cost(1.28568802052 + 4427.39591298580 * x);
	L0 += 0.00000000179 * Utils.cost(1.55718466444 + 3362.46325602620 * x);
	L0 += 0.00000000174 * Utils.cost(1.61086801253 + 30065.51184029820 * x);
	L0 += 0.00000000199 * Utils.cost(0.07164714815 + 375.76573157020 * x);
	L0 += 0.00000000174 * Utils.cost(4.58412775793 + 3283.71405176420 * x);
	L0 += 0.00000000171 * Utils.cost(5.82189798695 + 23937.85638974100 * x);
	L0 += 0.00000000182 * Utils.cost(2.57146189845 + 418.50432280700 * x);
	L0 += 0.00000000168 * Utils.cost(5.13131619552 + 21393.54196985760 * x);
	L0 += 0.00000000183 * Utils.cost(4.93161962050 + 9468.26787725700 * x);
	L0 += 0.00000000167 * Utils.cost(1.48091400654 + 2619.47319549360 * x);
	L0 += 0.00000000169 * Utils.cost(5.12437031125 + 3223.29255847960 * x);
	L0 += 0.00000000188 * Utils.cost(3.41823914376 + 5032.77809620220 * x);
	L0 += 0.00000000181 * Utils.cost(0.50010974122 + 2125.87740737920 * x);
	L0 += 0.00000000164 * Utils.cost(1.71077130702 + 15849.86575174700 * x);
	L0 += 0.00000000202 * Utils.cost(6.21085922593 + 3909.43430072720 * x);
	L0 += 0.00000000171 * Utils.cost(5.86158194602 + 625.62513619720 * x);
	L0 += 0.00000000165 * Utils.cost(3.85569118220 + 13207.02930736500 * x);
	L0 += 0.00000000163 * Utils.cost(2.04373367430 + 3347.29609057390 * x);
	L0 += 0.00000000160 * Utils.cost(2.83784244321 + 5888.44996493220 * x);
	L0 += 0.00000000212 * Utils.cost(2.32801112252 + 3232.94890276120 * x);
	L0 += 0.00000000163 * Utils.cost(4.23488695195 + 31968.94865279940 * x);
	L0 += 0.00000000159 * Utils.cost(1.48046671186 + 249.90446074220 * x);
	L0 += 0.00000000160 * Utils.cost(0.21960307161 + 12942.96506292400 * x);
	L0 += 0.00000000220 * Utils.cost(3.90787704883 + 9638.94074787620 * x);
	L0 += 0.00000000161 * Utils.cost(2.94093367568 + 3370.04193523580 * x);
	L0 += 0.00000000159 * Utils.cost(5.59017475732 + 1442.27846241240 * x);
	L0 += 0.00000000221 * Utils.cost(3.82548751198 + 1954.71715036360 * x);
	L0 += 0.00000000192 * Utils.cost(4.62595272276 + 3336.68027343670 * x);
	L0 += 0.00000000164 * Utils.cost(1.59200641542 + 386.41965057220 * x);
	L0 += 0.00000000169 * Utils.cost(5.45784867095 + 259.56080502380 * x);
	L0 += 0.00000000201 * Utils.cost(0.95077053594 + 29424.63423291600 * x);
	L0 += 0.00000000174 * Utils.cost(1.15216485688 + 6382.09845913040 * x);
	L0 += 0.00000000163 * Utils.cost(1.16606667991 + 4289.78803566960 * x);
	L0 += 0.00000000187 * Utils.cost(3.22135956460 + 2751.54759969160 * x);
	L0 += 0.00000000162 * Utils.cost(4.79372588575 + 24889.57479599160 * x);
	L0 += 0.00000000192 * Utils.cost(0.88040946364 + 5244.04923920100 * x);
	L0 += 0.00000000160 * Utils.cost(2.85034784370 + 9374.82644678460 * x);
	L0 += 0.00000000172 * Utils.cost(2.38601254063 + 2281.24775016280 * x);
	L0 += 0.00000000202 * Utils.cost(4.12164786769 + 7321.12213971360 * x);
	L0 += 0.00000000156 * Utils.cost(4.55171204694 + 27682.14074415640 * x);
	L0 += 0.00000000170 * Utils.cost(4.62851491273 + 10824.20120254560 * x);
	L0 += 0.00000000157 * Utils.cost(0.91363725609 + 4503.08713110760 * x);
	L0 += 0.00000000156 * Utils.cost(5.58255618318 + 10448.43547097540 * x);
	L0 += 0.00000000157 * Utils.cost(0.92229160815 + 15636.56665630900 * x);
	L0 += 0.00000000171 * Utils.cost(5.43820628341 + 11904.91877320180 * x);
	L0 += 0.00000000180 * Utils.cost(1.89091405241 + 13575.74880223720 * x);
	L0 += 0.00000000198 * Utils.cost(4.42539692212 + 10025.42770875120 * x);
	L0 += 0.00000000158 * Utils.cost(4.12087914642 + 11240.16272807180 * x);
	L0 += 0.00000000211 * Utils.cost(2.42218772392 + 8749.15625447220 * x);
	L0 += 0.00000000183 * Utils.cost(1.47934835951 + 6677.34351804160 * x);
	L0 += 0.00000000197 * Utils.cost(1.43469282909 + 14061.72085502680 * x);
	L0 += 0.00000000170 * Utils.cost(4.32424842659 + 742.99006053260 * x);
	L0 += 0.00000000170 * Utils.cost(2.92905324873 + 9093.99731159660 * x);
	L0 += 0.00000000160 * Utils.cost(2.79797608932 + 1461.05405194640 * x);
	L0 += 0.00000000174 * Utils.cost(5.37738922471 + 3318.76159737340 * x);
	L0 += 0.00000000172 * Utils.cost(0.35524089578 + 2281.21324285840 * x);
	L0 += 0.00000000147 * Utils.cost(2.76602235522 + 4193.80880845180 * x);
	L0 += 0.00000000151 * Utils.cost(4.23962231148 + 3368.01398279660 * x);
	L0 += 0.00000000157 * Utils.cost(1.01295201512 + 24336.00539314920 * x);
	L0 += 0.00000000165 * Utils.cost(0.58335652806 + 15906.76412668260 * x);
	L0 += 0.00000000149 * Utils.cost(5.69553079999 + 31570.79964939120 * x);
	L0 += 0.00000000154 * Utils.cost(5.28504381510 + 1481.40937134520 * x);
	L0 += 0.00000000163 * Utils.cost(1.81288628510 + 18849.22754997420 * x);
	L0 += 0.00000000145 * Utils.cost(3.57053080979 + 3497.01314720220 * x);
	L0 += 0.00000000156 * Utils.cost(3.56978076425 + 21791.69097326579 * x);
	L0 += 0.00000000143 * Utils.cost(0.56704903096 + 13212.88650966460 * x);
	L0 += 0.00000000155 * Utils.cost(0.08429188155 + 6657.34641565180 * x);
	L0 += 0.00000000184 * Utils.cost(2.54999403339 + 24076.44458812540 * x);
	L0 += 0.00000000146 * Utils.cost(1.16594990123 + 526.16784674560 * x);
	L0 += 0.00000000144 * Utils.cost(4.19229335185 + 2771.79055267240 * x);
	L0 += 0.00000000169 * Utils.cost(3.10771037057 + 239.20548562500 * x);
	L0 += 0.00000000144 * Utils.cost(6.26688878164 + 6679.74038069130 * x);
	L0 += 0.00000000174 * Utils.cost(2.37509025280 + 3397.51080163540 * x);
	L0 += 0.00000000163 * Utils.cost(3.88047919138 + 16703.04487984680 * x);
	L0 += 0.00000000161 * Utils.cost(1.73958633312 + 2185.25126929280 * x);
	L0 += 0.00000000164 * Utils.cost(0.62146994730 + 1538.24043597800 * x);
	L0 += 0.00000000182 * Utils.cost(6.16856014864 + 6685.10618875760 * x);
	L0 += 0.00000000140 * Utils.cost(4.08200595943 + 4186.69526145100 * x);
	L0 += 0.00000000192 * Utils.cost(4.47709998867 + 57.87869600380 * x);
	L0 += 0.00000000151 * Utils.cost(3.06451266512 + 838.96928775040 * x);
	L0 += 0.00000000139 * Utils.cost(1.12767399649 + 6682.70932610790 * x);
	L0 += 0.00000000187 * Utils.cost(4.97174626997 + 6681.65473652630 * x);
	L0 += 0.00000000150 * Utils.cost(5.69209290362 + 9360.60435331840 * x);
	L0 += 0.00000000160 * Utils.cost(5.66336382679 + 10927.29397676420 * x);
	L0 += 0.00000000137 * Utils.cost(3.46860408347 + 5562.46906129680 * x);
	L0 += 0.00000000192 * Utils.cost(5.27908098216 + 34363.36559755600 * x);
	L0 += 0.00000000137 * Utils.cost(5.87023088486 + 2945.98654164060 * x);
	L0 += 0.00000000180 * Utils.cost(1.07686767816 + 15806.14683944200 * x);
	L0 += 0.00000000135 * Utils.cost(0.34109799474 + 7322.10246078180 * x);
	L0 += 0.00000000169 * Utils.cost(2.27408583150 + 379.37341387420 * x);
	L0 += 0.00000000172 * Utils.cost(3.83276777655 + 6621.85099148600 * x);
	L0 += 0.00000000134 * Utils.cost(0.89486611090 + 13286.18363552360 * x);
	L0 += 0.00000000168 * Utils.cost(3.24434245132 + 11614.43329373220 * x);
	L0 += 0.00000000135 * Utils.cost(6.03727673544 + 1214.80232962340 * x);
	L0 += 0.00000000150 * Utils.cost(0.81912738038 + 3416.87849797540 * x);
	L0 += 0.00000000136 * Utils.cost(5.06627117467 + 14421.83163698840 * x);
	L0 += 0.00000000138 * Utils.cost(5.19336961955 + 13363.43002786740 * x);
	L0 += 0.00000000163 * Utils.cost(5.91124428824 + 16703.07938715119 * x);
	L0 += 0.00000000181 * Utils.cost(3.31978654659 + 139.69813952280 * x);
	L0 += 0.00000000162 * Utils.cost(4.05905033891 + 1795.25844372100 * x);
	L0 += 0.00000000132 * Utils.cost(0.40901506100 + 1083.26036793700 * x);
	L0 += 0.00000000156 * Utils.cost(0.12304144640 + 1107.13880568480 * x);
	L0 += 0.00000000158 * Utils.cost(6.25022915072 + 6666.99775939800 * x);
	L0 += 0.00000000131 * Utils.cost(3.95250083817 + 3.45580804620 * x);
	L0 += 0.00000000147 * Utils.cost(4.94673462086 + 15010.89646399660 * x);
	L0 += 0.00000000140 * Utils.cost(6.13853404667 + 12729.66596748600 * x);
	L0 += 0.00000000131 * Utils.cost(5.43398849473 + 25665.51748340920 * x);
	L0 += 0.00000000135 * Utils.cost(5.06017183369 + 11876.46958573400 * x);
	L0 += 0.00000000128 * Utils.cost(2.86969332730 + 6549.68289171320 * x);
	L0 += 0.00000000174 * Utils.cost(5.18169887171 + 28230.18722269139 * x);
	L0 += 0.00000000179 * Utils.cost(3.25589354429 + 4922.57177498280 * x);
	L0 += 0.00000000139 * Utils.cost(5.33624615245 + 23958.63178523340 * x);
	L0 += 0.00000000127 * Utils.cost(5.78406495652 + 14577.18472611980 * x);
	L0 += 0.00000000128 * Utils.cost(1.27276688747 + 8584.66166590080 * x);
	L0 += 0.00000000133 * Utils.cost(0.39052474466 + 12410.73130054860 * x);
	L0 += 0.00000000134 * Utils.cost(1.09641189843 + 8962.43809625800 * x);
	L0 += 0.00000000125 * Utils.cost(3.20445201519 + 29.88204361020 * x);
	L0 += 0.00000000136 * Utils.cost(3.62250122667 + 3511.28529731900 * x);
	L0 += 0.00000000162 * Utils.cost(5.36465149996 + 2472.67876262220 * x);
	L0 += 0.00000000150 * Utils.cost(0.40179894287 + 1111.64224510200 * x);
	L0 += 0.00000000129 * Utils.cost(1.94909076932 + 19645.52555679060 * x);
	L0 += 0.00000000172 * Utils.cost(5.21328160366 + 6747.71226231400 * x);
	L0 += 0.00000000126 * Utils.cost(4.39378462616 + 21548.96236929180 * x);
	L0 += 0.00000000146 * Utils.cost(3.85987749053 + 13361.46938573100 * x);
	L0 += 0.00000000156 * Utils.cost(5.24740844581 + 6645.19698672220 * x);
	L0 += 0.00000000137 * Utils.cost(4.94588047257 + 20995.39296644940 * x);
	L0 += 0.00000000131 * Utils.cost(1.72431469184 + 11925.27409260060 * x);
	L0 += 0.00000000136 * Utils.cost(2.04268940441 + 10654.62101941260 * x);
	L0 += 0.00000000140 * Utils.cost(1.54439148652 + 8219.46528937760 * x);
	L0 += 0.00000000127 * Utils.cost(6.16695075115 + 10016.31435579200 * x);
	L0 += 0.00000000155 * Utils.cost(5.47145482987 + 2.96894541660 * x);
	L0 += 0.00000000132 * Utils.cost(6.25626202928 + 13227.38462676380 * x);
	L0 += 0.00000000121 * Utils.cost(3.74135485334 + 10294.51023745100 * x);
	L0 += 0.00000000134 * Utils.cost(3.12718351732 + 8962.47260356240 * x);
	L0 += 0.00000000122 * Utils.cost(0.77282907794 + 4936.79886898440 * x);
	L0 += 0.00000000125 * Utils.cost(4.23213631052 + 15650.79375031060 * x);
	L0 += 0.00000000157 * Utils.cost(1.79175545524 + 16489.76303806100 * x);
	L0 += 0.00000000155 * Utils.cost(4.15655698197 + 56.38318607620 * x);
	L0 += 0.00000000134 * Utils.cost(1.53268827347 + 708.98980227659 * x);
	L0 += 0.00000000136 * Utils.cost(4.01025697673 + 9797.49248439750 * x);
	L0 += 0.00000000156 * Utils.cost(4.61556268820 + 3354.83952070140 * x);
	L0 += 0.00000000131 * Utils.cost(4.47476808853 + 11776.89992986440 * x);
	L0 += 0.00000000118 * Utils.cost(1.17466010141 + 4606.17990532620 * x);
	L0 += 0.00000000128 * Utils.cost(0.12648796247 + 6681.64492949320 * x);
	L0 += 0.00000000122 * Utils.cost(0.13511377940 + 8322.55806359620 * x);
	L0 += 0.00000000119 * Utils.cost(1.29139116350 + 10544.41469819320 * x);
	L0 += 0.00000000128 * Utils.cost(4.44966050740 + 13465.54248101780 * x);
	L0 += 0.00000000119 * Utils.cost(4.01709629990 + 14481.20549890200 * x);
	L0 += 0.00000000147 * Utils.cost(1.81590279650 + 685.11136452880 * x);
	L0 += 0.00000000137 * Utils.cost(4.78402836071 + 3613.28538405140 * x);
	L0 += 0.00000000151 * Utils.cost(1.48428558337 + 9698.33186344200 * x);
	L0 += 0.00000000136 * Utils.cost(2.47757608387 + 10156.90236013480 * x);
	L0 += 0.00000000123 * Utils.cost(2.42353206298 + 6.13322593260 * x);
	L0 += 0.00000000117 * Utils.cost(5.40635440024 + 688.63448287780 * x);
	L0 += 0.00000000153 * Utils.cost(5.00372030984 + 14556.89671702380 * x);
	L0 += 0.00000000133 * Utils.cost(3.15773785434 + 1125.86933910360 * x);
	L0 += 0.00000000153 * Utils.cost(1.94292660454 + 6533.14612897330 * x);
	L0 += 0.00000000124 * Utils.cost(4.94608245253 + 12825.64519470380 * x);
	L0 += 0.00000000117 * Utils.cost(1.13528750738 + 4452.25467180180 * x);
	L0 += 0.00000000115 * Utils.cost(3.34121813462 + 10001.48196070061 * x);
	L0 += 0.00000000115 * Utils.cost(3.44586362144 + 7696.88787128380 * x);
	L0 += 0.00000000117 * Utils.cost(0.72489390402 + 27.46886639960 * x);
	L0 += 0.00000000132 * Utils.cost(2.41318250916 + 6717.25272007700 * x);
	L0 += 0.00000000118 * Utils.cost(0.35995031424 + 27832.03821928320 * x);
	L0 += 0.00000000157 * Utils.cost(1.73929012934 + 11560.07771607740 * x);
	L0 += 0.00000000148 * Utils.cost(2.14023976341 + 15265.88651930040 * x);
	L0 += 0.00000000113 * Utils.cost(1.29183863745 + 26880.31981303260 * x);
	L0 += 0.00000000151 * Utils.cost(0.95890610457 + 6530.17718355670 * x);
	L0 += 0.00000000153 * Utils.cost(5.62679784282 + 9911.63095888000 * x);
	L0 += 0.00000000157 * Utils.cost(0.09791378159 + 138.51749687070 * x);
	L0 += 0.00000000119 * Utils.cost(2.16883964744 + 7082.89697515680 * x);
	L0 += 0.00000000113 * Utils.cost(5.43102427558 + 422.02744115600 * x);
	L0 += 0.00000000130 * Utils.cost(2.13493506322 + 117.81280289200 * x);
	L0 += 0.00000000140 * Utils.cost(2.51194591630 + 28.98162997940 * x);
	L0 += 0.00000000128 * Utils.cost(1.23822751200 + 6680.80477730600 * x);
	L0 += 0.00000000111 * Utils.cost(4.60294776614 + 25135.82651831460 * x);
	L0 += 0.00000000118 * Utils.cost(0.34226497704 + 4140.43355186520 * x);
	L0 += 0.00000000112 * Utils.cost(4.02233737541 + 6314.00052443720 * x);
	L0 += 0.00000000134 * Utils.cost(3.35926214730 + 11247.20896476980 * x);
	L0 += 0.00000000120 * Utils.cost(6.09430372868 + 4106.40549114620 * x);
	L0 += 0.00000000117 * Utils.cost(0.03006245187 + 7.67379197540 * x);
	L0 += 0.00000000109 * Utils.cost(3.62630036582 + 3344.11829139661 * x);
	L0 += 0.00000000109 * Utils.cost(1.94277745743 + 16702.99482319620 * x);
	L0 += 0.00000000114 * Utils.cost(4.87315937546 + 6151.51663465280 * x);
	L0 += 0.00000000109 * Utils.cost(5.65707270595 + 3344.15279870100 * x);
	L0 += 0.00000000108 * Utils.cost(0.72637519191 + 10.56935504700 * x);
	L0 += 0.00000000128 * Utils.cost(5.77326416186 + 13369.56325380000 * x);
	L0 += 0.00000000147 * Utils.cost(4.73848506543 + 11610.91017538320 * x);
	L0 += 0.00000000145 * Utils.cost(4.95495312886 + 9859.37064396720 * x);
	L0 += 0.00000000111 * Utils.cost(3.28808788953 + 257.01800774300 * x);
	L0 += 0.00000000112 * Utils.cost(4.79777726412 + 12140.60114047780 * x);
	L0 += 0.00000000109 * Utils.cost(3.73199687068 + 13635.12266415080 * x);
	L0 += 0.00000000117 * Utils.cost(1.20057736014 + 6705.10329114740 * x);
	L0 += 0.00000000149 * Utils.cost(4.91688353237 + 277.03499374140 * x);
	L0 += 0.00000000108 * Utils.cost(3.37299798972 + 6717.83021870380 * x);
	L0 += 0.00000000106 * Utils.cost(0.53379407701 + 5085.10572141780 * x);
	L0 += 0.00000000125 * Utils.cost(4.62770076269 + 9329.67967887260 * x);
	L0 += 0.00000000107 * Utils.cost(4.60288570375 + 1957.72507985320 * x);
	L0 += 0.00000000113 * Utils.cost(4.04786119569 + 6953.89781075120 * x);
	L0 += 0.00000000106 * Utils.cost(0.75378922686 + 149.89747512680 * x);
	L0 += 0.00000000114 * Utils.cost(0.62074562387 + 6151.55114195720 * x);
	L0 += 0.00000000108 * Utils.cost(5.22204692781 + 1556.56814695540 * x);
	L0 += 0.00000000104 * Utils.cost(1.02502614223 + 4878.85286267780 * x);
	L0 += 0.00000000133 * Utils.cost(1.15811543786 + 816.65332621520 * x);
	L0 += 0.00000000134 * Utils.cost(1.69834857217 + 183.86958690200 * x);
	L0 += 0.00000000104 * Utils.cost(2.58832774275 + 14591.41182012140 * x);
	L0 += 0.00000000107 * Utils.cost(4.42117075795 + 7.13080065300 * x);
	L0 += 0.00000000126 * Utils.cost(0.03750399181 + 16.83220104979 * x);
	L0 += 0.00000000102 * Utils.cost(1.20624870972 + 11986.67590695340 * x);
	L0 += 0.00000000102 * Utils.cost(2.97579561878 + 29822.78323632420 * x);
	L0 += 0.00000000116 * Utils.cost(4.73049067619 + 13366.04013545100 * x);
	L0 += 0.00000000130 * Utils.cost(4.10484632841 + 35.60779058380 * x);
	L0 += 0.00000000113 * Utils.cost(3.69200525056 + 44.65383324020 * x);
	L0 += 0.00000000111 * Utils.cost(5.12900291511 + 146.79443287140 * x);
	L0 += 0.00000000126 * Utils.cost(1.82187459534 + 26887.36604973060 * x);
	L0 += 0.00000000121 * Utils.cost(6.08309355316 + 7100.70949727480 * x);
	L0 += 0.00000000105 * Utils.cost(6.16606590276 + 9175.75444534820 * x);
	L0 += 0.00000000132 * Utils.cost(2.97955203077 + 1250.83019630080 * x);
	L0 += 0.00000000106 * Utils.cost(5.08419485009 + 8742.04270747140 * x);
	L0 += 0.00000000120 * Utils.cost(0.59116561391 + 31172.65064598300 * x);
	L0 += 0.00000000112 * Utils.cost(3.70888430091 + 10050.28646756720 * x);
	L0 += 0.00000000100 * Utils.cost(1.82077956276 + 12012.58229714040 * x);
	L0 += 0.00000000107 * Utils.cost(4.86100312387 + 7899.55030137200 * x);
	L0 += 0.00000000099 * Utils.cost(0.72997085174 + 18977.17908300880 * x);
	L0 += 0.00000000107 * Utils.cost(5.25025570307 + 63.73589830340 * x);
	L0 += 0.00000000099 * Utils.cost(2.79139996703 + 17932.02424682120 * x);
	L0 += 0.00000000097 * Utils.cost(4.94370173613 + 28109.21461605200 * x);
	L0 += 0.00000000122 * Utils.cost(4.18676567644 + 19617.07636932279 * x);
	L0 += 0.00000000121 * Utils.cost(3.14207351411 + 9278.84721956680 * x);
	L0 += 0.00000000112 * Utils.cost(1.43537110436 + 16232.74503031800 * x);
	L0 += 0.00000000096 * Utils.cost(2.57929371627 + 12715.43887348440 * x);
	L0 += 0.00000000096 * Utils.cost(2.51396484677 + 3535.58381116040 * x);
	L0 += 0.00000000112 * Utils.cost(6.19137312195 + 6685.15700666270 * x);
	L0 += 0.00000000109 * Utils.cost(1.53428110338 + 16703.12944380180 * x);
	L0 += 0.00000000096 * Utils.cost(4.29245810274 + 7906.59653807000 * x);
	L0 += 0.00000000096 * Utils.cost(3.08847844641 + 3468.63127003720 * x);
	L0 += 0.00000000095 * Utils.cost(6.09186084700 + 10037.08975128440 * x);
	L0 += 0.00000000094 * Utils.cost(1.79812841802 + 20047.19767854780 * x);
	L0 += 0.00000000110 * Utils.cost(4.24859410294 + 3337.07205469860 * x);
	L0 += 0.00000000093 * Utils.cost(2.17945548408 + 16066.06586147480 * x);
	L0 += 0.00000000115 * Utils.cost(5.44548079869 + 11353.89216764020 * x);
	L0 += 0.00000000098 * Utils.cost(1.89605054783 + 33406.12426699800 * x);
	L0 += 0.00000000101 * Utils.cost(3.00793005829 + 3528.53757446240 * x);
	L0 += 0.00000000096 * Utils.cost(5.40659912420 + 5749.86176654780 * x);
	L0 += 0.00000000113 * Utils.cost(3.93443805059 + 7167.19690618920 * x);
	L0 += 0.00000000092 * Utils.cost(3.58985964414 + 6724.94376570460 * x);
	L0 += 0.00000000119 * Utils.cost(3.90561570260 + 11346.77862063940 * x);
	L0 += 0.00000000097 * Utils.cost(2.57280790230 + 1747.60737815290 * x);
	L0 += 0.00000000118 * Utils.cost(3.82111723459 + 9072.66167112960 * x);
	L0 += 0.00000000096 * Utils.cost(0.72646224606 + 3152.68727893721 * x);
	L0 += 0.00000000092 * Utils.cost(6.23928508055 + 24491.42579258340 * x);
	L0 += 0.00000000099 * Utils.cost(1.86991802881 + 72.05573335480 * x);
	L0 += 0.00000000094 * Utils.cost(1.51091806861 + 9801.42463766060 * x);
	L0 += 0.00000000091 * Utils.cost(4.94377681711 + 8756.26980147300 * x);
	L0 += 0.00000000095 * Utils.cost(2.58771497236 + 11663.17049029600 * x);
	L0 += 0.00000000093 * Utils.cost(0.66092443320 + 30.99198474860 * x);
	L0 += 0.00000000088 * Utils.cost(2.47386826588 + 17232.75309859360 * x);
	L0 += 0.00000000100 * Utils.cost(0.19616913512 + 11883.58313273480 * x);
	L0 += 0.00000000094 * Utils.cost(0.61277732908 + 73.63546321960 * x);
	L0 += 0.00000000091 * Utils.cost(6.04139177526 + 153.92523352440 * x);
	L0 += 0.00000000095 * Utils.cost(0.30865798871 + 29168.59654624120 * x);
	L0 += 0.00000000110 * Utils.cost(6.27936643935 + 3337.10656200300 * x);
	L0 += 0.00000000087 * Utils.cost(2.09287965409 + 10264.56588407340 * x);
	L0 += 0.00000000089 * Utils.cost(3.27633365389 + 3002.36972771680 * x);
	L0 += 0.00000000091 * Utils.cost(1.89622049447 + 37895.42629036740 * x);
	L0 += 0.00000000118 * Utils.cost(3.88268323672 + 1236.07566032300 * x);
	L0 += 0.00000000094 * Utils.cost(2.27819061990 + 4845.90023579280 * x);
	L0 += 0.00000000085 * Utils.cost(3.07438636612 + 9983.70424446160 * x);
	L0 += 0.00000000086 * Utils.cost(3.94463425808 + 16.76489074700 * x);
	L0 += 0.00000000099 * Utils.cost(4.58890225582 + 3774.32416457660 * x);
	L0 += 0.00000000086 * Utils.cost(1.27758598252 + 34513.26307268280 * x);
	L0 += 0.00000000118 * Utils.cost(6.10625309129 + 454.90936652730 * x);
	L0 += 0.00000000096 * Utils.cost(6.08772700197 + 1755.47168467910 * x);
	L0 += 0.00000000085 * Utils.cost(4.73193631802 + 4576.68808702280 * x);
	L0 += 0.00000000116 * Utils.cost(0.88573303872 + 16511.61386738740 * x);
	L0 += 0.00000000083 * Utils.cost(3.13948373813 + 10191.41746323240 * x);
	L0 += 0.00000000083 * Utils.cost(0.36972674664 + 9755.23023837760 * x);
	L0 += 0.00000000112 * Utils.cost(2.26524635842 + 10006.58480891440 * x);
	L0 += 0.00000000087 * Utils.cost(4.25461508452 + 8.16813658240 * x);
	L0 += 0.00000000087 * Utils.cost(5.31716927554 + 1868.85939963620 * x);
	L0 += 0.00000000115 * Utils.cost(3.30507830050 + 14157.70008224460 * x);
	L0 += 0.00000000087 * Utils.cost(2.90507350729 + 36.99559061100 * x);
	L0 += 0.00000000083 * Utils.cost(3.58400049244 + 12928.73796892240 * x);
	L0 += 0.00000000086 * Utils.cost(2.46839611271 + 113.72943956840 * x);
	L0 += 0.00000000096 * Utils.cost(2.99829695985 + 6510.55198278040 * x);
	L0 += 0.00000000084 * Utils.cost(1.34333260788 + 4133.38731516720 * x);
	L0 += 0.00000000093 * Utils.cost(2.41895388985 + 20040.15144184979 * x);
	L0 += 0.00000000085 * Utils.cost(5.92093268818 + 12299.54465826100 * x);
	L0 += 0.00000000082 * Utils.cost(4.71321236549 + 7733.49323658800 * x);
	L0 += 0.00000000081 * Utils.cost(5.26971110105 + 12199.97500239140 * x);
	L0 += 0.00000000080 * Utils.cost(4.34410099751 + 7218.02936549500 * x);
	L0 += 0.00000000095 * Utils.cost(0.02613500045 + 2.90101428980 * x);
	L0 += 0.00000000094 * Utils.cost(6.22018441621 + 20043.69181385099 * x);
	L0 += 0.00000000085 * Utils.cost(4.66573809999 + 8638.94993325280 * x);
	L0 += 0.00000000079 * Utils.cost(2.89839604813 + 22854.59602180400 * x);
	L0 += 0.00000000104 * Utils.cost(0.94882888784 + 2735.76268599500 * x);
	L0 += 0.00000000080 * Utils.cost(1.68097745917 + 12839.87228870540 * x);
	L0 += 0.00000000085 * Utils.cost(1.95515305721 + 4686.95671800959 * x);
	L0 += 0.00000000094 * Utils.cost(0.58147434179 + 14128.24277124560 * x);
	L0 += 0.00000000091 * Utils.cost(1.16317999954 + 3495.96551583120 * x);
	L0 += 0.00000000084 * Utils.cost(4.04104644774 + 9815.65173166220 * x);
	L0 += 0.00000000082 * Utils.cost(1.83662951627 + 19190.47817844680 * x);
	L0 += 0.00000000080 * Utils.cost(4.04733274699 + 3188.71514561460 * x);
	L0 += 0.00000000084 * Utils.cost(2.71620952175 + 12089.76868117200 * x);
	L0 += 0.00000000080 * Utils.cost(2.77363158210 + 9495.66943335380 * x);
	L0 += 0.00000000078 * Utils.cost(5.77285430206 + 10397.60301166960 * x);
	L0 += 0.00000000084 * Utils.cost(0.78188080031 + 7214.43893684320 * x);
	L0 += 0.00000000094 * Utils.cost(2.14762315943 + 13532.02988993220 * x);
	L0 += 0.00000000101 * Utils.cost(5.76349087526 + 1484.93248969420 * x);
	L0 += 0.00000000082 * Utils.cost(3.11421789241 + 8446.99147881720 * x);
	L0 += 0.00000000096 * Utils.cost(5.85152670536 + 3492.50970778500 * x);
	L0 += 0.00000000079 * Utils.cost(4.69625309523 + 5298.33750655300 * x);
	L0 += 0.00000000097 * Utils.cost(3.97960395898 + 18208.34994259200 * x);
	L0 += 0.00000000105 * Utils.cost(1.74376904536 + 36.64856292950 * x);
	L0 += 0.00000000094 * Utils.cost(4.18941238607 + 20043.65730654660 * x);
	L0 += 0.00000000075 * Utils.cost(3.46629875063 + 13341.67431130680 * x);
	L0 += 0.00000000092 * Utils.cost(2.67278833288 + 6680.79497027290 * x);
	L0 += 0.00000000075 * Utils.cost(4.59723160021 + 9993.38809263160 * x);
	L0 += 0.00000000087 * Utils.cost(0.91979096638 + 8425.71814811760 * x);
	L0 += 0.00000000074 * Utils.cost(0.42228487063 + 48429.28218232440 * x);
	L0 += 0.00000000074 * Utils.cost(0.48470953224 + 11456.98494185880 * x);
	L0 += 0.00000000077 * Utils.cost(0.10707484151 + 1371.41176345600 * x);
	L0 += 0.00000000093 * Utils.cost(1.38010528069 + 3145.64104223920 * x);
	L0 += 0.00000000075 * Utils.cost(5.28061257070 + 12306.59089495900 * x);
	L0 += 0.00000000079 * Utils.cost(3.78666386040 + 7.57867920960 * x);
	L0 += 0.00000000073 * Utils.cost(4.42902162523 + 14.73728232560 * x);
	L0 += 0.00000000084 * Utils.cost(3.41538432898 + 6637.50594109460 * x);
	L0 += 0.00000000093 * Utils.cost(3.41302342683 + 1596.11913198180 * x);
	L0 += 0.00000000071 * Utils.cost(3.13537213242 + 9488.62319665580 * x);
	L0 += 0.00000000079 * Utils.cost(2.33442828498 + 12465.53441274220 * x);
	L0 += 0.00000000078 * Utils.cost(2.21525134547 + 2810.98877190800 * x);
	L0 += 0.00000000099 * Utils.cost(0.48801369293 + 17499.36014031540 * x);
	L0 += 0.00000000075 * Utils.cost(4.10299895268 + 5525.86369599260 * x);
	L0 += 0.00000000071 * Utils.cost(4.04186021414 + 259.49349472100 * x);
	L0 += 0.00000000073 * Utils.cost(2.20102876718 + 30774.50164257480 * x);
	L0 += 0.00000000074 * Utils.cost(4.93439968296 + 13517.80279593060 * x);
	L0 += 0.00000000071 * Utils.cost(5.32625652676 + 6670.17915313570 * x);
	L0 += 0.00000000078 * Utils.cost(2.17664185326 + 13421.82356871280 * x);
	L0 += 0.00000000088 * Utils.cost(5.38469204503 + 17762.44406368820 * x);
	L0 += 0.00000000081 * Utils.cost(2.48353174238 + 73.60095591520 * x);
	L0 += 0.00000000092 * Utils.cost(1.13088448190 + 7747.72033058960 * x);
	L0 += 0.00000000070 * Utils.cost(1.16361323015 + 5220.17080145320 * x);
	L0 += 0.00000000084 * Utils.cost(5.83220387910 + 22.37827130260 * x);
	L0 += 0.00000000076 * Utils.cost(5.21065604639 + 4271.97551355160 * x);
	L0 += 0.00000000080 * Utils.cost(4.01817623627 + 3311.18291816379 * x);
	L0 += 0.00000000068 * Utils.cost(2.45937697940 + 6279.55273164240 * x);
	L0 += 0.00000000067 * Utils.cost(4.31723563048 + 2281.29780681340 * x);
	L0 += 0.00000000067 * Utils.cost(4.88776321797 + 4379.63903749020 * x);
	L0 += 0.00000000069 * Utils.cost(3.57006764536 + 14955.04572043200 * x);
	L0 += 0.00000000078 * Utils.cost(2.62374773232 + 2810.85415130240 * x);
	L0 += 0.00000000067 * Utils.cost(4.76301301456 + 6812.76681508600 * x);
	L0 += 0.00000000070 * Utils.cost(5.60319851277 + 13383.22510229160 * x);
	L0 += 0.00000000070 * Utils.cost(3.05647570196 + 10081.21114201300 * x);
	L0 += 0.00000000081 * Utils.cost(4.91537623765 + 3333.92876282570 * x);
	L0 += 0.00000000082 * Utils.cost(5.49204987110 + 5483.25472482600 * x);
	L0 += 0.00000000065 * Utils.cost(3.50466797067 + 9161.52735134660 * x);
	L0 += 0.00000000065 * Utils.cost(2.79212460026 + 13497.51478683460 * x);
	L0 += 0.00000000070 * Utils.cost(0.93640431668 + 6106.88005506480 * x);
	L0 += 0.00000000073 * Utils.cost(2.57583496978 + 6614.73744448520 * x);
	L0 += 0.00000000070 * Utils.cost(0.84170070580 + 16695.94858649819 * x);
	L0 += 0.00000000069 * Utils.cost(1.10040627005 + 2544.33167353560 * x);
	L0 += 0.00000000063 * Utils.cost(6.05841309176 + 6453.74872061060 * x);
	L0 += 0.00000000069 * Utils.cost(2.67053540192 + 2641.34127847220 * x);
	L0 += 0.00000000086 * Utils.cost(1.73112264739 + 6286.59896834040 * x);
	L0 += 0.00000000062 * Utils.cost(5.49002783256 + 4957.08687808040 * x);
	L0 += 0.00000000072 * Utils.cost(3.38857910283 + 3184.21170619740 * x);
	L0 += 0.00000000069 * Utils.cost(5.35281990892 + 2544.29716623120 * x);
	L0 += 0.00000000064 * Utils.cost(4.79175268505 + 3181.66890891660 * x);
	L0 += 0.00000000060 * Utils.cost(6.18449904353 + 3361.94806716680 * x);
	L0 += 0.00000000065 * Utils.cost(1.48236627574 + 4819.47900076420 * x);
	L0 += 0.00000000054 * Utils.cost(3.66018290396 + 2917.53735417280 * x);
	L0 += 0.00000000064 * Utils.cost(4.72286914683 + 2281.16318620780 * x);
	L0 += 0.00000000053 * Utils.cost(4.65521663671 + 3448.27595063840 * x);
	L0 += 0.00000000060 * Utils.cost(0.77450276964 + 3319.27678623280 * x);
	L0 += 0.00000000051 * Utils.cost(1.45142985881 + 3547.31316399640 * x);
	L0 += 0.00000000051 * Utils.cost(4.81258158513 + 4403.51747523800 * x);
	L0 += 0.00000000050 * Utils.cost(0.37366902835 + 3322.79990458180 * x);
	L0 += 0.00000000050 * Utils.cost(4.68787711774 + 3253.30422216000 * x);
	L0 += 0.00000000067 * Utils.cost(4.63578431535 + 4694.00295470760 * x);
	L0 += 0.00000000049 * Utils.cost(3.17471347671 + 5452.26274007740 * x);
	L0 += 0.00000000051 * Utils.cost(2.54791773443 + 4001.84535348080 * x);
	L0 += 0.00000000048 * Utils.cost(2.81171553464 + 3372.58473251660 * x);
	L0 += 0.00000000054 * Utils.cost(4.45945188023 + 10284.92120347220 * x);
	L0 += 0.00000000053 * Utils.cost(3.85131213520 + 9758.75335672660 * x);
	L0 += 0.00000000051 * Utils.cost(1.11244863072 + 6901.63749583840 * x);
	L0 += 0.00000000062 * Utils.cost(1.42198009630 + 6830.78805053420 * x);
	L0 += 0.00000000055 * Utils.cost(5.61672988180 + 45494.58142974879 * x);
	L0 += 0.00000000054 * Utils.cost(0.61701959453 + 4716.38622654560 * x);
	L0 += 0.00000000054 * Utils.cost(4.28556326526 + 2910.49111747480 * x);
	L0 += 0.00000000045 * Utils.cost(3.14626081312 + 13951.51453380740 * x);
	L0 += 0.00000000050 * Utils.cost(4.16235480519 + 12979.55317457600 * x);
	L0 += 0.00000000046 * Utils.cost(1.66182208107 + 7768.00833968560 * x);
	L0 += 0.00000000045 * Utils.cost(5.07701425888 + 14951.52260208300 * x);
	L0 += 0.00000000043 * Utils.cost(4.31723459530 + 5881.40372823420 * x);
	L0 += 0.00000000045 * Utils.cost(2.39713581676 + 8852.24902869080 * x);
	L0 += 0.00000000043 * Utils.cost(2.10202660495 + 3337.15661865360 * x);
	L0 += 0.00000000048 * Utils.cost(0.19934255781 + 1905.46476494040 * x);
	L0 += 0.00000000056 * Utils.cost(5.25687695855 + 12808.88030395680 * x);
	L0 += 0.00000000049 * Utils.cost(2.06320966659 + 4296.90158267040 * x);
	L0 += 0.00000000042 * Utils.cost(6.07282126953 + 4295.85395129940 * x);
	L0 += 0.00000000043 * Utils.cost(1.74571613780 + 3130.83644961080 * x);
	L0 += 0.00000000050 * Utils.cost(2.27112469544 + 3427.92063123960 * x);
	L0 += 0.00000000050 * Utils.cost(0.30214747765 + 3358.42494881780 * x);
	L0 += 0.00000000043 * Utils.cost(5.05297177283 + 3229.42578441220 * x);
	L0 += 0.00000000054 * Utils.cost(6.11998016428 + 16894.51039961060 * x);
	L0 += 0.00000000043 * Utils.cost(1.90603004035 + 3451.79906898740 * x);
	L0 += 0.00000000039 * Utils.cost(0.50727886431 + 10011.20061474960 * x);
	L0 += 0.00000000052 * Utils.cost(3.17851184154 + 2324.94940881560 * x);
	L0 += 0.00000000038 * Utils.cost(4.88249540246 + 3499.55594448300 * x);
	L0 += 0.00000000039 * Utils.cost(5.28113083211 + 3343.15522398060 * x);
	L0 += 0.00000000039 * Utils.cost(4.98185580267 + 3468.56395973440 * x);
	L0 += 0.00000000047 * Utils.cost(2.16244218985 + 10027.36020440680 * x);
	L0 += 0.00000000037 * Utils.cost(5.84953090935 + 6791.43117461900 * x);
	L0 += 0.00000000048 * Utils.cost(5.03779546898 + 7064.10413197060 * x);
	L0 += 0.00000000038 * Utils.cost(0.58076516432 + 8966.38750317330 * x);
	L0 += 0.00000000051 * Utils.cost(3.36181117037 + 8976.68244391180 * x);
	L0 += 0.00000000042 * Utils.cost(4.13725767158 + 8336.78515759780 * x);
	L0 += 0.00000000038 * Utils.cost(5.75425648893 + 4531.53631857540 * x);
	L0 += 0.00000000038 * Utils.cost(3.55681323215 + 5351.71276313960 * x);
	L0 += 0.00000000040 * Utils.cost(2.79414141035 + 3067.93946934820 * x);
	L0 += 0.00000000040 * Utils.cost(4.99798468494 + 10042.19259949820 * x);
	L0 += 0.00000000037 * Utils.cost(1.82286411009 + 10017.95594474140 * x);
	L0 += 0.00000000036 * Utils.cost(6.02115369796 + 6474.52411610300 * x);
	L0 += 0.00000000044 * Utils.cost(3.01299253859 + 7417.10136693140 * x);
	L0 += 0.00000000045 * Utils.cost(2.33470159894 + 3123.79021291280 * x);
	L0 += 0.00000000039 * Utils.cost(4.91767933978 + 8034.61538140740 * x);

	let L1 = 0;
	L1 += 3340.85627474342;
	L1 += 0.01458227051 * Utils.cost(3.60426053609 + 3340.61242669980 * x);
	L1 += 0.00164901343 * Utils.cost(3.92631250962 + 6681.22485339960 * x);
	L1 += 0.00019963338 * Utils.cost(4.26594061030 + 10021.83728009940 * x);
	L1 += 0.00003452399 * Utils.cost(4.73210386365 + 3.52311834900 * x);
	L1 += 0.00002485480 * Utils.cost(4.61277567318 + 13362.44970679920 * x);
	L1 += 0.00000841551 * Utils.cost(4.45858256765 + 2281.23049651060 * x);
	L1 += 0.00000537566 * Utils.cost(5.01589727492 + 398.14900340820 * x);
	L1 += 0.00000521041 * Utils.cost(4.99422678175 + 3344.13554504880 * x);
	L1 += 0.00000432614 * Utils.cost(2.56066402860 + 191.44826611160 * x);
	L1 += 0.00000429656 * Utils.cost(5.31646162367 + 155.42039943420 * x);
	L1 += 0.00000381747 * Utils.cost(3.53881289437 + 796.29800681640 * x);
	L1 += 0.00000314129 * Utils.cost(4.96335266049 + 16703.06213349900 * x);
	L1 += 0.00000282804 * Utils.cost(3.15967518204 + 2544.31441988340 * x);
	L1 += 0.00000205664 * Utils.cost(4.56891455660 + 2146.16541647520 * x);
	L1 += 0.00000168805 * Utils.cost(1.32894813366 + 3337.08930835080 * x);
	L1 += 0.00000157587 * Utils.cost(4.18501035954 + 1751.53953141600 * x);
	L1 += 0.00000133686 * Utils.cost(2.23325104196 + 0.98032106820 * x);
	L1 += 0.00000116561 * Utils.cost(2.21347652545 + 1059.38193018920 * x);
	L1 += 0.00000117591 * Utils.cost(6.02407213861 + 6151.53388830500 * x);
	L1 += 0.00000113595 * Utils.cost(5.42803224317 + 3738.76143010800 * x);
	L1 += 0.00000133563 * Utils.cost(5.97421903927 + 1748.01641306700 * x);
	L1 += 0.00000091098 * Utils.cost(1.09627836591 + 1349.86740965880 * x);
	L1 += 0.00000083301 * Utils.cost(5.29636626272 + 6684.74797174860 * x);
	L1 += 0.00000113876 * Utils.cost(2.12869455089 + 1194.44701022460 * x);
	L1 += 0.00000080776 * Utils.cost(4.42813405865 + 529.69096509460 * x);
	L1 += 0.00000079531 * Utils.cost(2.24864266330 + 8962.45534991020 * x);
	L1 += 0.00000072505 * Utils.cost(5.84208163240 + 242.72860397400 * x);
	L1 += 0.00000072946 * Utils.cost(2.50189460554 + 951.71840625060 * x);
	L1 += 0.00000071487 * Utils.cost(3.85636094435 + 2914.01423582380 * x);
	L1 += 0.00000085342 * Utils.cost(3.90854841008 + 553.56940284240 * x);
	L1 += 0.00000067582 * Utils.cost(5.02327686473 + 382.89653222320 * x);
	L1 += 0.00000065089 * Utils.cost(1.01802439311 + 3340.59517304760 * x);
	L1 += 0.00000065089 * Utils.cost(3.04879603978 + 3340.62968035200 * x);
	L1 += 0.00000061508 * Utils.cost(4.15183159800 + 3149.16416058820 * x);
	L1 += 0.00000048477 * Utils.cost(4.87362121538 + 213.29909543800 * x);
	L1 += 0.00000046584 * Utils.cost(1.31452419914 + 3185.19202726560 * x);
	L1 += 0.00000056520 * Utils.cost(3.88813699320 + 4136.91043351620 * x);
	L1 += 0.00000047613 * Utils.cost(1.18238046057 + 3333.49887969900 * x);
	L1 += 0.00000041343 * Utils.cost(0.71385375517 + 1592.59601363280 * x);
	L1 += 0.00000040055 * Utils.cost(5.31611875491 + 20043.67456019880 * x);
	L1 += 0.00000040272 * Utils.cost(2.72542480614 + 7.11354700080 * x);
	L1 += 0.00000032886 * Utils.cost(5.41067411968 + 6283.07584999140 * x);
	L1 += 0.00000028244 * Utils.cost(0.04534124888 + 9492.14631500480 * x);
	L1 += 0.00000022294 * Utils.cost(5.88516997273 + 3870.30339179440 * x);
	L1 += 0.00000022431 * Utils.cost(5.46592525433 + 20.35531939880 * x);
	L1 += 0.00000022612 * Utils.cost(0.83775884934 + 3097.88382272579 * x);
	L1 += 0.00000021418 * Utils.cost(5.37934044204 + 3340.54511639700 * x);
	L1 += 0.00000023335 * Utils.cost(6.16762213077 + 3532.06069281140 * x);
	L1 += 0.00000026579 * Utils.cost(3.88960724782 + 1221.84856632140 * x);
	L1 += 0.00000022797 * Utils.cost(1.54504711003 + 2274.11694950980 * x);
	L1 += 0.00000020431 * Utils.cost(2.36353950189 + 1589.07289528380 * x);
	L1 += 0.00000020186 * Utils.cost(3.36375535766 + 5088.62883976680 * x);
	L1 += 0.00000026554 * Utils.cost(5.11271747607 + 2700.71514038580 * x);
	L1 += 0.00000019675 * Utils.cost(2.57805423988 + 12303.06777661000 * x);
	L1 += 0.00000019468 * Utils.cost(0.49216434489 + 6677.70173505060 * x);
	L1 += 0.00000021104 * Utils.cost(3.52525428062 + 15.25247118500 * x);
	L1 += 0.00000021425 * Utils.cost(4.97081508139 + 3340.67973700260 * x);
	L1 += 0.00000018505 * Utils.cost(5.57863503922 + 1990.74501704100 * x);
	L1 += 0.00000017811 * Utils.cost(6.12537931996 + 4292.33083295040 * x);
	L1 += 0.00000016472 * Utils.cost(2.60291845066 + 3341.59274776800 * x);
	L1 += 0.00000016599 * Utils.cost(1.25519718278 + 3894.18182954220 * x);
	L1 += 0.00000019455 * Utils.cost(2.53112676345 + 4399.99435688900 * x);
	L1 += 0.00000015000 * Utils.cost(1.03464802434 + 2288.34404351140 * x);
	L1 += 0.00000020029 * Utils.cost(4.73119428749 + 4690.47983635860 * x);
	L1 += 0.00000015381 * Utils.cost(2.47009470350 + 4535.05943692440 * x);
	L1 += 0.00000019964 * Utils.cost(5.78652958398 + 7079.37385680780 * x);
	L1 += 0.00000015307 * Utils.cost(2.26515985343 + 3723.50895892300 * x);
	L1 += 0.00000014705 * Utils.cost(3.36979890389 + 6681.24210705180 * x);
	L1 += 0.00000013535 * Utils.cost(2.12334410410 + 5486.77784317500 * x);
	L1 += 0.00000012950 * Utils.cost(5.61929676688 + 10025.36039844840 * x);
	L1 += 0.00000012682 * Utils.cost(2.95022113262 + 3496.03282613400 * x);
	L1 += 0.00000013644 * Utils.cost(1.97739547259 + 5614.72937620960 * x);
	L1 += 0.00000013013 * Utils.cost(1.51424752315 + 5628.95647021120 * x);
	L1 += 0.00000014705 * Utils.cost(1.33902715586 + 6681.20759974740 * x);
	L1 += 0.00000011353 * Utils.cost(6.23438193885 + 135.06508003540 * x);
	L1 += 0.00000013275 * Utils.cost(3.42243595774 + 5621.84292321040 * x);
	L1 += 0.00000010867 * Utils.cost(5.28184140482 + 2818.03500860600 * x);
	L1 += 0.00000011850 * Utils.cost(3.12701832949 + 426.59819087600 * x);
	L1 += 0.00000010472 * Utils.cost(2.73581537999 + 2787.04302385740 * x);
	L1 += 0.00000011132 * Utils.cost(5.84178807242 + 2803.80791460440 * x);
	L1 += 0.00000011764 * Utils.cost(2.58551521265 + 8432.76438481560 * x);
	L1 += 0.00000011854 * Utils.cost(5.47630686910 + 3553.91152213780 * x);
	L1 += 0.00000008490 * Utils.cost(1.91378007528 + 11773.37681151540 * x);
	L1 += 0.00000009708 * Utils.cost(4.52957217749 + 6489.77658728800 * x);
	L1 += 0.00000008562 * Utils.cost(3.16141186861 + 162.46663613220 * x);
	L1 += 0.00000010958 * Utils.cost(4.15771850822 + 2388.89402044920 * x);
	L1 += 0.00000008133 * Utils.cost(1.61295625304 + 2957.71589447660 * x);
	L1 += 0.00000008840 * Utils.cost(4.23294294197 + 7477.52286021600 * x);
	L1 += 0.00000008034 * Utils.cost(5.69983564288 + 6041.32756708560 * x);
	L1 += 0.00000008344 * Utils.cost(2.18273563186 + 23.87843774780 * x);
	L1 += 0.00000007696 * Utils.cost(5.71877332978 + 9623.68827669120 * x);
	L1 += 0.00000008695 * Utils.cost(4.43542512603 + 5092.15195811580 * x);
	L1 += 0.00000008434 * Utils.cost(3.16292250873 + 3347.72597370060 * x);
	L1 += 0.00000006664 * Utils.cost(5.07517838003 + 8031.09226305840 * x);
	L1 += 0.00000008650 * Utils.cost(4.33256981793 + 3339.63210563160 * x);
	L1 += 0.00000007372 * Utils.cost(6.17831593269 + 3583.34103067380 * x);
	L1 += 0.00000005726 * Utils.cost(3.68120120299 + 8429.24126646660 * x);
	L1 += 0.00000006186 * Utils.cost(3.54165967734 + 692.15760122680 * x);
	L1 += 0.00000005438 * Utils.cost(1.05129689580 + 4933.20844033260 * x);
	L1 += 0.00000006108 * Utils.cost(1.66240879939 + 6525.80445396540 * x);
	L1 += 0.00000005154 * Utils.cost(1.14703246368 + 28.44918746780 * x);
	L1 += 0.00000004850 * Utils.cost(5.29254832907 + 6681.29216370240 * x);
	L1 += 0.00000005467 * Utils.cost(6.12511022569 + 2487.41604494780 * x);
	L1 += 0.00000004866 * Utils.cost(3.10475368803 + 5.52292430740 * x);
	L1 += 0.00000006360 * Utils.cost(2.11896608283 + 5884.92684658320 * x);
	L1 += 0.00000005223 * Utils.cost(0.37446264120 + 12832.75874170460 * x);
	L1 += 0.00000004710 * Utils.cost(0.23326120326 + 36.02786667740 * x);
	L1 += 0.00000004954 * Utils.cost(2.44806818502 + 5099.26550511660 * x);
	L1 += 0.00000004861 * Utils.cost(5.60505298870 + 6467.92575796160 * x);
	L1 += 0.00000004706 * Utils.cost(0.02998416568 + 7210.91581849420 * x);
	L1 += 0.00000004845 * Utils.cost(5.70115105957 + 6681.15754309680 * x);
	L1 += 0.00000005496 * Utils.cost(2.01006612503 + 522.57741809380 * x);
	L1 += 0.00000004964 * Utils.cost(1.51006845561 + 1744.42598441520 * x);
	L1 += 0.00000004443 * Utils.cost(0.31208413867 + 10018.31416175040 * x);
	L1 += 0.00000005381 * Utils.cost(0.18359380473 + 2942.46342329160 * x);
	L1 += 0.00000004075 * Utils.cost(3.95582108330 + 3.88133535800 * x);
	L1 += 0.00000005462 * Utils.cost(0.19274227117 + 7632.94325965020 * x);
	L1 += 0.00000004110 * Utils.cost(1.59535768711 + 7234.79425624200 * x);
	L1 += 0.00000004287 * Utils.cost(2.87635993968 + 2810.92146160520 * x);
	L1 += 0.00000005276 * Utils.cost(2.22638595594 + 3127.31333126180 * x);
	L1 += 0.00000004450 * Utils.cost(4.17005729081 + 2906.90068882300 * x);
	L1 += 0.00000005144 * Utils.cost(5.66878565669 + 23384.28698689860 * x);
	L1 += 0.00000003844 * Utils.cost(2.26442183160 + 2699.73481931760 * x);
	L1 += 0.00000003514 * Utils.cost(1.76463961051 + 1758.65307841680 * x);
	L1 += 0.00000003351 * Utils.cost(2.66194137496 + 4929.68532198360 * x);
	L1 += 0.00000004299 * Utils.cost(4.43057446968 + 640.87760738220 * x);
	L1 += 0.00000003140 * Utils.cost(1.75866226873 + 9595.23908922340 * x);
	L1 += 0.00000003716 * Utils.cost(2.91969220147 + 15643.68020330980 * x);
	L1 += 0.00000003249 * Utils.cost(6.13937134379 + 10419.98628350760 * x);
	L1 += 0.00000003077 * Utils.cost(2.56115174488 + 7064.12138562280 * x);
	L1 += 0.00000003208 * Utils.cost(2.32519453080 + 5085.03841111500 * x);
	L1 += 0.00000002930 * Utils.cost(1.27797225349 + 574.34479833480 * x);
	L1 += 0.00000002771 * Utils.cost(1.75664216142 + 639.89728631400 * x);
	L1 += 0.00000003325 * Utils.cost(2.58945297384 + 2118.76386037840 * x);
	L1 += 0.00000003187 * Utils.cost(2.86646751510 + 7740.60678358880 * x);
	L1 += 0.00000002780 * Utils.cost(0.43157089331 + 5828.02847164760 * x);
	L1 += 0.00000002824 * Utils.cost(0.98500544471 + 3191.04922956520 * x);
	L1 += 0.00000003016 * Utils.cost(1.86555882509 + 7.04623669800 * x);
	L1 += 0.00000003364 * Utils.cost(1.52847138842 + 6674.11130639880 * x);
	L1 += 0.00000002672 * Utils.cost(3.70855172347 + 10021.85453375160 * x);
	L1 += 0.00000002636 * Utils.cost(3.11790581052 + 6836.64525283380 * x);
	L1 += 0.00000002672 * Utils.cost(1.67778079449 + 10021.82002644720 * x);
	L1 += 0.00000002563 * Utils.cost(3.77294986894 + 2921.12778282460 * x);
	L1 += 0.00000002509 * Utils.cost(0.30454165124 + 3475.67750673520 * x);
	L1 += 0.00000002400 * Utils.cost(0.96972421975 + 3319.83703120740 * x);
	L1 += 0.00000002262 * Utils.cost(2.81394314950 + 7875.67186362420 * x);
	L1 += 0.00000002395 * Utils.cost(2.96002707485 + 6682.20517446780 * x);
	L1 += 0.00000002210 * Utils.cost(0.61263930586 + 10973.55568635000 * x);
	L1 += 0.00000002248 * Utils.cost(4.12382007742 + 59.37386191360 * x);
	L1 += 0.00000002426 * Utils.cost(5.91508357946 + 5331.35744374080 * x);
	L1 += 0.00000002158 * Utils.cost(2.17583545077 + 15113.98923821520 * x);
	L1 += 0.00000001941 * Utils.cost(5.47668312685 + 11371.70468975820 * x);
	L1 += 0.00000001903 * Utils.cost(5.11165653855 + 1066.49547719000 * x);
	L1 += 0.00000002370 * Utils.cost(3.87889340214 + 3355.86489788480 * x);
	L1 += 0.00000002299 * Utils.cost(1.15914205086 + 3320.25710730100 * x);
	L1 += 0.00000001944 * Utils.cost(5.89081872133 + 6894.52394883760 * x);
	L1 += 0.00000001843 * Utils.cost(3.07643314617 + 3325.35995551480 * x);
	L1 += 0.00000001809 * Utils.cost(4.97905218276 + 1648.44675719740 * x);
	L1 += 0.00000002136 * Utils.cost(1.91364787635 + 8969.56889691100 * x);
	L1 += 0.00000002099 * Utils.cost(3.00410255642 + 6254.62666252360 * x);
	L1 += 0.00000001915 * Utils.cost(3.55907431740 + 3767.21061757580 * x);
	L1 += 0.00000001991 * Utils.cost(5.37274107053 + 206.18554843720 * x);
	L1 += 0.00000001685 * Utils.cost(5.49701299817 + 266.60704172180 * x);
	L1 += 0.00000001646 * Utils.cost(1.31923405548 + 3264.34635542420 * x);
	L1 += 0.00000001732 * Utils.cost(1.81361103995 + 536.80451209540 * x);
	L1 += 0.00000001723 * Utils.cost(3.25900379342 + 7903.07341972100 * x);
	L1 += 0.00000001564 * Utils.cost(5.75428852012 + 3360.96774609859 * x);
	L1 += 0.00000001589 * Utils.cost(1.73273563259 + 3134.42687826260 * x);
	L1 += 0.00000001690 * Utils.cost(2.43213510013 + 3120.19978426100 * x);
	L1 += 0.00000001549 * Utils.cost(1.54016426558 + 8425.65083781480 * x);
	L1 += 0.00000001536 * Utils.cost(5.88431472627 + 20.77539549240 * x);
	L1 += 0.00000001460 * Utils.cost(4.89733072879 + 9830.38901398780 * x);
	L1 += 0.00000002023 * Utils.cost(5.94808387002 + 13365.97282514820 * x);
	L1 += 0.00000001991 * Utils.cost(3.11613326265 + 3361.38782219220 * x);
	L1 += 0.00000001401 * Utils.cost(2.24482184868 + 3344.20285535160 * x);
	L1 += 0.00000001365 * Utils.cost(4.58006320751 + 10818.13528691580 * x);
	L1 += 0.00000001392 * Utils.cost(5.48931017516 + 170.67287061920 * x);
	L1 += 0.00000001360 * Utils.cost(3.07974035205 + 6127.65545055720 * x);
	L1 += 0.00000001345 * Utils.cost(1.18653158091 + 14584.29827312060 * x);
	L1 += 0.00000001717 * Utils.cost(5.62501515015 + 6158.64743530580 * x);
	L1 += 0.00000001408 * Utils.cost(1.82072980335 + 3337.02199804800 * x);
	L1 += 0.00000001736 * Utils.cost(2.01921900546 + 10575.40668294180 * x);
	L1 += 0.00000001402 * Utils.cost(4.50079374387 + 5729.50644714900 * x);
	L1 += 0.00000001266 * Utils.cost(5.91088435118 + 9808.53818466140 * x);
	L1 += 0.00000001433 * Utils.cost(6.05024653324 + 12964.30070339100 * x);
	L1 += 0.00000001223 * Utils.cost(0.82796258263 + 419.48464387520 * x);
	L1 += 0.00000001393 * Utils.cost(1.05117949107 + 6438.49624942560 * x);
	L1 += 0.00000001272 * Utils.cost(1.50116723856 + 8439.87793181640 * x);
	L1 += 0.00000001143 * Utils.cost(4.89747373731 + 220.41264243880 * x);
	L1 += 0.00000001183 * Utils.cost(3.52587190041 + 6688.33840040040 * x);
	L1 += 0.00000001132 * Utils.cost(6.19236255633 + 6144.42034130420 * x);
	L1 += 0.00000001154 * Utils.cost(2.23058485970 + 8955.34180290940 * x);
	L1 += 0.00000001129 * Utils.cost(3.44264300692 + 10177.25767953360 * x);
	L1 += 0.00000001152 * Utils.cost(5.29913300616 + 27.40155609680 * x);
	L1 += 0.00000001274 * Utils.cost(4.58421238440 + 6247.51311552280 * x);
	L1 += 0.00000001093 * Utils.cost(2.82623332360 + 4569.57454002200 * x);
	L1 += 0.00000001303 * Utils.cost(0.44350560735 + 87.30820453981 * x);
	L1 += 0.00000001335 * Utils.cost(2.14204457730 + 11243.68584642080 * x);
	L1 += 0.00000001102 * Utils.cost(1.96260837539 + 6298.32832117640 * x);
	L1 += 0.00000001066 * Utils.cost(2.89865914321 + 10404.73381232260 * x);
	L1 += 0.00000001027 * Utils.cost(4.79269049654 + 3914.95722503460 * x);
	L1 += 0.00000001015 * Utils.cost(0.22847818730 + 3230.40610548040 * x);
	L1 += 0.00000001041 * Utils.cost(3.73274497451 + 10213.28554621100 * x);
	L1 += 0.00000001154 * Utils.cost(4.14326179244 + 6261.74020952440 * x);
	L1 += 0.00000001306 * Utils.cost(3.67645557029 + 2301.58581590939 * x);
	L1 += 0.00000001145 * Utils.cost(5.12292846748 + 4562.46099302120 * x);
	L1 += 0.00000001275 * Utils.cost(5.14333847164 + 2693.60159338500 * x);
	L1 += 0.00000000914 * Utils.cost(1.22398892152 + 103.09277421860 * x);
	L1 += 0.00000000955 * Utils.cost(1.52875141393 + 3369.06161416760 * x);
	L1 += 0.00000000908 * Utils.cost(0.48223420834 + 13358.92658845020 * x);
	L1 += 0.00000000892 * Utils.cost(1.35161136807 + 1214.73501932060 * x);
	L1 += 0.00000000998 * Utils.cost(3.29665881950 + 3178.14579056760 * x);
	L1 += 0.00000000980 * Utils.cost(1.69212466625 + 43.71891230500 * x);
	L1 += 0.00000000919 * Utils.cost(2.45445889752 + 13916.01910964160 * x);
	L1 += 0.00000000899 * Utils.cost(5.94990531529 + 12168.00269657460 * x);
	L1 += 0.00000000891 * Utils.cost(5.63297246408 + 10021.90459040220 * x);
	L1 += 0.00000000922 * Utils.cost(3.91483430303 + 9225.53927328300 * x);
	L1 += 0.00000000930 * Utils.cost(0.24073004700 + 6923.95345737360 * x);
	L1 += 0.00000000923 * Utils.cost(1.10396074450 + 29.42950853600 * x);
	L1 += 0.00000000816 * Utils.cost(4.65198282005 + 2707.82868738660 * x);
	L1 += 0.00000000791 * Utils.cost(6.08595583868 + 2384.32327072920 * x);
	L1 += 0.00000000820 * Utils.cost(4.80968546763 + 533.21408344360 * x);
	L1 += 0.00000000758 * Utils.cost(2.06012386134 + 12935.85151592320 * x);
	L1 += 0.00000000738 * Utils.cost(1.03564559078 + 14314.16811304980 * x);
	L1 += 0.00000000908 * Utils.cost(0.69862047595 + 16173.37116840440 * x);
	L1 += 0.00000000700 * Utils.cost(4.08788234610 + 5202.35827933520 * x);
	L1 += 0.00000000829 * Utils.cost(2.01062325398 + 9866.41688066520 * x);
	L1 += 0.00000000887 * Utils.cost(6.04145842617 + 10021.76996979660 * x);
	L1 += 0.00000000768 * Utils.cost(1.39532897827 + 8273.82086703240 * x);
	L1 += 0.00000000873 * Utils.cost(4.45446600602 + 3316.73398895200 * x);
	L1 += 0.00000000673 * Utils.cost(3.02440642752 + 1039.02661079040 * x);
	L1 += 0.00000000660 * Utils.cost(2.83410276989 + 107.66352393860 * x);
	L1 += 0.00000000838 * Utils.cost(0.39195370222 + 10551.52824519400 * x);
	L1 += 0.00000000708 * Utils.cost(3.27560955336 + 18984.29263000960 * x);
	L1 += 0.00000000658 * Utils.cost(6.01853128902 + 26724.89941359840 * x);
	L1 += 0.00000000685 * Utils.cost(1.98132615912 + 1228.96211332220 * x);
	L1 += 0.00000000595 * Utils.cost(0.10260171285 + 111.18664228760 * x);
	L1 += 0.00000000563 * Utils.cost(1.59138368358 + 2391.43681773000 * x);
	L1 += 0.00000000555 * Utils.cost(2.70801962190 + 4555.34744602040 * x);
	L1 += 0.00000000696 * Utils.cost(2.89276686038 + 2648.45482547300 * x);
	L1 += 0.00000000587 * Utils.cost(4.56017988729 + 6680.24453233140 * x);
	L1 += 0.00000000540 * Utils.cost(2.86002662919 + 5459.37628707820 * x);
	L1 += 0.00000000530 * Utils.cost(5.64877399946 + 6034.21402008480 * x);
	L1 += 0.00000000520 * Utils.cost(0.20012848836 + 13760.59871020740 * x);
	L1 += 0.00000000552 * Utils.cost(5.08766140543 + 1903.43681250120 * x);
	L1 += 0.00000000512 * Utils.cost(3.21411265909 + 11081.21921028860 * x);
	L1 += 0.00000000641 * Utils.cost(5.19459033638 + 6048.44111408640 * x);
	L1 += 0.00000000677 * Utils.cost(3.87723948458 + 13517.87010623340 * x);
	L1 += 0.00000000534 * Utils.cost(0.23224033336 + 51.28033786241 * x);
	L1 += 0.00000000670 * Utils.cost(3.69368226469 + 3335.08950239240 * x);
	L1 += 0.00000000486 * Utils.cost(2.41879628327 + 3364.49086444760 * x);
	L1 += 0.00000000500 * Utils.cost(4.31447859057 + 3344.49376205780 * x);
	L1 += 0.00000000481 * Utils.cost(1.56481992611 + 1964.83862685400 * x);
	L1 += 0.00000000504 * Utils.cost(2.47456295599 + 3863.18984479360 * x);
	L1 += 0.00000000523 * Utils.cost(0.65856269237 + 853.19638175200 * x);
	L1 += 0.00000000481 * Utils.cost(0.12971954679 + 66.48740891440 * x);
	L1 += 0.00000000535 * Utils.cost(2.98601678918 + 8270.29774868340 * x);
	L1 += 0.00000000450 * Utils.cost(2.02303462834 + 13362.43245314700 * x);
	L1 += 0.00000000448 * Utils.cost(5.59827312967 + 149.56319713460 * x);
	L1 += 0.00000000519 * Utils.cost(2.75931838722 + 3503.07906283200 * x);
	L1 += 0.00000000534 * Utils.cost(4.77352933347 + 1118.75579210280 * x);
	L1 += 0.00000000450 * Utils.cost(4.05380888708 + 13362.46696045140 * x);
	L1 += 0.00000000439 * Utils.cost(4.83194205477 + 3116.26763099790 * x);
	L1 += 0.00000000567 * Utils.cost(5.67483490268 + 227.47613278900 * x);
	L1 += 0.00000000459 * Utils.cost(3.44555998004 + 6702.00024889200 * x);
	L1 += 0.00000000545 * Utils.cost(2.01193901951 + 7910.18696672180 * x);
	L1 += 0.00000000425 * Utils.cost(2.79854459343 + 433.71173787680 * x);
	L1 += 0.00000000429 * Utils.cost(4.30113040289 + 16858.48253293320 * x);
	L1 += 0.00000000409 * Utils.cost(0.05448009540 + 3304.58456002240 * x);
	L1 += 0.00000000434 * Utils.cost(5.70806855136 + 21.85082932640 * x);
	L1 += 0.00000000399 * Utils.cost(4.93233684937 + 9779.10867612540 * x);
	L1 += 0.00000000532 * Utils.cost(1.31038986189 + 6660.44945790720 * x);
	L1 += 0.00000000398 * Utils.cost(5.31345458361 + 13119.72110282519 * x);
	L1 += 0.00000000459 * Utils.cost(2.53671963587 + 74.78159856730 * x);
	L1 += 0.00000000384 * Utils.cost(2.29906801437 + 12310.18132361080 * x);
	L1 += 0.00000000467 * Utils.cost(5.12562716972 + 1596.18644228460 * x);
	L1 += 0.00000000516 * Utils.cost(5.84767782422 + 1052.26838318840 * x);
	L1 += 0.00000000414 * Utils.cost(4.75409582610 + 3981.49003408200 * x);
	L1 += 0.00000000365 * Utils.cost(3.73271671549 + 5518.75014899180 * x);
	L1 += 0.00000000367 * Utils.cost(0.13506394328 + 56.89837493560 * x);
	L1 += 0.00000000459 * Utils.cost(0.15582180531 + 9381.93999378540 * x);
	L1 += 0.00000000392 * Utils.cost(2.15845463651 + 3980.50971301380 * x);
	L1 += 0.00000000396 * Utils.cost(1.48538591462 + 17924.91069982040 * x);
	L1 += 0.00000000456 * Utils.cost(0.64517343174 + 6816.28993343500 * x);
	L1 += 0.00000000358 * Utils.cost(5.87219240658 + 3607.21946842160 * x);
	L1 += 0.00000000490 * Utils.cost(0.65766946042 + 3376.64029337720 * x);
	L1 += 0.00000000365 * Utils.cost(1.91816243676 + 3347.65866339780 * x);
	L1 += 0.00000000397 * Utils.cost(1.80006148744 + 7895.95987272020 * x);
	L1 += 0.00000000336 * Utils.cost(2.14687780119 + 6677.63442474780 * x);
	L1 += 0.00000000340 * Utils.cost(2.88185925998 + 17256.63153634140 * x);
	L1 += 0.00000000334 * Utils.cost(6.13670038311 + 5724.93569742900 * x);
	L1 += 0.00000000339 * Utils.cost(4.08527025169 + 664.75604513000 * x);
	L1 += 0.00000000432 * Utils.cost(2.52188285182 + 18454.60166491500 * x);
	L1 += 0.00000000336 * Utils.cost(4.22863444521 + 6696.47732458460 * x);
	L1 += 0.00000000342 * Utils.cost(5.96724705923 + 3546.79797513700 * x);
	L1 += 0.00000000326 * Utils.cost(4.02557052581 + 6872.67311951120 * x);
	L1 += 0.00000000323 * Utils.cost(5.05444843838 + 3237.51965248120 * x);
	L1 += 0.00000000324 * Utils.cost(2.89151245241 + 8329.67161059700 * x);
	L1 += 0.00000000321 * Utils.cost(6.25886976298 + 10235.13637553740 * x);
	L1 += 0.00000000333 * Utils.cost(2.57725424455 + 6684.81528205140 * x);
	L1 += 0.00000000356 * Utils.cost(6.27424874986 + 8671.96987044060 * x);
	L1 += 0.00000000319 * Utils.cost(5.05665355586 + 36.60536530420 * x);
	L1 += 0.00000000305 * Utils.cost(3.88755666972 + 7107.82304427560 * x);
	L1 += 0.00000000322 * Utils.cost(6.28125601341 + 16706.58525184800 * x);
	L1 += 0.00000000334 * Utils.cost(3.15240620873 + 11216.28429032400 * x);
	L1 += 0.00000000287 * Utils.cost(6.16467002771 + 3973.39616601300 * x);
	L1 += 0.00000000283 * Utils.cost(2.67802456636 + 3877.41693879520 * x);
	L1 += 0.00000000283 * Utils.cost(1.66293157090 + 1692.16566950240 * x);
	L1 += 0.00000000276 * Utils.cost(2.94210551399 + 3415.39402526710 * x);
	L1 += 0.00000000275 * Utils.cost(0.53418048945 + 17395.21973472580 * x);
	L1 += 0.00000000355 * Utils.cost(3.31406527401 + 10022.81760116760 * x);
	L1 += 0.00000000311 * Utils.cost(1.50310910269 + 6660.86953400080 * x);
	L1 += 0.00000000269 * Utils.cost(1.84517097065 + 11780.49035851620 * x);
	L1 += 0.00000000270 * Utils.cost(4.42425307819 + 310.84079886840 * x);
	L1 += 0.00000000275 * Utils.cost(3.58464612058 + 128.01884333740 * x);
	L1 += 0.00000000275 * Utils.cost(2.22523539580 + 3017.10701004240 * x);
	L1 += 0.00000000312 * Utils.cost(5.15950395287 + 7255.56965173440 * x);
	L1 += 0.00000000299 * Utils.cost(0.72552273097 + 155.35308913140 * x);
	L1 += 0.00000000353 * Utils.cost(5.70047798350 + 16460.33352952499 * x);
	L1 += 0.00000000267 * Utils.cost(5.97864271046 + 9499.25986200560 * x);
	L1 += 0.00000000270 * Utils.cost(0.77063210836 + 11236.57229942000 * x);
	L1 += 0.00000000339 * Utils.cost(3.36092148900 + 5625.36604155940 * x);
	L1 += 0.00000000315 * Utils.cost(2.33795159922 + 3281.23856478620 * x);
	L1 += 0.00000000247 * Utils.cost(3.71002922076 + 7373.38245462640 * x);
	L1 += 0.00000000328 * Utils.cost(0.18162415648 + 5618.31980486140 * x);
	L1 += 0.00000000247 * Utils.cost(6.27486009856 + 15508.61512327440 * x);
	L1 += 0.00000000292 * Utils.cost(0.14989609091 + 16304.91313009080 * x);
	L1 += 0.00000000326 * Utils.cost(4.53606745007 + 2178.13772229200 * x);
	L1 += 0.00000000286 * Utils.cost(5.47710043383 + 9168.64089834740 * x);
	L1 += 0.00000000246 * Utils.cost(1.49838712480 + 15110.46611986620 * x);
	L1 += 0.00000000262 * Utils.cost(2.58821936465 + 3336.73109134180 * x);
	L1 += 0.00000000244 * Utils.cost(0.84015413449 + 16062.18452611680 * x);
	L1 += 0.00000000245 * Utils.cost(0.37772563756 + 12721.57209941700 * x);
	L1 += 0.00000000250 * Utils.cost(2.26824758119 + 6784.31762761820 * x);
	L1 += 0.00000000248 * Utils.cost(6.22740483254 + 13149.15061136120 * x);
	L1 += 0.00000000255 * Utils.cost(4.93078809107 + 14158.74771361560 * x);
	L1 += 0.00000000240 * Utils.cost(6.15843594225 + 19800.94595622480 * x);
	L1 += 0.00000000249 * Utils.cost(5.47044926479 + 4407.10790388980 * x);
	L1 += 0.00000000235 * Utils.cost(5.38750866169 + 76.26607127560 * x);
	L1 += 0.00000000258 * Utils.cost(6.10384464886 + 2480.30249794700 * x);
	L1 += 0.00000000306 * Utils.cost(5.35546231697 + 2766.26762836500 * x);
	L1 += 0.00000000236 * Utils.cost(5.25670707064 + 13171.00144068760 * x);
	L1 += 0.00000000224 * Utils.cost(4.52466909993 + 12566.15169998280 * x);
	L1 += 0.00000000220 * Utils.cost(5.83694256642 + 13936.79450513400 * x);
	L1 += 0.00000000271 * Utils.cost(1.42460945147 + 14054.60730802600 * x);
	L1 += 0.00000000213 * Utils.cost(0.21127914063 + 1505.28780909299 * x);
	L1 += 0.00000000267 * Utils.cost(5.16501015011 + 3205.54734666440 * x);
	L1 += 0.00000000212 * Utils.cost(4.26202838353 + 6546.15977336420 * x);
	L1 += 0.00000000211 * Utils.cost(6.21401684263 + 3253.30422216000 * x);
	L1 += 0.00000000233 * Utils.cost(3.72007597749 + 3346.13535100720 * x);
	L1 += 0.00000000274 * Utils.cost(2.91986569135 + 10713.99488132620 * x);
	L1 += 0.00000000201 * Utils.cost(3.36695295492 + 6.68366387410 * x);
	L1 += 0.00000000223 * Utils.cost(3.08788599159 + 401.67212175720 * x);
	L1 += 0.00000000234 * Utils.cost(2.24268269202 + 110.20632121940 * x);
	L1 += 0.00000000264 * Utils.cost(2.08178742740 + 6475.03930496240 * x);
	L1 += 0.00000000231 * Utils.cost(4.53806384480 + 9602.35263622420 * x);
	L1 += 0.00000000213 * Utils.cost(2.85452302656 + 5415.65737477320 * x);
	L1 += 0.00000000195 * Utils.cost(0.99589439506 + 5642.19824260920 * x);
	L1 += 0.00000000259 * Utils.cost(0.00464351114 + 9380.95967271720 * x);
	L1 += 0.00000000197 * Utils.cost(3.32573550633 + 3657.00429635640 * x);
	L1 += 0.00000000228 * Utils.cost(5.33299975472 + 3561.02506913860 * x);
	L1 += 0.00000000193 * Utils.cost(1.25502846507 + 6606.44325483230 * x);
	L1 += 0.00000000199 * Utils.cost(1.13665869139 + 685.04405422600 * x);
	L1 += 0.00000000227 * Utils.cost(4.49610509002 + 589.06482700820 * x);
	L1 += 0.00000000217 * Utils.cost(5.48740879816 + 10596.18207843420 * x);
	L1 += 0.00000000192 * Utils.cost(4.26501800444 + 3333.56619000180 * x);
	L1 += 0.00000000188 * Utils.cost(1.44301618203 + 4885.96640967860 * x);
	L1 += 0.00000000178 * Utils.cost(4.82506490541 + 9070.11887384880 * x);
	L1 += 0.00000000184 * Utils.cost(5.69637552141 + 3351.24909204960 * x);
	L1 += 0.00000000187 * Utils.cost(0.76021337348 + 16699.53901514999 * x);
	L1 += 0.00000000226 * Utils.cost(0.82767654373 + 3265.83082813250 * x);
	L1 += 0.00000000204 * Utils.cost(6.20933387021 + 394.62588505920 * x);
	L1 += 0.00000000176 * Utils.cost(3.89567349231 + 10028.95082710020 * x);
	L1 += 0.00000000174 * Utils.cost(3.68843293982 + 735.87651353180 * x);
	L1 += 0.00000000173 * Utils.cost(2.44269377255 + 3603.69635007260 * x);
	L1 += 0.00000000177 * Utils.cost(1.24154853329 + 12722.55242048520 * x);
	L1 += 0.00000000184 * Utils.cost(4.77203925989 + 286.96236112060 * x);
	L1 += 0.00000000171 * Utils.cost(4.67140116008 + 20199.09495963300 * x);
	L1 += 0.00000000170 * Utils.cost(5.13753345526 + 1332.05488754080 * x);
	L1 += 0.00000000201 * Utils.cost(2.37863157745 + 16276.46394262300 * x);
	L1 += 0.00000000209 * Utils.cost(0.57156268506 + 11250.79939342160 * x);
	L1 += 0.00000000164 * Utils.cost(1.98441291396 + 10014.72373309860 * x);
	L1 += 0.00000000191 * Utils.cost(0.60250751218 + 56.80326216980 * x);
	L1 += 0.00000000171 * Utils.cost(6.22556266993 + 17277.40693183380 * x);
	L1 += 0.00000000166 * Utils.cost(1.05948008727 + 19513.98359510420 * x);
	L1 += 0.00000000163 * Utils.cost(1.59661610701 + 1437.17561419860 * x);
	L1 += 0.00000000165 * Utils.cost(3.36308723589 + 6665.97238221460 * x);
	L1 += 0.00000000184 * Utils.cost(3.20554894393 + 263.08392337280 * x);
	L1 += 0.00000000212 * Utils.cost(3.10485836003 + 4039.88357492740 * x);
	L1 += 0.00000000176 * Utils.cost(3.41768939214 + 9468.26787725700 * x);
	L1 += 0.00000000163 * Utils.cost(1.39275730949 + 8982.81066930900 * x);
	L1 += 0.00000000213 * Utils.cost(3.39734274482 + 931.36308685180 * x);
	L1 += 0.00000000189 * Utils.cost(4.54004144896 + 8542.97070603500 * x);
	L1 += 0.00000000191 * Utils.cost(1.15555618959 + 3169.93955608060 * x);
	L1 += 0.00000000155 * Utils.cost(1.41249963094 + 22.76849660940 * x);
	L1 += 0.00000000153 * Utils.cost(5.14168081601 + 156.40072050240 * x);
	L1 += 0.00000000159 * Utils.cost(3.64996617906 + 8013.27974094040 * x);
	L1 += 0.00000000151 * Utils.cost(1.93804487507 + 3384.33133900480 * x);
	L1 += 0.00000000157 * Utils.cost(0.58554505759 + 158.94351778320 * x);
	L1 += 0.00000000173 * Utils.cost(2.72517427493 + 2807.39834325620 * x);
	L1 += 0.00000000159 * Utils.cost(0.67192454133 + 13892.14067189380 * x);
	L1 += 0.00000000150 * Utils.cost(2.66045714174 + 19004.64794940840 * x);
	L1 += 0.00000000192 * Utils.cost(5.73782632783 + 206.70073729660 * x);
	L1 += 0.00000000143 * Utils.cost(3.19213280913 + 6843.69148953180 * x);
	L1 += 0.00000000194 * Utils.cost(1.32358882667 + 19402.79695281660 * x);
	L1 += 0.00000000143 * Utils.cost(2.36478163720 + 13207.02930736500 * x);
	L1 += 0.00000000140 * Utils.cost(1.88800568840 + 11766.26326451460 * x);
	L1 += 0.00000000144 * Utils.cost(0.69018080218 + 17085.95866572220 * x);
	L1 += 0.00000000183 * Utils.cost(5.98085295555 + 13362.51701710200 * x);
	L1 += 0.00000000161 * Utils.cost(2.92764155222 + 5.85720229960 * x);
	L1 += 0.00000000162 * Utils.cost(6.07051064413 + 6701.58017279840 * x);
	L1 += 0.00000000192 * Utils.cost(0.86266150575 + 2814.44457995420 * x);
	L1 += 0.00000000182 * Utils.cost(5.26446797092 + 3873.82651014340 * x);
	L1 += 0.00000000137 * Utils.cost(0.41563614709 + 5820.91492464680 * x);
	L1 += 0.00000000144 * Utils.cost(3.02314051168 + 708.98980227659 * x);
	L1 += 0.00000000184 * Utils.cost(4.61314496499 + 3329.97576135000 * x);
	L1 += 0.00000000131 * Utils.cost(3.48156082643 + 367.22432896240 * x);
	L1 += 0.00000000173 * Utils.cost(3.09922849765 + 12295.95422960920 * x);
	L1 += 0.00000000135 * Utils.cost(2.23311632892 + 15664.03552270859 * x);
	L1 += 0.00000000147 * Utils.cost(1.95810911154 + 5732.04924442980 * x);
	L1 += 0.00000000158 * Utils.cost(1.48909254724 + 29.49181830340 * x);
	L1 += 0.00000000127 * Utils.cost(5.55534080040 + 3368.01398279660 * x);
	L1 += 0.00000000129 * Utils.cost(1.78002583252 + 22743.40937951640 * x);
	L1 += 0.00000000132 * Utils.cost(2.81496895377 + 21795.21409161479 * x);
	L1 += 0.00000000127 * Utils.cost(5.73090203501 + 3340.19235060619 * x);
	L1 += 0.00000000164 * Utils.cost(1.87613918877 + 6709.67404086740 * x);
	L1 += 0.00000000123 * Utils.cost(3.61238958991 + 22324.90505670940 * x);
	L1 += 0.00000000129 * Utils.cost(4.92064308735 + 2540.79130153440 * x);
	L1 += 0.00000000121 * Utils.cost(6.16922638434 + 20206.14119633100 * x);
	L1 += 0.00000000122 * Utils.cost(5.79901866314 + 1854.63230563460 * x);
	L1 += 0.00000000133 * Utils.cost(0.50941998058 + 3274.12501778540 * x);
	L1 += 0.00000000151 * Utils.cost(1.61342807879 + 1107.13880568480 * x);
	L1 += 0.00000000165 * Utils.cost(2.02795177586 + 290.48547946960 * x);
	L1 += 0.00000000125 * Utils.cost(0.52719797619 + 2604.73591316800 * x);
	L1 += 0.00000000144 * Utils.cost(5.68526782434 + 8827.39026987480 * x);
	L1 += 0.00000000126 * Utils.cost(3.80246508251 + 765.79306444640 * x);
	L1 += 0.00000000116 * Utils.cost(1.79450246249 + 647.01083331480 * x);
	L1 += 0.00000000126 * Utils.cost(2.00195272473 + 699.27114822760 * x);
	L1 += 0.00000000147 * Utils.cost(6.22619740782 + 6040.34724601740 * x);
	L1 += 0.00000000119 * Utils.cost(2.05840518265 + 15121.10278521600 * x);
	L1 += 0.00000000114 * Utils.cost(2.74877091470 + 6460.81221096080 * x);
	L1 += 0.00000000155 * Utils.cost(1.78154091696 + 21265.52312652020 * x);
	L1 += 0.00000000146 * Utils.cost(3.37351237411 + 1861.74585263540 * x);
	L1 += 0.00000000118 * Utils.cost(4.07281676691 + 418.50432280700 * x);
	L1 += 0.00000000116 * Utils.cost(0.10434606071 + 13362.38239649640 * x);
	L1 += 0.00000000129 * Utils.cost(0.78419803719 + 3427.92063123960 * x);
	L1 += 0.00000000152 * Utils.cost(0.32620694442 + 3443.70520091840 * x);
	L1 += 0.00000000110 * Utils.cost(0.56398082486 + 661.23292678100 * x);
	L1 += 0.00000000111 * Utils.cost(4.05380946072 + 568.82187402740 * x);
	L1 += 0.00000000108 * Utils.cost(3.17700641574 + 3448.27595063840 * x);
	L1 += 0.00000000138 * Utils.cost(4.47698517191 + 3326.38533269820 * x);
	L1 += 0.00000000108 * Utils.cost(4.89922372003 + 9588.12554222260 * x);
	L1 += 0.00000000114 * Utils.cost(4.80828825403 + 6657.34641565180 * x);
	L1 += 0.00000000108 * Utils.cost(4.10637483972 + 13553.89797291080 * x);
	L1 += 0.00000000125 * Utils.cost(0.33573243959 + 18849.22754997420 * x);
	L1 += 0.00000000115 * Utils.cost(3.18885465852 + 2409.24933984800 * x);
	L1 += 0.00000000104 * Utils.cost(3.23074163851 + 3472.15438838620 * x);
	L1 += 0.00000000104 * Utils.cost(0.09799515047 + 30065.51184029820 * x);
	L1 += 0.00000000112 * Utils.cost(1.64487733528 + 10001.06188460700 * x);
	L1 += 0.00000000143 * Utils.cost(3.53781769283 + 6518.75821726740 * x);
	L1 += 0.00000000113 * Utils.cost(5.20979306912 + 2125.87740737920 * x);
	L1 += 0.00000000104 * Utils.cost(2.77582098882 + 38.13303563780 * x);
	L1 += 0.00000000133 * Utils.cost(5.88513337452 + 5835.14201864840 * x);
	L1 += 0.00000000105 * Utils.cost(4.11662579413 + 6675.70192909220 * x);
	L1 += 0.00000000102 * Utils.cost(0.60100887043 + 10264.56588407340 * x);
	L1 += 0.00000000101 * Utils.cost(3.78636130664 + 10042.61267559180 * x);
	L1 += 0.00000000139 * Utils.cost(1.80936944447 + 12323.42309600880 * x);
	L1 += 0.00000000101 * Utils.cost(2.47217208753 + 7380.49600162720 * x);
	L1 += 0.00000000130 * Utils.cost(2.53454569863 + 11769.85369316640 * x);
	L1 += 0.00000000100 * Utils.cost(5.72291104291 + 14.22709400160 * x);
	L1 += 0.00000000135 * Utils.cost(4.20237564510 + 4672.66731424060 * x);
	L1 += 0.00000000133 * Utils.cost(0.34413768012 + 16489.76303806100 * x);
	L1 += 0.00000000098 * Utils.cost(1.44874403589 + 3370.04193523580 * x);
	L1 += 0.00000000131 * Utils.cost(1.31336606248 + 3313.21087060300 * x);
	L1 += 0.00000000111 * Utils.cost(3.12463539337 + 309.27832265580 * x);
	L1 += 0.00000000101 * Utils.cost(3.15369992044 + 24150.08005134500 * x);
	L1 += 0.00000000102 * Utils.cost(6.13479937096 + 2277.70737816160 * x);
	L1 += 0.00000000099 * Utils.cost(0.10085261274 + 12839.87228870540 * x);
	L1 += 0.00000000134 * Utils.cost(2.91637947295 + 57.87869600380 * x);
	L1 += 0.00000000104 * Utils.cost(3.30283052330 + 3399.98628861340 * x);
	L1 += 0.00000000108 * Utils.cost(4.92699760221 + 802.36392244620 * x);
	L1 += 0.00000000106 * Utils.cost(2.89298330043 + 7799.98064550240 * x);
	L1 += 0.00000000112 * Utils.cost(3.12761163915 + 5989.06725217280 * x);
	L1 += 0.00000000094 * Utils.cost(3.42562596561 + 3510.19260983280 * x);
	L1 += 0.00000000102 * Utils.cost(0.94285421551 + 3209.07046501340 * x);
	L1 += 0.00000000096 * Utils.cost(0.79636181668 + 3024.22055704320 * x);
	L1 += 0.00000000093 * Utils.cost(1.08979608844 + 14577.18472611980 * x);
	L1 += 0.00000000097 * Utils.cost(3.56551535742 + 14421.83163698840 * x);
	L1 += 0.00000000092 * Utils.cost(5.02279637510 + 2494.52959194860 * x);
	L1 += 0.00000000123 * Utils.cost(5.83481108101 + 7747.72033058960 * x);
	L1 += 0.00000000111 * Utils.cost(3.31406538379 + 11610.91017538320 * x);
	L1 += 0.00000000118 * Utils.cost(5.00845322960 + 1581.95934828300 * x);
	L1 += 0.00000000091 * Utils.cost(2.36839307589 + 11140.59307220220 * x);
	L1 += 0.00000000099 * Utils.cost(2.93269536697 + 2067.93140107260 * x);
	L1 += 0.00000000124 * Utils.cost(3.15220420912 + 22345.26037610820 * x);
	L1 += 0.00000000090 * Utils.cost(0.85462370851 + 17232.75309859360 * x);
	L1 += 0.00000000125 * Utils.cost(1.54866979468 + 1435.14766175940 * x);
	L1 += 0.00000000113 * Utils.cost(4.57220387105 + 14712.31711645800 * x);
	L1 += 0.00000000103 * Utils.cost(0.11158194413 + 11.04570026390 * x);
	L1 += 0.00000000113 * Utils.cost(2.41110151532 + 5244.04923920100 * x);
	L1 += 0.00000000091 * Utils.cost(1.77184730280 + 2221.85663459700 * x);
	L1 += 0.00000000114 * Utils.cost(1.92696878615 + 8226.57883637840 * x);
	L1 += 0.00000000118 * Utils.cost(0.29322259611 + 2945.98654164060 * x);
	L1 += 0.00000000089 * Utils.cost(4.49875865671 + 21947.11137270000 * x);
	L1 += 0.00000000104 * Utils.cost(1.36766858693 + 4032.77002792660 * x);
	L1 += 0.00000000116 * Utils.cost(4.67476277278 + 272.67295735160 * x);
	L1 += 0.00000000105 * Utils.cost(3.73327973850 + 4989.05918389720 * x);
	L1 += 0.00000000095 * Utils.cost(0.34653808205 + 13517.80279593060 * x);
	L1 += 0.00000000086 * Utils.cost(2.70925448214 + 7218.02936549500 * x);
	L1 += 0.00000000112 * Utils.cost(5.27572276726 + 17499.36014031540 * x);
	L1 += 0.00000000114 * Utils.cost(3.37335971932 + 2938.94030494260 * x);
	L1 += 0.00000000090 * Utils.cost(0.26623024836 + 9485.03276800400 * x);
	L1 += 0.00000000086 * Utils.cost(3.66786582491 + 6997.61672305620 * x);
	L1 += 0.00000000087 * Utils.cost(4.07823608680 + 18606.49894600020 * x);
	L1 += 0.00000000117 * Utils.cost(5.61863859185 + 16511.61386738740 * x);
	L1 += 0.00000000084 * Utils.cost(2.80171829534 + 8584.66166590080 * x);
	L1 += 0.00000000086 * Utils.cost(5.87459621301 + 73.60095591520 * x);
	L1 += 0.00000000090 * Utils.cost(1.07789160729 + 10721.10842832700 * x);
	L1 += 0.00000000084 * Utils.cost(0.78729386249 + 146.81168652360 * x);
	L1 += 0.00000000112 * Utils.cost(2.31690430881 + 9638.94074787620 * x);
	L1 += 0.00000000083 * Utils.cost(5.90575201511 + 16858.41522263039 * x);
	L1 += 0.00000000082 * Utils.cost(4.31690557700 + 9374.82644678460 * x);
	L1 += 0.00000000083 * Utils.cost(1.41315204958 + 22854.59602180400 * x);
	L1 += 0.00000000084 * Utils.cost(0.90320571725 + 2171.02417529120 * x);
	L1 += 0.00000000082 * Utils.cost(1.59442952041 + 9947.05568153210 * x);
	L1 += 0.00000000082 * Utils.cost(0.44163602941 + 4782.87363546000 * x);
	L1 += 0.00000000086 * Utils.cost(5.18335054161 + 12410.73130054860 * x);
	L1 += 0.00000000085 * Utils.cost(3.61669636863 + 8965.97846825920 * x);
	L1 += 0.00000000097 * Utils.cost(5.35511765140 + 4996.17273089800 * x);
	L1 += 0.00000000085 * Utils.cost(2.36814442737 + 1062.90504853820 * x);
	L1 += 0.00000000078 * Utils.cost(1.75580354602 + 2060.81785407180 * x);
	L1 += 0.00000000087 * Utils.cost(0.98702744399 + 10156.90236013480 * x);
	L1 += 0.00000000098 * Utils.cost(0.35294347682 + 23546.75362303080 * x);
	L1 += 0.00000000101 * Utils.cost(1.03298143418 + 20040.15144184979 * x);
	L1 += 0.00000000088 * Utils.cost(0.56201084357 + 17101.21113690720 * x);
	L1 += 0.00000000082 * Utils.cost(2.65765057749 + 12979.55317457600 * x);
	L1 += 0.00000000085 * Utils.cost(1.07007237991 + 10706.88133432540 * x);
	L1 += 0.00000000082 * Utils.cost(0.80588396320 + 20735.83216142559 * x);
	L1 += 0.00000000092 * Utils.cost(4.87180501294 + 9389.05354078620 * x);
	L1 += 0.00000000078 * Utils.cost(3.22869264518 + 11925.27409260060 * x);
	L1 += 0.00000000074 * Utils.cost(5.59171946181 + 8535.85715903420 * x);
	L1 += 0.00000000080 * Utils.cost(0.42260849968 + 956.28915597060 * x);
	L1 += 0.00000000082 * Utils.cost(1.47379060963 + 16.83220104979 * x);
	L1 += 0.00000000073 * Utils.cost(3.76950560688 + 8859.36257569160 * x);
	L1 += 0.00000000073 * Utils.cost(4.59130182630 + 362.12113673080 * x);
	L1 += 0.00000000072 * Utils.cost(5.15373872266 + 9872.27408296480 * x);
	L1 += 0.00000000098 * Utils.cost(2.47740242208 + 5401.43028077160 * x);
	L1 += 0.00000000071 * Utils.cost(0.08395696279 + 15849.86575174700 * x);
	L1 += 0.00000000078 * Utils.cost(0.04212599783 + 16703.12944380180 * x);
	L1 += 0.00000000075 * Utils.cost(3.77172360793 + 4845.90023579280 * x);
	L1 += 0.00000000072 * Utils.cost(2.01742377451 + 1329.51209026000 * x);
	L1 += 0.00000000076 * Utils.cost(0.30413402871 + 72.05573335480 * x);
	L1 += 0.00000000097 * Utils.cost(5.15109318550 + 1.48447270830 * x);
	L1 += 0.00000000070 * Utils.cost(0.33648335823 + 23141.55838292460 * x);
	L1 += 0.00000000068 * Utils.cost(0.34828385806 + 20047.19767854780 * x);
	L1 += 0.00000000078 * Utils.cost(1.42772075938 + 16063.16484718500 * x);
	L1 += 0.00000000081 * Utils.cost(2.37498404818 + 16703.04487984680 * x);
	L1 += 0.00000000069 * Utils.cost(3.66727984195 + 13363.43002786740 * x);
	L1 += 0.00000000067 * Utils.cost(1.77194706681 + 18451.07854656599 * x);
	L1 += 0.00000000073 * Utils.cost(0.41181711796 + 33406.12426699800 * x);
	L1 += 0.00000000067 * Utils.cost(3.15946840380 + 8799.98871377800 * x);
	L1 += 0.00000000067 * Utils.cost(4.07602260745 + 10448.43547097540 * x);
	L1 += 0.00000000068 * Utils.cost(1.78981361818 + 224.34479570190 * x);
	L1 += 0.00000000066 * Utils.cost(1.01449371817 + 4193.80880845180 * x);
	L1 += 0.00000000067 * Utils.cost(4.89249339125 + 12082.65513417120 * x);
	L1 += 0.00000000081 * Utils.cost(0.61914094848 + 949.17560896980 * x);
	L1 += 0.00000000066 * Utils.cost(3.39914635235 + 10184.30391623160 * x);
	L1 += 0.00000000064 * Utils.cost(5.50528849889 + 4936.79886898440 * x);
	L1 += 0.00000000064 * Utils.cost(1.82608235490 + 3077.52850332700 * x);
	L1 += 0.00000000069 * Utils.cost(2.48571574894 + 10018.24685144760 * x);
	L1 += 0.00000000064 * Utils.cost(2.80447322320 + 20809.46762464520 * x);
	L1 += 0.00000000068 * Utils.cost(0.97907335430 + 6717.25272007700 * x);
	L1 += 0.00000000087 * Utils.cost(2.45966764758 + 7321.12213971360 * x);
	L1 += 0.00000000062 * Utils.cost(1.69131771765 + 632.78373931320 * x);
	L1 += 0.00000000081 * Utils.cost(4.40575713075 + 16703.07938715119 * x);
	L1 += 0.00000000063 * Utils.cost(3.63625395496 + 25685.87280280800 * x);
	L1 += 0.00000000075 * Utils.cost(5.54907590704 + 16872.64231663200 * x);
	L1 += 0.00000000061 * Utils.cost(0.33159827734 + 12012.58229714040 * x);
	L1 += 0.00000000063 * Utils.cost(3.16314818302 + 11670.28403729680 * x);
	L1 += 0.00000000062 * Utils.cost(0.23148800541 + 7314.00859271280 * x);
	L1 += 0.00000000078 * Utils.cost(1.65377731167 + 11614.43329373220 * x);
	L1 += 0.00000000068 * Utils.cost(1.10866475394 + 6155.05700665400 * x);
	L1 += 0.00000000068 * Utils.cost(4.45713540461 + 9175.75444534820 * x);
	L1 += 0.00000000081 * Utils.cost(3.66553577428 + 15265.88651930040 * x);
	L1 += 0.00000000068 * Utils.cost(5.59792852411 + 377.37360791580 * x);
	L1 += 0.00000000059 * Utils.cost(6.25689995147 + 41427.48698317880 * x);
	L1 += 0.00000000072 * Utils.cost(3.39739853142 + 685.11136452880 * x);
	L1 += 0.00000000062 * Utils.cost(0.11206359088 + 14047.49376102520 * x);
	L1 += 0.00000000057 * Utils.cost(4.31819630987 + 95.97922721780 * x);
	L1 += 0.00000000070 * Utils.cost(5.98596344975 + 6531.66165626500 * x);
	L1 += 0.00000000066 * Utils.cost(5.93804470886 + 3490.17562383440 * x);
	L1 += 0.00000000056 * Utils.cost(5.11205539684 + 7322.10246078180 * x);
	L1 += 0.00000000056 * Utils.cost(3.36788837326 + 4379.63903749020 * x);
	L1 += 0.00000000056 * Utils.cost(2.20908914878 + 6688.27109009760 * x);
	L1 += 0.00000000057 * Utils.cost(4.57828186723 + 10037.08975128440 * x);
	L1 += 0.00000000057 * Utils.cost(0.04695703833 + 24889.57479599160 * x);
	L1 += 0.00000000065 * Utils.cost(2.70973517401 + 19617.07636932279 * x);
	L1 += 0.00000000068 * Utils.cost(3.51423189318 + 14556.89671702380 * x);
	L1 += 0.00000000056 * Utils.cost(5.94452825242 + 21548.96236929180 * x);
	L1 += 0.00000000056 * Utils.cost(3.94541346495 + 25665.51748340920 * x);
	L1 += 0.00000000055 * Utils.cost(0.45166365461 + 16702.99482319620 * x);
	L1 += 0.00000000062 * Utils.cost(0.05229160039 + 14061.72085502680 * x);
	L1 += 0.00000000055 * Utils.cost(1.14774475393 + 4459.36821880260 * x);
	L1 += 0.00000000065 * Utils.cost(6.21442820689 + 6947.83189512140 * x);
	L1 += 0.00000000056 * Utils.cost(5.01712943722 + 485.97205278960 * x);
	L1 += 0.00000000065 * Utils.cost(1.51615558729 + 5511.63660199100 * x);
	L1 += 0.00000000072 * Utils.cost(4.90742373357 + 25287.72379939980 * x);
	L1 += 0.00000000057 * Utils.cost(5.31542907454 + 28628.33622609960 * x);
	L1 += 0.00000000055 * Utils.cost(4.02023620788 + 4005.36847182980 * x);
	L1 += 0.00000000054 * Utils.cost(5.51196184505 + 44.65383324020 * x);
	L1 += 0.00000000053 * Utils.cost(0.46840976995 + 19645.52555679060 * x);
	L1 += 0.00000000053 * Utils.cost(4.51539970261 + 9886.77220006400 * x);
	L1 += 0.00000000069 * Utils.cost(3.37092084432 + 41.55079098480 * x);
	L1 += 0.00000000072 * Utils.cost(4.66520155151 + 6685.10618875760 * x);
	L1 += 0.00000000052 * Utils.cost(2.05209599225 + 7366.26890762560 * x);
	L1 += 0.00000000052 * Utils.cost(6.25882226723 + 12509.25332504720 * x);
	L1 += 0.00000000060 * Utils.cost(0.33350021257 + 13575.74880223720 * x);
	L1 += 0.00000000059 * Utils.cost(5.94433755684 + 625.67019231240 * x);
	L1 += 0.00000000050 * Utils.cost(2.65624501709 + 10124.93005431800 * x);
	L1 += 0.00000000068 * Utils.cost(2.92105834159 + 10025.42770875120 * x);
	L1 += 0.00000000051 * Utils.cost(2.88289068067 + 39601.89191244960 * x);
	L1 += 0.00000000069 * Utils.cost(1.09637075565 + 24076.44458812540 * x);
	L1 += 0.00000000052 * Utils.cost(2.65290577481 + 15650.79375031060 * x);
	L1 += 0.00000000052 * Utils.cost(3.28683313010 + 6756.00645196690 * x);
	L1 += 0.00000000054 * Utils.cost(5.34683925496 + 6578.13207918100 * x);
	L1 += 0.00000000054 * Utils.cost(2.77410607136 + 6705.10329114740 * x);
	L1 += 0.00000000049 * Utils.cost(2.65700209900 + 6944.30877677240 * x);
	L1 += 0.00000000053 * Utils.cost(5.67436244967 + 1883.08149310240 * x);
	L1 += 0.00000000048 * Utils.cost(5.68336050679 + 8646.06348025360 * x);
	L1 += 0.00000000051 * Utils.cost(0.11390643300 + 17402.33328172660 * x);
	L1 += 0.00000000065 * Utils.cost(1.03099992649 + 4106.40549114620 * x);
	L1 += 0.00000000060 * Utils.cost(1.00159365247 + 151.89728108520 * x);
	L1 += 0.00000000050 * Utils.cost(3.84651247899 + 45494.58142974879 * x);
	L1 += 0.00000000047 * Utils.cost(3.03959709242 + 5408.54382777240 * x);
	L1 += 0.00000000063 * Utils.cost(4.16165369755 + 8186.51266249260 * x);
	L1 += 0.00000000046 * Utils.cost(2.69368087378 + 16547.64173406480 * x);
	L1 += 0.00000000051 * Utils.cost(2.99576014378 + 3774.32416457660 * x);
	L1 += 0.00000000044 * Utils.cost(2.00664763411 + 6418.14093002680 * x);
	L1 += 0.00000000045 * Utils.cost(4.01853755929 + 19406.67828817460 * x);
	L1 += 0.00000000058 * Utils.cost(3.14474753550 + 4025.65648092580 * x);
	L1 += 0.00000000050 * Utils.cost(2.59881540437 + 6621.85099148600 * x);
	L1 += 0.00000000043 * Utils.cost(4.87912487459 + 6414.61781167780 * x);
	L1 += 0.00000000042 * Utils.cost(5.20400092044 + 4447.75123238460 * x);
	L1 += 0.00000000051 * Utils.cost(1.99634375899 + 5032.77809620220 * x);
	L1 += 0.00000000043 * Utils.cost(1.28813888865 + 6643.09181776180 * x);
	L1 += 0.00000000040 * Utils.cost(0.96801618560 + 14591.41182012140 * x);
	L1 += 0.00000000039 * Utils.cost(1.84985100829 + 10001.48196070061 * x);
	L1 += 0.00000000039 * Utils.cost(5.69967200167 + 6106.88005506480 * x);
	L1 += 0.00000000038 * Utils.cost(3.27498743518 + 18052.92954315780 * x);
	L1 += 0.00000000039 * Utils.cost(2.84167905068 + 6652.77566593180 * x);
	L1 += 0.00000000044 * Utils.cost(0.57891618854 + 16865.52876963120 * x);
	L1 += 0.00000000043 * Utils.cost(4.61937364869 + 3341.03250279340 * x);
	L1 += 0.00000000042 * Utils.cost(6.02555835659 + 6691.86151874940 * x);
	L1 += 0.00000000034 * Utils.cost(4.97734992350 + 6670.58818804980 * x);
	L1 += 0.00000000033 * Utils.cost(1.39167727215 + 4825.54491639400 * x);
	L1 += 0.00000000035 * Utils.cost(6.02955363644 + 3568.08855948880 * x);
	L1 += 0.00000000035 * Utils.cost(0.31961016732 + 6645.19698672220 * x);
	L1 += 0.00000000032 * Utils.cost(5.63043769073 + 3511.28529731900 * x);
	L1 += 0.00000000031 * Utils.cost(5.42978464210 + 9945.57120882380 * x);
	L1 += 0.00000000038 * Utils.cost(5.66461657503 + 3416.87849797540 * x);
	L1 += 0.00000000030 * Utils.cost(0.98518793666 + 20426.57109242200 * x);
	L1 += 0.00000000038 * Utils.cost(0.12870962242 + 6604.95878212400 * x);
	L1 += 0.00000000037 * Utils.cost(5.48374357342 + 3311.18291816379 * x);
	L1 += 0.00000000032 * Utils.cost(6.11106979810 + 4392.88080988820 * x);
	L1 += 0.00000000031 * Utils.cost(3.18481282781 + 3341.04230982650 * x);
	L1 += 0.00000000034 * Utils.cost(2.32358226279 + 9072.66167112960 * x);
	L1 += 0.00000000039 * Utils.cost(4.11042361929 + 3312.16323923200 * x);
	L1 += 0.00000000027 * Utils.cost(0.57810321636 + 3391.89276456221 * x);
	L1 += 0.00000000029 * Utils.cost(2.48646403166 + 9815.65173166220 * x);
	L1 += 0.00000000031 * Utils.cost(0.44265747667 + 3451.79906898740 * x);
	L1 += 0.00000000027 * Utils.cost(6.13498177783 + 3362.46325602620 * x);
	L1 += 0.00000000027 * Utils.cost(6.21846173482 + 5223.69391980220 * x);
	L1 += 0.00000000027 * Utils.cost(2.94945830517 + 7203.80227149340 * x);
	L1 += 0.00000000027 * Utils.cost(3.26179855800 + 8756.26980147300 * x);
	L1 += 0.00000000027 * Utils.cost(3.94385271700 + 23958.63178523340 * x);
	L1 += 0.00000000033 * Utils.cost(3.77237326006 + 12808.88030395680 * x);
	L1 += 0.00000000030 * Utils.cost(4.75096367323 + 15906.76412668260 * x);
	L1 += 0.00000000031 * Utils.cost(0.88248871193 + 3340.18254357310 * x);
	L1 += 0.00000000025 * Utils.cost(0.31303295413 + 6571.01853218020 * x);
	L1 += 0.00000000031 * Utils.cost(4.29076841627 + 10020.85695903120 * x);
	L1 += 0.00000000026 * Utils.cost(2.22427360058 + 10050.28646756720 * x);
	L1 += 0.00000000025 * Utils.cost(0.67881122439 + 23937.85638974100 * x);
	L1 += 0.00000000031 * Utils.cost(1.72899093511 + 13745.34623902240 * x);
	L1 += 0.00000000024 * Utils.cost(0.20355912395 + 3229.42578441220 * x);
	L1 += 0.00000000032 * Utils.cost(3.37195631109 + 2284.75361485960 * x);

	let L2 = 0;
	L2 += 0.00058015791 * Utils.cost(2.04979463279 + 3340.61242669980 * x);
	L2 += 0.00054187645;
	L2 += 0.00013908426 * Utils.cost(2.45742359888 + 6681.22485339960 * x);
	L2 += 0.00002465104 * Utils.cost(2.80000020929 + 10021.83728009940 * x);
	L2 += 0.00000398379 * Utils.cost(3.14118428289 + 13362.44970679920 * x);
	L2 += 0.00000222022 * Utils.cost(3.19436080019 + 3.52311834900 * x);
	L2 += 0.00000120957 * Utils.cost(0.54325292454 + 155.42039943420 * x);
	L2 += 0.00000061517 * Utils.cost(3.48529427371 + 16703.06213349900 * x);
	L2 += 0.00000053638 * Utils.cost(3.54191121461 + 3344.13554504880 * x);
	L2 += 0.00000034268 * Utils.cost(6.00188499119 + 2281.23049651060 * x);
	L2 += 0.00000031665 * Utils.cost(4.14015171788 + 191.44826611160 * x);
	L2 += 0.00000029839 * Utils.cost(1.99870679845 + 796.29800681640 * x);
	L2 += 0.00000023168 * Utils.cost(4.33403365928 + 242.72860397400 * x);
	L2 += 0.00000021659 * Utils.cost(3.44532466378 + 398.14900340820 * x);
	L2 += 0.00000016044 * Utils.cost(6.11000472441 + 2146.16541647520 * x);
	L2 += 0.00000020370 * Utils.cost(5.42191375400 + 553.56940284240 * x);
	L2 += 0.00000014927 * Utils.cost(6.09541783564 + 3185.19202726560 * x);
	L2 += 0.00000016227 * Utils.cost(0.65678953303 + 0.98032106820 * x);
	L2 += 0.00000014317 * Utils.cost(2.61851897591 + 1349.86740965880 * x);
	L2 += 0.00000014416 * Utils.cost(4.01923812101 + 951.71840625060 * x);
	L2 += 0.00000011934 * Utils.cost(3.86122163021 + 6684.74797174860 * x);
	L2 += 0.00000015648 * Utils.cost(1.22086121940 + 1748.01641306700 * x);
	L2 += 0.00000011260 * Utils.cost(4.71822363671 + 2544.31441988340 * x);
	L2 += 0.00000013352 * Utils.cost(0.60189008414 + 1194.44701022460 * x);
	L2 += 0.00000010396 * Utils.cost(0.25038714677 + 382.89653222320 * x);
	L2 += 0.00000009468 * Utils.cost(0.68170713564 + 1059.38193018920 * x);
	L2 += 0.00000009229 * Utils.cost(3.83209092321 + 20043.67456019880 * x);
	L2 += 0.00000009005 * Utils.cost(3.88271826102 + 3738.76143010800 * x);
	L2 += 0.00000007501 * Utils.cost(5.46498630412 + 1751.53953141600 * x);
	L2 += 0.00000006497 * Utils.cost(5.47773072872 + 1592.59601363280 * x);
	L2 += 0.00000006311 * Utils.cost(2.34104793674 + 3097.88382272579 * x);
	L2 += 0.00000006859 * Utils.cost(2.57522504136 + 3149.16416058820 * x);
	L2 += 0.00000005870 * Utils.cost(1.14783576679 + 7.11354700080 * x);
	L2 += 0.00000006681 * Utils.cost(2.37843690339 + 4136.91043351620 * x);
	L2 += 0.00000004647 * Utils.cost(4.42957708526 + 6151.53388830500 * x);
	L2 += 0.00000004166 * Utils.cost(3.68631477611 + 5614.72937620960 * x);
	L2 += 0.00000004764 * Utils.cost(2.89684755585 + 3333.49887969900 * x);
	L2 += 0.00000004045 * Utils.cost(6.12493402657 + 5628.95647021120 * x);
	L2 += 0.00000003653 * Utils.cost(4.06679068397 + 1990.74501704100 * x);
	L2 += 0.00000003618 * Utils.cost(2.46868561769 + 529.69096509460 * x);
	L2 += 0.00000003277 * Utils.cost(0.68101740787 + 8962.45534991020 * x);
	L2 += 0.00000003253 * Utils.cost(2.79565340390 + 3894.18182954220 * x);
	L2 += 0.00000003091 * Utils.cost(4.56861203364 + 3496.03282613400 * x);
	L2 += 0.00000002921 * Utils.cost(5.41458945995 + 2914.01423582380 * x);
	L2 += 0.00000002921 * Utils.cost(1.23050883841 + 2787.04302385740 * x);
	L2 += 0.00000002784 * Utils.cost(1.38911141844 + 4292.33083295040 * x);
	L2 += 0.00000002620 * Utils.cost(1.04061894134 + 3341.59274776800 * x);
	L2 += 0.00000002888 * Utils.cost(3.41062353663 + 3337.08930835080 * x);
	L2 += 0.00000002418 * Utils.cost(0.96341462666 + 4535.05943692440 * x);
	L2 += 0.00000002357 * Utils.cost(4.84628239765 + 9492.14631500480 * x);
	L2 += 0.00000002593 * Utils.cost(5.74934234498 + 3340.59517304760 * x);
	L2 += 0.00000002191 * Utils.cost(3.26449527357 + 213.29909543800 * x);
	L2 += 0.00000002594 * Utils.cost(1.49510566123 + 3340.62968035200 * x);
	L2 += 0.00000002344 * Utils.cost(4.18104725028 + 10025.36039844840 * x);
	L2 += 0.00000002630 * Utils.cost(4.67640929857 + 3583.34103067380 * x);
	L2 += 0.00000002602 * Utils.cost(2.64911714813 + 2388.89402044920 * x);
	L2 += 0.00000001830 * Utils.cost(0.97181050149 + 1589.07289528380 * x);
	L2 += 0.00000002416 * Utils.cost(1.04749173375 + 4399.99435688900 * x);
	L2 += 0.00000002386 * Utils.cost(4.27072575550 + 7079.37385680780 * x);
	L2 += 0.00000002187 * Utils.cost(0.16036551231 + 6525.80445396540 * x);
	L2 += 0.00000002344 * Utils.cost(0.01425578204 + 4690.47983635860 * x);
	L2 += 0.00000001617 * Utils.cost(4.95614491689 + 5088.62883976680 * x);
	L2 += 0.00000001633 * Utils.cost(1.10703599922 + 12303.06777661000 * x);
	L2 += 0.00000002126 * Utils.cost(0.48290227706 + 2700.71514038580 * x);
	L2 += 0.00000001629 * Utils.cost(4.94267977718 + 1221.84856632140 * x);
	L2 += 0.00000001504 * Utils.cost(0.11031912519 + 2957.71589447660 * x);
	L2 += 0.00000001759 * Utils.cost(3.81170701376 + 3723.50895892300 * x);
	L2 += 0.00000001401 * Utils.cost(3.85907867678 + 6283.07584999140 * x);
	L2 += 0.00000001338 * Utils.cost(5.29685392418 + 6677.70173505060 * x);
	L2 += 0.00000001763 * Utils.cost(2.51660121293 + 2810.92146160520 * x);
	L2 += 0.00000001392 * Utils.cost(2.73498041122 + 7477.52286021600 * x);
	L2 += 0.00000001431 * Utils.cost(2.97747408389 + 6489.77658728800 * x);
	L2 += 0.00000001236 * Utils.cost(3.77245965590 + 2699.73481931760 * x);
	L2 += 0.00000001234 * Utils.cost(1.88931735265 + 6681.24210705180 * x);
	L2 += 0.00000001513 * Utils.cost(2.92614134711 + 640.87760738220 * x);
	L2 += 0.00000001234 * Utils.cost(6.14168429036 + 6681.20759974740 * x);
	L2 += 0.00000001408 * Utils.cost(1.54395721611 + 3347.72597370060 * x);
	L2 += 0.00000001038 * Utils.cost(5.82880072933 + 4933.20844033260 * x);
	L2 += 0.00000001156 * Utils.cost(1.50825464304 + 426.59819087600 * x);
	L2 += 0.00000001362 * Utils.cost(4.17794297520 + 23384.28698689860 * x);
	L2 += 0.00000001135 * Utils.cost(3.77506455273 + 3870.30339179440 * x);
	L2 += 0.00000000916 * Utils.cost(3.81726339298 + 5092.15195811580 * x);
	L2 += 0.00000000853 * Utils.cost(3.82520490669 + 3340.54511639700 * x);
	L2 += 0.00000001077 * Utils.cost(5.05062828760 + 5621.84292321040 * x);
	L2 += 0.00000001074 * Utils.cost(3.81446920470 + 3553.91152213780 * x);
	L2 += 0.00000000847 * Utils.cost(3.41702696402 + 3340.67973700260 * x);
	L2 += 0.00000000920 * Utils.cost(1.91108056416 + 3532.06069281140 * x);
	L2 += 0.00000000738 * Utils.cost(4.25786145387 + 9623.68827669120 * x);
	L2 += 0.00000000908 * Utils.cost(4.12911006922 + 162.46663613220 * x);
	L2 += 0.00000000647 * Utils.cost(3.10301033831 + 7234.79425624200 * x);
	L2 += 0.00000000800 * Utils.cost(5.20674574801 + 87.30820453981 * x);
	L2 += 0.00000000657 * Utils.cost(1.57895580467 + 2487.41604494780 * x);
	L2 += 0.00000000650 * Utils.cost(2.78932995437 + 574.34479833480 * x);
	L2 += 0.00000000659 * Utils.cost(5.16655918817 + 12832.75874170460 * x);
	L2 += 0.00000000712 * Utils.cost(5.79288230676 + 3339.63210563160 * x);
	L2 += 0.00000000660 * Utils.cost(0.25125103909 + 8969.56889691100 * x);
	L2 += 0.00000000527 * Utils.cost(4.62218528897 + 10419.98628350760 * x);
	L2 += 0.00000000607 * Utils.cost(3.84724721085 + 5486.77784317500 * x);
	L2 += 0.00000000500 * Utils.cost(4.66323134619 + 6836.64525283380 * x);
	L2 += 0.00000000509 * Utils.cost(0.32548381735 + 8031.09226305840 * x);
	L2 += 0.00000000613 * Utils.cost(1.72250879737 + 7632.94325965020 * x);
	L2 += 0.00000000516 * Utils.cost(1.37906978509 + 7740.60678358880 * x);
	L2 += 0.00000000469 * Utils.cost(1.31324778369 + 7875.67186362420 * x);
	L2 += 0.00000000442 * Utils.cost(5.34515135225 + 10018.31416175040 * x);
	L2 += 0.00000000496 * Utils.cost(4.49656852602 + 692.15760122680 * x);
	L2 += 0.00000000544 * Utils.cost(1.44465369200 + 15643.68020330980 * x);
	L2 += 0.00000000467 * Utils.cost(1.40928870138 + 6682.20517446780 * x);
	L2 += 0.00000000547 * Utils.cost(4.42021065522 + 5331.35744374080 * x);
	L2 += 0.00000000433 * Utils.cost(1.25048504108 + 4929.68532198360 * x);
	L2 += 0.00000000409 * Utils.cost(3.80689273098 + 6681.29216370240 * x);
	L2 += 0.00000000403 * Utils.cost(1.57190239310 + 6127.65545055720 * x);
	L2 += 0.00000000401 * Utils.cost(4.59976459753 + 7210.91581849420 * x);
	L2 += 0.00000000406 * Utils.cost(0.60945437905 + 11773.37681151540 * x);
	L2 += 0.00000000367 * Utils.cost(0.97726583907 + 6041.32756708560 * x);
	L2 += 0.00000000361 * Utils.cost(0.13117924893 + 639.89728631400 * x);
	L2 += 0.00000000411 * Utils.cost(4.21323421517 + 6681.15754309680 * x);
	L2 += 0.00000000441 * Utils.cost(4.49050100878 + 13365.97282514820 * x);
	L2 += 0.00000000474 * Utils.cost(5.18562524130 + 2301.58581590939 * x);
	L2 += 0.00000000334 * Utils.cost(2.21001303889 + 10021.85453375160 * x);
	L2 += 0.00000000370 * Utils.cost(5.02880065186 + 6923.95345737360 * x);
	L2 += 0.00000000333 * Utils.cost(0.18229887483 + 10021.82002644720 * x);
	L2 += 0.00000000342 * Utils.cost(2.49988747611 + 6438.49624942560 * x);
	L2 += 0.00000000320 * Utils.cost(1.32374476890 + 2118.76386037840 * x);
	L2 += 0.00000000330 * Utils.cost(2.98027481579 + 5729.50644714900 * x);
	L2 += 0.00000000340 * Utils.cost(0.51409045792 + 9866.41688066520 * x);
	L2 += 0.00000000283 * Utils.cost(4.03219455446 + 8955.34180290940 * x);
	L2 += 0.00000000281 * Utils.cost(3.33891891806 + 9830.38901398780 * x);
	L2 += 0.00000000271 * Utils.cost(1.53144358045 + 1039.02661079040 * x);
	L2 += 0.00000000252 * Utils.cost(3.04356928941 + 10818.13528691580 * x);
	L2 += 0.00000000270 * Utils.cost(2.22972724035 + 5828.02847164760 * x);
	L2 += 0.00000000259 * Utils.cost(4.24406546278 + 6894.52394883760 * x);
	L2 += 0.00000000237 * Utils.cost(5.07818982743 + 8429.24126646660 * x);
	L2 += 0.00000000263 * Utils.cost(2.00552313665 + 3767.21061757580 * x);
	L2 += 0.00000000241 * Utils.cost(4.06396704332 + 7064.12138562280 * x);
	L2 += 0.00000000250 * Utils.cost(0.45422818547 + 6298.32832117640 * x);
	L2 += 0.00000000240 * Utils.cost(1.94655459341 + 6688.33840040040 * x);
	L2 += 0.00000000209 * Utils.cost(0.03043017984 + 3914.95722503460 * x);
	L2 += 0.00000000218 * Utils.cost(4.53201818250 + 26724.89941359840 * x);
	L2 += 0.00000000246 * Utils.cost(3.85272742042 + 4562.46099302120 * x);
	L2 += 0.00000000254 * Utils.cost(1.19313236635 + 8432.76438481560 * x);
	L2 += 0.00000000231 * Utils.cost(1.70340106651 + 2942.46342329160 * x);
	L2 += 0.00000000209 * Utils.cost(3.82345999055 + 6467.92575796160 * x);
	L2 += 0.00000000175 * Utils.cost(3.26444055581 + 3981.49003408200 * x);
	L2 += 0.00000000210 * Utils.cost(3.55052707697 + 10575.40668294180 * x);
	L2 += 0.00000000162 * Utils.cost(5.95176683701 + 310.84079886840 * x);
	L2 += 0.00000000165 * Utils.cost(5.04267055142 + 10177.25767953360 * x);
	L2 += 0.00000000198 * Utils.cost(0.80464315638 + 15113.98923821520 * x);
	L2 += 0.00000000188 * Utils.cost(1.99007233842 + 3127.31333126180 * x);
	L2 += 0.00000000188 * Utils.cost(4.55406803143 + 12964.30070339100 * x);
	L2 += 0.00000000163 * Utils.cost(2.14874886056 + 10973.55568635000 * x);
	L2 += 0.00000000154 * Utils.cost(4.35708331036 + 3360.96774609859 * x);
	L2 += 0.00000000169 * Utils.cost(2.40504327781 + 3355.86489788480 * x);
	L2 += 0.00000000164 * Utils.cost(5.53875620970 + 16173.37116840440 * x);
	L2 += 0.00000000144 * Utils.cost(0.30186831602 + 1903.43681250120 * x);
	L2 += 0.00000000161 * Utils.cost(3.18977924032 + 6674.11130639880 * x);
	L2 += 0.00000000135 * Utils.cost(1.65570006128 + 3325.35995551480 * x);
	L2 += 0.00000000143 * Utils.cost(6.25825818399 + 9595.23908922340 * x);
	L2 += 0.00000000158 * Utils.cost(6.14255608340 + 8273.82086703240 * x);
	L2 += 0.00000000170 * Utils.cost(5.98413937993 + 3320.25710730100 * x);
	L2 += 0.00000000124 * Utils.cost(1.74571336137 + 11081.21921028860 * x);
	L2 += 0.00000000146 * Utils.cost(2.22851709304 + 3178.14579056760 * x);
	L2 += 0.00000000126 * Utils.cost(5.02927593525 + 3475.67750673520 * x);
	L2 += 0.00000000123 * Utils.cost(4.99342648375 + 13760.59871020740 * x);
	L2 += 0.00000000141 * Utils.cost(4.56735815490 + 10021.76996979660 * x);
	L2 += 0.00000000118 * Utils.cost(5.42945437851 + 13358.92658845020 * x);
	L2 += 0.00000000116 * Utils.cost(4.22080571309 + 5884.92684658320 * x);
	L2 += 0.00000000119 * Utils.cost(4.09962692144 + 10021.90459040220 * x);
	L2 += 0.00000000124 * Utils.cost(1.79723243306 + 18984.29263000960 * x);
	L2 += 0.00000000135 * Utils.cost(1.00085140609 + 18454.60166491500 * x);
	L2 += 0.00000000106 * Utils.cost(5.76342924005 + 2288.34404351140 * x);
	L2 += 0.00000000103 * Utils.cost(0.63812052706 + 12310.18132361080 * x);
	L2 += 0.00000000100 * Utils.cost(4.37946945260 + 9808.53818466140 * x);
	L2 += 0.00000000104 * Utils.cost(4.01151451052 + 13916.01910964160 * x);
	L2 += 0.00000000125 * Utils.cost(4.94825577002 + 10551.52824519400 * x);
	L2 += 0.00000000098 * Utils.cost(5.91086068785 + 14584.29827312060 * x);
	L2 += 0.00000000126 * Utils.cost(1.55752034021 + 8270.29774868340 * x);
	L2 += 0.00000000098 * Utils.cost(2.52869810530 + 3191.04922956520 * x);
	L2 += 0.00000000095 * Utils.cost(5.50808311620 + 3319.83703120740 * x);
	L2 += 0.00000000108 * Utils.cost(1.67115668669 + 11216.28429032400 * x);
	L2 += 0.00000000090 * Utils.cost(1.71281301325 + 1505.28780909299 * x);
	L2 += 0.00000000088 * Utils.cost(0.42472333366 + 11371.70468975820 * x);
	L2 += 0.00000000089 * Utils.cost(4.83867235269 + 16706.58525184800 * x);
	L2 += 0.00000000106 * Utils.cost(1.78998252916 + 10022.81760116760 * x);
	L2 += 0.00000000087 * Utils.cost(5.89602688150 + 16858.48253293320 * x);
	L2 += 0.00000000085 * Utils.cost(0.55423657166 + 13362.43245314700 * x);
	L2 += 0.00000000091 * Utils.cost(1.61117547913 + 24093.27678917520 * x);
	L2 += 0.00000000083 * Utils.cost(0.55328893146 + 3344.20285535160 * x);
	L2 += 0.00000000083 * Utils.cost(1.06830368571 + 3364.49086444760 * x);
	L2 += 0.00000000084 * Utils.cost(6.22980173043 + 3369.06161416760 * x);
	L2 += 0.00000000085 * Utils.cost(2.58442459869 + 13362.46696045140 * x);
	L2 += 0.00000000079 * Utils.cost(3.08636079495 + 2818.03500860600 * x);
	L2 += 0.00000000077 * Utils.cost(1.53791408869 + 5459.37628707820 * x);
	L2 += 0.00000000075 * Utils.cost(3.34890581175 + 9070.11887384880 * x);
	L2 += 0.00000000097 * Utils.cost(2.99973987655 + 3316.73398895200 * x);
	L2 += 0.00000000084 * Utils.cost(5.55309637085 + 3427.92063123960 * x);
	L2 += 0.00000000089 * Utils.cost(4.16432726564 + 6158.64743530580 * x);
	L2 += 0.00000000078 * Utils.cost(3.72375730390 + 13171.00144068760 * x);
	L2 += 0.00000000083 * Utils.cost(0.11917380846 + 3337.02199804800 * x);
	L2 += 0.00000000073 * Utils.cost(4.91632010974 + 13362.38239649640 * x);
	L2 += 0.00000000076 * Utils.cost(4.52961122356 + 708.98980227659 * x);
	L2 += 0.00000000071 * Utils.cost(5.37905772348 + 10264.56588407340 * x);
	L2 += 0.00000000084 * Utils.cost(1.93007660929 + 9468.26787725700 * x);
	L2 += 0.00000000073 * Utils.cost(5.28498987702 + 4845.90023579280 * x);
	L2 += 0.00000000080 * Utils.cost(4.81193020727 + 13149.15061136120 * x);
	L2 += 0.00000000076 * Utils.cost(4.77873149036 + 8671.96987044060 * x);
	L2 += 0.00000000069 * Utils.cost(0.86312560839 + 13207.02930736500 * x);
	L2 += 0.00000000070 * Utils.cost(1.22001285505 + 2274.11694950980 * x);
	L2 += 0.00000000070 * Utils.cost(0.53977528244 + 13119.72110282519 * x);
	L2 += 0.00000000070 * Utils.cost(0.09801356525 + 1437.17561419860 * x);
	L2 += 0.00000000069 * Utils.cost(2.23597403243 + 7107.82304427560 * x);
	L2 += 0.00000000074 * Utils.cost(0.67876411085 + 16460.33352952499 * x);
	L2 += 0.00000000068 * Utils.cost(0.54393617190 + 12935.85151592320 * x);
	L2 += 0.00000000084 * Utils.cost(5.11617356640 + 13892.14067189380 * x);
	L2 += 0.00000000078 * Utils.cost(5.27206373031 + 853.19638175200 * x);
	L2 += 0.00000000065 * Utils.cost(4.74504626032 + 6144.42034130420 * x);
	L2 += 0.00000000065 * Utils.cost(2.89744951086 + 7903.07341972100 * x);
	L2 += 0.00000000089 * Utils.cost(5.44755326514 + 13517.87010623340 * x);
	L2 += 0.00000000073 * Utils.cost(3.81554166604 + 3503.07906283200 * x);
	L2 += 0.00000000066 * Utils.cost(0.47312197978 + 3980.50971301380 * x);
	L2 += 0.00000000065 * Utils.cost(1.38901912957 + 3253.30422216000 * x);
	L2 += 0.00000000086 * Utils.cost(5.44050231013 + 6816.28993343500 * x);
	L2 += 0.00000000072 * Utils.cost(3.44697351738 + 14158.74771361560 * x);
	L2 += 0.00000000086 * Utils.cost(4.50213985772 + 13362.51701710200 * x);
	L2 += 0.00000000074 * Utils.cost(1.34701853675 + 3361.38782219220 * x);
	L2 += 0.00000000076 * Utils.cost(6.04002959430 + 5085.03841111500 * x);
	L2 += 0.00000000065 * Utils.cost(0.07623776004 + 5099.26550511660 * x);
	L2 += 0.00000000066 * Utils.cost(2.09160717290 + 14421.83163698840 * x);
	L2 += 0.00000000077 * Utils.cost(2.75740817982 + 19402.79695281660 * x);
	L2 += 0.00000000059 * Utils.cost(3.61679189501 + 7322.10246078180 * x);
	L2 += 0.00000000060 * Utils.cost(4.67079289372 + 10235.13637553740 * x);
	L2 += 0.00000000064 * Utils.cost(6.17220244155 + 9381.93999378540 * x);
	L2 += 0.00000000066 * Utils.cost(0.35824154106 + 7255.56965173440 * x);
	L2 += 0.00000000059 * Utils.cost(4.52818219212 + 9499.25986200560 * x);
	L2 += 0.00000000065 * Utils.cost(1.86765892646 + 11610.91017538320 * x);
	L2 += 0.00000000074 * Utils.cost(3.12276411101 + 1107.13880568480 * x);
	L2 += 0.00000000060 * Utils.cost(1.35069679183 + 19800.94595622480 * x);
	L2 += 0.00000000055 * Utils.cost(0.64581579779 + 6677.63442474780 * x);
	L2 += 0.00000000055 * Utils.cost(0.65206957868 + 7373.38245462640 * x);
	L2 += 0.00000000055 * Utils.cost(0.41979092764 + 9779.10867612540 * x);
	L2 += 0.00000000074 * Utils.cost(3.85276242820 + 2766.26762836500 * x);
	L2 += 0.00000000056 * Utils.cost(2.49261586879 + 5642.19824260920 * x);
	L2 += 0.00000000055 * Utils.cost(2.62555306434 + 14314.16811304980 * x);
	L2 += 0.00000000054 * Utils.cost(3.95212835807 + 4032.77002792660 * x);
	L2 += 0.00000000055 * Utils.cost(0.51062350773 + 15110.46611986620 * x);
	L2 += 0.00000000053 * Utils.cost(5.88757767795 + 21265.52312652020 * x);
	L2 += 0.00000000051 * Utils.cost(5.99253934388 + 21947.11137270000 * x);
	L2 += 0.00000000049 * Utils.cost(5.16723732129 + 20047.19767854780 * x);
	L2 += 0.00000000067 * Utils.cost(1.53758821512 + 9380.95967271720 * x);
	L2 += 0.00000000057 * Utils.cost(5.34893894346 + 17101.21113690720 * x);
	L2 += 0.00000000049 * Utils.cost(1.92678602770 + 12721.57209941700 * x);
	L2 += 0.00000000046 * Utils.cost(2.31590320480 + 10028.95082710020 * x);
	L2 += 0.00000000052 * Utils.cost(4.92463460288 + 16304.91313009080 * x);
	L2 += 0.00000000050 * Utils.cost(1.69803302925 + 9225.53927328300 * x);
	L2 += 0.00000000045 * Utils.cost(2.91271003676 + 8982.81066930900 * x);
	L2 += 0.00000000044 * Utils.cost(4.38728556203 + 12168.00269657460 * x);
	L2 += 0.00000000047 * Utils.cost(4.44933635857 + 6872.67311951120 * x);
	L2 += 0.00000000043 * Utils.cost(2.13295656057 + 22324.90505670940 * x);
	L2 += 0.00000000050 * Utils.cost(1.34759191325 + 8439.87793181640 * x);
	L2 += 0.00000000044 * Utils.cost(0.89037464728 + 20752.66436247540 * x);
	L2 += 0.00000000041 * Utils.cost(2.76164156557 + 6696.47732458460 * x);
	L2 += 0.00000000042 * Utils.cost(4.45031185062 + 10404.73381232260 * x);
	L2 += 0.00000000044 * Utils.cost(3.20262780268 + 22743.40937951640 * x);
	L2 += 0.00000000042 * Utils.cost(3.54559408987 + 30376.35263916660 * x);
	L2 += 0.00000000042 * Utils.cost(0.82118836477 + 20597.24396304120 * x);
	L2 += 0.00000000052 * Utils.cost(4.59037852162 + 22345.26037610820 * x);
	L2 += 0.00000000042 * Utils.cost(3.79872109079 + 28628.33622609960 * x);
	L2 += 0.00000000041 * Utils.cost(2.36253602080 + 16062.18452611680 * x);
	L2 += 0.00000000050 * Utils.cost(1.48377570574 + 6040.34724601740 * x);
	L2 += 0.00000000041 * Utils.cost(5.33088551342 + 765.79306444640 * x);
	L2 += 0.00000000039 * Utils.cost(1.57984331116 + 24889.57479599160 * x);
	L2 += 0.00000000038 * Utils.cost(0.21571600948 + 9168.64089834740 * x);
	L2 += 0.00000000038 * Utils.cost(3.47667842127 + 1066.49547719000 * x);
	L2 += 0.00000000052 * Utils.cost(0.81427285458 + 9638.94074787620 * x);
	L2 += 0.00000000041 * Utils.cost(0.04356010851 + 6660.86953400080 * x);
	L2 += 0.00000000046 * Utils.cost(0.89345529755 + 16703.04487984680 * x);
	L2 += 0.00000000044 * Utils.cost(0.85335841824 + 17468.85519794540 * x);
	L2 += 0.00000000039 * Utils.cost(0.27098916103 + 11614.43329373220 * x);
	L2 += 0.00000000036 * Utils.cost(3.93388136028 + 33716.96506586640 * x);
	L2 += 0.00000000047 * Utils.cost(3.90896957151 + 5244.04923920100 * x);
	L2 += 0.00000000034 * Utils.cost(2.37310468308 + 10213.28554621100 * x);
	L2 += 0.00000000034 * Utils.cost(4.85454495742 + 14469.58851248400 * x);
	L2 += 0.00000000035 * Utils.cost(1.96497348634 + 6702.00024889200 * x);
	L2 += 0.00000000033 * Utils.cost(2.14488758889 + 13363.43002786740 * x);
	L2 += 0.00000000046 * Utils.cost(2.92422266239 + 16703.07938715119 * x);
	L2 += 0.00000000035 * Utils.cost(1.78692835372 + 2648.45482547300 * x);
	L2 += 0.00000000033 * Utils.cost(4.24484480826 + 8584.66166590080 * x);
	L2 += 0.00000000043 * Utils.cost(6.09391349922 + 6660.44945790720 * x);
	L2 += 0.00000000035 * Utils.cost(5.72426647579 + 16699.53901514999 * x);
	L2 += 0.00000000031 * Utils.cost(1.95254273311 + 6665.97238221460 * x);
	L2 += 0.00000000028 * Utils.cost(5.88548900893 + 19513.98359510420 * x);
	L2 += 0.00000000030 * Utils.cost(4.38908125588 + 12295.95422960920 * x);
	L2 += 0.00000000029 * Utils.cost(6.25276686131 + 17924.91069982040 * x);
	L2 += 0.00000000025 * Utils.cost(4.89000247975 + 30065.51184029820 * x);
	L2 += 0.00000000026 * Utils.cost(2.43119321236 + 6518.75821726740 * x);
	L2 += 0.00000000028 * Utils.cost(3.97032105354 + 4407.10790388980 * x);
	L2 += 0.00000000025 * Utils.cost(1.88631752737 + 4379.63903749020 * x);
	L2 += 0.00000000028 * Utils.cost(3.06196380356 + 6247.51311552280 * x);
	L2 += 0.00000000029 * Utils.cost(5.98057498931 + 6680.24453233140 * x);
	L2 += 0.00000000032 * Utils.cost(4.65556810177 + 6701.58017279840 * x);
	L2 += 0.00000000026 * Utils.cost(0.76018385758 + 3863.18984479360 * x);
	L2 += 0.00000000023 * Utils.cost(0.31107548102 + 8827.39026987480 * x);
	L2 += 0.00000000022 * Utils.cost(1.11553014451 + 6684.81528205140 * x);
	L2 += 0.00000000020 * Utils.cost(4.81193192299 + 15508.61512327440 * x);
	L2 += 0.00000000019 * Utils.cost(5.11656455993 + 12012.58229714040 * x);
	L2 += 0.00000000026 * Utils.cost(1.07254469525 + 8425.65083781480 * x);
	L2 += 0.00000000021 * Utils.cost(2.68436255141 + 6261.74020952440 * x);
	L2 += 0.00000000022 * Utils.cost(2.15631095909 + 3335.08950239240 * x);
	L2 += 0.00000000017 * Utils.cost(0.03684125273 + 3877.41693879520 * x);
	L2 += 0.00000000017 * Utils.cost(2.84467149903 + 3344.49376205780 * x);
	L2 += 0.00000000020 * Utils.cost(5.41519706836 + 3205.54734666440 * x);

	let L3 = 0;
	L3 += 0.00001482423 * Utils.cost(0.44434694876 + 3340.61242669980 * x);
	L3 += 0.00000662095 * Utils.cost(0.88469178686 + 6681.22485339960 * x);
	L3 += 0.00000188268 * Utils.cost(1.28799982497 + 10021.83728009940 * x);
	L3 += 0.00000041474 * Utils.cost(1.64850786997 + 13362.44970679920 * x);
	L3 += 0.00000022661 * Utils.cost(2.05267665262 + 155.42039943420 * x);
	L3 += 0.00000025994;
	L3 += 0.00000008024 * Utils.cost(1.99858757687 + 16703.06213349900 * x);
	L3 += 0.00000010454 * Utils.cost(1.58006906385 + 3.52311834900 * x);
	L3 += 0.00000004900 * Utils.cost(2.82452457966 + 242.72860397400 * x);
	L3 += 0.00000003782 * Utils.cost(2.01914272515 + 3344.13554504880 * x);
	L3 += 0.00000003176 * Utils.cost(4.59144897927 + 3185.19202726560 * x);
	L3 += 0.00000003134 * Utils.cost(0.65044714325 + 553.56940284240 * x);
	L3 += 0.00000001684 * Utils.cost(5.53835848782 + 951.71840625060 * x);
	L3 += 0.00000001511 * Utils.cost(5.71795850828 + 191.44826611160 * x);
	L3 += 0.00000001448 * Utils.cost(0.45869142895 + 796.29800681640 * x);
	L3 += 0.00000001442 * Utils.cost(2.34368495577 + 20043.67456019880 * x);
	L3 += 0.00000001302 * Utils.cost(5.36284013048 + 0.98032106820 * x);
	L3 += 0.00000001169 * Utils.cost(4.14601161433 + 1349.86740965880 * x);
	L3 += 0.00000001133 * Utils.cost(2.38180830662 + 6684.74797174860 * x);
	L3 += 0.00000001037 * Utils.cost(1.76892750558 + 382.89653222320 * x);
	L3 += 0.00000000894 * Utils.cost(5.33688328934 + 1194.44701022460 * x);
	L3 += 0.00000000807 * Utils.cost(2.74798886181 + 1748.01641306700 * x);
	L3 += 0.00000000640 * Utils.cost(6.10665147849 + 3496.03282613400 * x);
	L3 += 0.00000000558 * Utils.cost(1.85212342360 + 398.14900340820 * x);
	L3 += 0.00000000567 * Utils.cost(5.85922384979 + 7.11354700080 * x);
	L3 += 0.00000000647 * Utils.cost(3.17645475605 + 3583.34103067380 * x);
	L3 += 0.00000000452 * Utils.cost(5.98109989317 + 2787.04302385740 * x);
	L3 += 0.00000000508 * Utils.cost(1.01139298015 + 3149.16416058820 * x);
	L3 += 0.00000000519 * Utils.cost(4.93376176788 + 6525.80445396540 * x);
	L3 += 0.00000000405 * Utils.cost(1.27295444059 + 2281.23049651060 * x);
	L3 += 0.00000000399 * Utils.cost(2.32888685659 + 3738.76143010800 * x);
	L3 += 0.00000000472 * Utils.cost(0.84411483892 + 4136.91043351620 * x);
	L3 += 0.00000000333 * Utils.cost(5.42704539231 + 1059.38193018920 * x);
	L3 += 0.00000000313 * Utils.cost(3.70599897858 + 3097.88382272579 * x);
	L3 += 0.00000000281 * Utils.cost(5.74581724084 + 3341.59274776800 * x);
	L3 += 0.00000000287 * Utils.cost(2.69304799864 + 10025.36039844840 * x);
	L3 += 0.00000000237 * Utils.cost(5.68519881994 + 4535.05943692440 * x);
	L3 += 0.00000000215 * Utils.cost(2.49494803822 + 1990.74501704100 * x);
	L3 += 0.00000000260 * Utils.cost(2.67996877129 + 23384.28698689860 * x);
	L3 += 0.00000000269 * Utils.cost(1.10390153866 + 2388.89402044920 * x);
	L3 += 0.00000000186 * Utils.cost(4.86408411823 + 2957.71589447660 * x);
	L3 += 0.00000000176 * Utils.cost(3.86618588087 + 1592.59601363280 * x);
	L3 += 0.00000000177 * Utils.cost(0.85374318134 + 3894.18182954220 * x);
	L3 += 0.00000000191 * Utils.cost(4.58805692093 + 3337.08930835080 * x);
	L3 += 0.00000000185 * Utils.cost(5.80899316550 + 4399.99435688900 * x);
	L3 += 0.00000000143 * Utils.cost(1.15592612974 + 7477.52286021600 * x);
	L3 += 0.00000000173 * Utils.cost(2.70622920014 + 7079.37385680780 * x);
	L3 += 0.00000000146 * Utils.cost(1.37569151302 + 6489.77658728800 * x);
	L3 += 0.00000000121 * Utils.cost(3.24333934982 + 9492.14631500480 * x);
	L3 += 0.00000000116 * Utils.cost(5.71639819530 + 12303.06777661000 * x);
	L3 += 0.00000000111 * Utils.cost(2.69566947038 + 6151.53388830500 * x);
	L3 += 0.00000000103 * Utils.cost(3.53587741373 + 6923.95345737360 * x);
	L3 += 0.00000000097 * Utils.cost(5.23712981002 + 8962.45534991020 * x);
	L3 += 0.00000000089 * Utils.cost(0.05951324220 + 6127.65545055720 * x);
	L3 += 0.00000000093 * Utils.cost(5.29818155587 + 9866.41688066520 * x);
	L3 += 0.00000000084 * Utils.cost(5.68544044325 + 4292.33083295040 * x);
	L3 += 0.00000000091 * Utils.cost(6.16223680965 + 6682.20517446780 * x);
	L3 += 0.00000000081 * Utils.cost(4.32723330620 + 4933.20844033260 * x);
	L3 += 0.00000000077 * Utils.cost(5.63189824170 + 1589.07289528380 * x);
	L3 += 0.00000000102 * Utils.cost(6.26937663026 + 3347.72597370060 * x);
	L3 += 0.00000000076 * Utils.cost(3.05724276091 + 13365.97282514820 * x);
	L3 += 0.00000000063 * Utils.cost(3.12770931753 + 10419.98628350760 * x);
	L3 += 0.00000000062 * Utils.cost(1.45647168723 + 7234.79425624200 * x);
	L3 += 0.00000000069 * Utils.cost(4.82266605869 + 6677.70173505060 * x);
	L3 += 0.00000000064 * Utils.cost(1.73713448446 + 3870.30339179440 * x);
	L3 += 0.00000000058 * Utils.cost(4.85723088492 + 5486.77784317500 * x);
	L3 += 0.00000000058 * Utils.cost(6.09849516790 + 7875.67186362420 * x);
	L3 += 0.00000000063 * Utils.cost(4.14716431158 + 3340.59517304760 * x);
	L3 += 0.00000000065 * Utils.cost(6.17932665318 + 3340.62968035200 * x);
	L3 += 0.00000000057 * Utils.cost(1.48905992502 + 5729.50644714900 * x);
	L3 += 0.00000000060 * Utils.cost(6.08710604997 + 7740.60678358880 * x);
	L3 += 0.00000000056 * Utils.cost(1.96253427165 + 3553.91152213780 * x);
	L3 += 0.00000000059 * Utils.cost(0.89874385953 + 3339.63210563160 * x);
	L3 += 0.00000000053 * Utils.cost(3.04776975379 + 26724.89941359840 * x);
	L3 += 0.00000000061 * Utils.cost(3.63390789623 + 12832.75874170460 * x);
	L3 += 0.00000000059 * Utils.cost(0.22989746040 + 6681.24210705180 * x);
	L3 += 0.00000000053 * Utils.cost(3.97996929188 + 5092.15195811580 * x);
	L3 += 0.00000000059 * Utils.cost(4.48255178273 + 6681.20759974740 * x);
	L3 += 0.00000000045 * Utils.cost(3.88055745121 + 10264.56588407340 * x);
	L3 += 0.00000000058 * Utils.cost(4.85371375265 + 5621.84292321040 * x);
	L3 += 0.00000000049 * Utils.cost(4.03623343126 + 16173.37116840440 * x);
	L3 += 0.00000000061 * Utils.cost(2.90942510134 + 5331.35744374080 * x);
	L3 += 0.00000000043 * Utils.cost(1.80990718340 + 9830.38901398780 * x);
	L3 += 0.00000000044 * Utils.cost(4.10828944542 + 4690.47983635860 * x);
	L3 += 0.00000000044 * Utils.cost(3.49332765553 + 13760.59871020740 * x);
	L3 += 0.00000000048 * Utils.cost(1.81207342615 + 3723.50895892300 * x);
	L3 += 0.00000000041 * Utils.cost(1.59906754314 + 10818.13528691580 * x);
	L3 += 0.00000000041 * Utils.cost(2.05797417369 + 6681.29216370240 * x);
	L3 += 0.00000000038 * Utils.cost(3.38619280993 + 16706.58525184800 * x);
	L3 += 0.00000000041 * Utils.cost(2.53336616026 + 6681.15754309680 * x);
	L3 += 0.00000000041 * Utils.cost(1.79026132252 + 3340.54511639700 * x);
	L3 += 0.00000000050 * Utils.cost(4.70324784090 + 8273.82086703240 * x);
	L3 += 0.00000000037 * Utils.cost(3.37898394417 + 30065.51184029820 * x);
	L3 += 0.00000000039 * Utils.cost(2.65566008587 + 6894.52394883760 * x);
	L3 += 0.00000000035 * Utils.cost(2.58475025674 + 9623.68827669120 * x);
	L3 += 0.00000000037 * Utils.cost(6.07442797404 + 4929.68532198360 * x);
	L3 += 0.00000000042 * Utils.cost(3.04642561189 + 12964.30070339100 * x);
	L3 += 0.00000000037 * Utils.cost(5.23784488646 + 6298.32832117640 * x);
	L3 += 0.00000000043 * Utils.cost(6.17835198533 + 15643.68020330980 * x);
	L3 += 0.00000000034 * Utils.cost(2.44806511268 + 7210.91581849420 * x);
	L3 += 0.00000000038 * Utils.cost(0.26295105909 + 10022.81760116760 * x);
	L3 += 0.00000000028 * Utils.cost(0.74281728305 + 10021.85453375160 * x);
	L3 += 0.00000000028 * Utils.cost(4.99536302577 + 10021.82002644720 * x);
	L3 += 0.00000000034 * Utils.cost(5.04118058624 + 8969.56889691100 * x);
	L3 += 0.00000000025 * Utils.cost(2.59849002421 + 8955.34180290940 * x);
	L3 += 0.00000000030 * Utils.cost(1.14354290938 + 2146.16541647520 * x);
	L3 += 0.00000000027 * Utils.cost(0.26980783576 + 18984.29263000960 * x);
	L3 += 0.00000000025 * Utils.cost(0.39810308575 + 6688.33840040040 * x);
	L3 += 0.00000000024 * Utils.cost(5.64558695441 + 13207.02930736500 * x);
	L3 += 0.00000000027 * Utils.cost(6.24398988438 + 5088.62883976680 * x);
	L3 += 0.00000000024 * Utils.cost(0.25455613132 + 11081.21921028860 * x);
	L3 += 0.00000000023 * Utils.cost(0.53673547304 + 3333.49887969900 * x);
	L3 += 0.00000000024 * Utils.cost(1.80155161992 + 6674.11130639880 * x);
	L3 += 0.00000000029 * Utils.cost(4.39953507920 + 10018.31416175040 * x);
	L3 += 0.00000000023 * Utils.cost(2.91040060956 + 10551.52824519400 * x);
	L3 += 0.00000000022 * Utils.cost(1.20895727897 + 529.69096509460 * x);
	L3 += 0.00000000026 * Utils.cost(0.08254324904 + 7632.94325965020 * x);
	L3 += 0.00000000026 * Utils.cost(1.81668969835 + 6283.07584999140 * x);
	L3 += 0.00000000021 * Utils.cost(0.67232850824 + 6836.64525283380 * x);
	L3 += 0.00000000017 * Utils.cost(5.19518401928 + 2914.01423582380 * x);
	L3 += 0.00000000017 * Utils.cost(5.16488977775 + 8031.09226305840 * x);
	L3 += 0.00000000021 * Utils.cost(3.62973082412 + 5884.92684658320 * x);
	L3 += 0.00000000018 * Utils.cost(5.06870872024 + 2544.31441988340 * x);
	L3 += 0.00000000014 * Utils.cost(2.50522181917 + 7064.12138562280 * x);
	L3 += 0.00000000017 * Utils.cost(0.41835598950 + 9468.26787725700 * x);
	L3 += 0.00000000011 * Utils.cost(2.21363101654 + 6438.49624942560 * x);
	L3 += 0.00000000013 * Utils.cost(1.38424462832 + 3340.67973700260 * x);
	L3 += 0.00000000012 * Utils.cost(3.28248484262 + 8671.96987044060 * x);
	L3 += 0.00000000014 * Utils.cost(0.23027665815 + 3767.21061757580 * x);

	let L4 = 0;
	L4 -= 0.00000113969;
	L4 += 0.00000028725 * Utils.cost(5.63662412043 + 6681.22485339960 * x);
	L4 += 0.00000024447 * Utils.cost(5.13868481454 + 3340.61242669980 * x);
	L4 += 0.00000011187 * Utils.cost(6.03161074431 + 10021.83728009940 * x);
	L4 += 0.00000003190 * Utils.cost(3.56267988299 + 155.42039943420 * x);
	L4 += 0.00000003252 * Utils.cost(0.13228350651 + 13362.44970679920 * x);
	L4 += 0.00000000787 * Utils.cost(0.49340783377 + 16703.06213349900 * x);
	L4 += 0.00000000776 * Utils.cost(1.31734531594 + 242.72860397400 * x);
	L4 += 0.00000000494 * Utils.cost(3.06356214498 + 3185.19202726560 * x);
	L4 += 0.00000000374 * Utils.cost(2.15785846355 + 553.56940284240 * x);
	L4 += 0.00000000331 * Utils.cost(6.23159792887 + 3.52311834900 * x);
	L4 += 0.00000000197 * Utils.cost(0.44350153983 + 3344.13554504880 * x);
	L4 += 0.00000000181 * Utils.cost(0.81531283571 + 20043.67456019880 * x);
	L4 += 0.00000000168 * Utils.cost(3.73509781785 + 3496.03282613400 * x);
	L4 += 0.00000000086 * Utils.cost(0.79259553758 + 6684.74797174860 * x);
	L4 += 0.00000000115 * Utils.cost(1.66898531261 + 3583.34103067380 * x);
	L4 += 0.00000000092 * Utils.cost(3.40530361815 + 6525.80445396540 * x);
	L4 += 0.00000000064 * Utils.cost(4.47443580658 + 2787.04302385740 * x);
	L4 += 0.00000000045 * Utils.cost(5.17216217058 + 3097.88382272579 * x);
	L4 += 0.00000000041 * Utils.cost(1.21875027733 + 23384.28698689860 * x);
	L4 += 0.00000000036 * Utils.cost(5.53975653407 + 3149.16416058820 * x);
	L4 += 0.00000000039 * Utils.cost(5.40966345885 + 4136.91043351620 * x);
	L4 += 0.00000000028 * Utils.cost(4.85378781404 + 6127.65545055720 * x);
	L4 += 0.00000000027 * Utils.cost(0.42811091036 + 3738.76143010800 * x);
	L4 += 0.00000000032 * Utils.cost(1.22337093927 + 10025.36039844840 * x);
	L4 += 0.00000000025 * Utils.cost(1.56348878811 + 26724.89941359840 * x);
	L4 += 0.00000000029 * Utils.cost(2.40178626971 + 3894.18182954220 * x);
	L4 += 0.00000000023 * Utils.cost(4.16371253947 + 3341.59274776800 * x);
	L4 += 0.00000000022 * Utils.cost(5.98429191667 + 7477.52286021600 * x);
	L4 += 0.00000000019 * Utils.cost(2.03228980685 + 6923.95345737360 * x);
	L4 += 0.00000000020 * Utils.cost(3.79275573433 + 9866.41688066520 * x);
	L4 += 0.00000000021 * Utils.cost(4.27532111122 + 6836.64525283380 * x);
	L4 += 0.00000000015 * Utils.cost(1.56315497374 + 13365.97282514820 * x);
	L4 += 0.00000000011 * Utils.cost(1.33261955275 + 2281.23049651060 * x);
	L4 += 0.00000000009 * Utils.cost(6.15390464542 + 6489.77658728800 * x);
	L4 += 0.00000000007 * Utils.cost(4.23894194106 + 4535.05943692440 * x);

	let L5 = 0;
	L5 += 0.00000000710 * Utils.cost(4.04089996521 + 6681.22485339960 * x);
	L5 -= 0.00000000868;
	L5 += 0.00000000510 * Utils.cost(4.49214901625 + 10021.83728009940 * x);
	L5 += 0.00000000357 * Utils.cost(5.07435505061 + 155.42039943420 * x);
	L5 += 0.00000000223 * Utils.cost(3.51351884241 + 3340.61242669980 * x);
	L5 += 0.00000000199 * Utils.cost(4.85313666795 + 13362.44970679920 * x);
	L5 += 0.00000000100 * Utils.cost(6.09089356066 + 242.72860397400 * x);
	L5 += 0.00000000069 * Utils.cost(5.19017483537 + 16703.06213349900 * x);
	L5 += 0.00000000064 * Utils.cost(1.55783055571 + 3185.19202726560 * x);
	L5 += 0.00000000035 * Utils.cost(3.68246171643 + 553.56940284240 * x);
	L5 += 0.00000000025 * Utils.cost(5.22079788019 + 3496.03282613400 * x);
	L5 += 0.00000000024 * Utils.cost(0.17861991485 + 3583.34103067380 * x);
	L5 += 0.00000000019 * Utils.cost(5.59184714460 + 20043.67456019880 * x);
	L5 += 0.00000000014 * Utils.cost(5.95565787085 + 23384.28698689860 * x);
	L5 += 0.00000000012 * Utils.cost(1.93859256739 + 6525.80445396540 * x);

	let x2 = x * x;
	let x3 = x2 * x;
	let x4 = x3 * x;
	let x5 = x4 * x;

	return Math.toDegrees(Utils.norm2PiRad(L0 + L1 * x + L2 * x2 + L3 * x3 + L4 * x4 + L5 * x5));
}

// Heliocentric latitude of Mars
export function bMars(x) {
	let B0 = 0;
	B0 += 0.03197134986 * Utils.cost(3.76832042432 + 3340.61242669980 * x);
	B0 += 0.00298033234 * Utils.cost(4.10616996243 + 6681.22485339960 * x);
	B0 += 0.00289104742;
	B0 += 0.00031365538 * Utils.cost(4.44651052853 + 10021.83728009940 * x);
	B0 += 0.00003484100 * Utils.cost(4.78812547889 + 13362.44970679920 * x);
	B0 += 0.00000442999 * Utils.cost(5.65233015876 + 3337.08930835080 * x);
	B0 += 0.00000443401 * Utils.cost(5.02642620491 + 3344.13554504880 * x);
	B0 += 0.00000399109 * Utils.cost(5.13056814700 + 16703.06213349900 * x);
	B0 += 0.00000292506 * Utils.cost(3.79290644595 + 2281.23049651060 * x);
	B0 += 0.00000181982 * Utils.cost(6.13648011704 + 6151.53388830500 * x);
	B0 += 0.00000163159 * Utils.cost(4.26399626634 + 529.69096509460 * x);
	B0 += 0.00000159678 * Utils.cost(2.23194610246 + 1059.38193018920 * x);
	B0 += 0.00000139323 * Utils.cost(2.41796344238 + 8962.45534991020 * x);
	B0 += 0.00000149297 * Utils.cost(2.16501209917 + 5621.84292321040 * x);
	B0 += 0.00000142686 * Utils.cost(1.18215016110 + 3340.59517304760 * x);
	B0 += 0.00000142685 * Utils.cost(3.21292180820 + 3340.62968035200 * x);
	B0 += 0.00000082544 * Utils.cost(5.36667872319 + 6684.74797174860 * x);
	B0 += 0.00000073640 * Utils.cost(5.09187524843 + 398.14900340820 * x);
	B0 += 0.00000072660 * Utils.cost(5.53775710437 + 6283.07584999140 * x);
	B0 += 0.00000086377 * Utils.cost(5.74429648412 + 3738.76143010800 * x);
	B0 += 0.00000083276 * Utils.cost(5.98866315739 + 6677.70173505060 * x);
	B0 += 0.00000060116 * Utils.cost(3.67960808826 + 796.29800681640 * x);
	B0 += 0.00000063111 * Utils.cost(0.73049113369 + 5884.92684658320 * x);
	B0 += 0.00000062338 * Utils.cost(4.85071999184 + 2942.46342329160 * x);
	B0 += 0.00000046951 * Utils.cost(5.54339723804 + 3340.54511639700 * x);
	B0 += 0.00000046953 * Utils.cost(5.13486627234 + 3340.67973700260 * x);
	B0 += 0.00000046630 * Utils.cost(5.47361665459 + 20043.67456019880 * x);
	B0 += 0.00000045588 * Utils.cost(2.13262507507 + 2810.92146160520 * x);
	B0 += 0.00000041269 * Utils.cost(0.20003189001 + 9492.14631500480 * x);
	B0 += 0.00000047199 * Utils.cost(4.52184736343 + 3149.16416058820 * x);
	B0 += 0.00000038540 * Utils.cost(4.08008443274 + 4136.91043351620 * x);
	B0 += 0.00000033069 * Utils.cost(4.06581918329 + 1751.53953141600 * x);
	B0 += 0.00000029694 * Utils.cost(5.92218297386 + 3532.06069281140 * x);
	B0 += 0.00000032736 * Utils.cost(2.62071056958 + 2914.01423582380 * x);
	B0 += 0.00000029521 * Utils.cost(2.75342566734 + 12303.06777661000 * x);
	B0 += 0.00000028169 * Utils.cost(2.06282533993 + 5486.77784317500 * x);
	B0 += 0.00000028618 * Utils.cost(4.94710527914 + 3870.30339179440 * x);
	B0 += 0.00000026603 * Utils.cost(3.55085844020 + 6681.24210705180 * x);
	B0 += 0.00000026603 * Utils.cost(1.52008675291 + 6681.20759974740 * x);
	B0 += 0.00000023336 * Utils.cost(2.27624532707 + 1589.07289528380 * x);
	B0 += 0.00000026052 * Utils.cost(2.60064548916 + 4399.99435688900 * x);
	B0 += 0.00000022637 * Utils.cost(2.27507466406 + 1194.44701022460 * x);
	B0 += 0.00000018887 * Utils.cost(6.04416196149 + 7079.37385680780 * x);
	B0 += 0.00000014846 * Utils.cost(3.41358603159 + 5088.62883976680 * x);
	B0 += 0.00000019947 * Utils.cost(2.67365368471 + 8432.76438481560 * x);
	B0 += 0.00000014682 * Utils.cost(5.89211938785 + 9623.68827669120 * x);
	B0 += 0.00000014152 * Utils.cost(2.42512744356 + 3333.49887969900 * x);
	B0 += 0.00000013310 * Utils.cost(2.62839773036 + 426.59819087600 * x);
	B0 += 0.00000014008 * Utils.cost(1.67425558329 + 6254.62666252360 * x);
	B0 += 0.00000015104 * Utils.cost(2.81013535571 + 3496.03282613400 * x);
	B0 += 0.00000013011 * Utils.cost(5.70759434129 + 10025.36039844840 * x);
	B0 += 0.00000012080 * Utils.cost(1.51804981987 + 3185.19202726560 * x);
	B0 += 0.00000013183 * Utils.cost(0.04521207632 + 10018.31416175040 * x);
	B0 += 0.00000011554 * Utils.cost(5.57418971820 + 191.44826611160 * x);
	B0 += 0.00000011196 * Utils.cost(0.55829576311 + 5092.15195811580 * x);
	B0 += 0.00000011530 * Utils.cost(2.13314819584 + 11773.37681151540 * x);
	B0 += 0.00000010435 * Utils.cost(5.72414012635 + 6467.92575796160 * x);
	B0 += 0.00000009846 * Utils.cost(0.86942245495 + 1592.59601363280 * x);
	B0 += 0.00000009761 * Utils.cost(1.09342288660 + 2544.31441988340 * x);
	B0 += 0.00000008754 * Utils.cost(5.47281660412 + 6681.29216370240 * x);
	B0 += 0.00000008937 * Utils.cost(4.83790385610 + 6489.77658728800 * x);
	B0 += 0.00000008652 * Utils.cost(4.72118876809 + 213.29909543800 * x);
	B0 += 0.00000008797 * Utils.cost(2.86597575792 + 3341.59274776800 * x);
	B0 += 0.00000008384 * Utils.cost(2.65895230037 + 4535.05943692440 * x);
	B0 += 0.00000008213 * Utils.cost(4.82608134710 + 3553.91152213780 * x);
	B0 += 0.00000008799 * Utils.cost(1.52910882795 + 3339.63210563160 * x);
	B0 += 0.00000008103 * Utils.cost(1.00994045172 + 9225.53927328300 * x);
	B0 += 0.00000008754 * Utils.cost(5.88131160438 + 6681.15754309680 * x);
	B0 += 0.00000007209 * Utils.cost(4.41679446871 + 7477.52286021600 * x);
	B0 += 0.00000008560 * Utils.cost(4.79003986337 + 4690.47983635860 * x);
	B0 += 0.00000006087 * Utils.cost(1.89071507516 + 9595.23908922340 * x);
	B0 += 0.00000006974 * Utils.cost(0.53246284561 + 12832.75874170460 * x);
	B0 += 0.00000005584 * Utils.cost(6.18909308524 + 4292.33083295040 * x);
	B0 += 0.00000005038 * Utils.cost(6.06393121994 + 7210.91581849420 * x);
	B0 += 0.00000005126 * Utils.cost(0.11856805000 + 4562.46099302120 * x);
	B0 += 0.00000004863 * Utils.cost(1.33051301524 + 3894.18182954220 * x);
	B0 += 0.00000005592 * Utils.cost(3.97792577165 + 3127.31333126180 * x);
	B0 += 0.00000004965 * Utils.cost(5.74589127183 + 1990.74501704100 * x);
	B0 += 0.00000005530 * Utils.cost(5.81711987294 + 23384.28698689860 * x);
	B0 += 0.00000004184 * Utils.cost(3.88899446923 + 10021.85453375160 * x);
	B0 += 0.00000004184 * Utils.cost(1.85821885540 + 10021.82002644720 * x);
	B0 += 0.00000004685 * Utils.cost(1.11750235736 + 3319.83703120740 * x);
	B0 += 0.00000003954 * Utils.cost(2.65573703692 + 4929.68532198360 * x);
	B0 += 0.00000005174 * Utils.cost(3.62343554596 + 2700.71514038580 * x);
	B0 += 0.00000004639 * Utils.cost(6.14089337232 + 7.11354700080 * x);
	B0 += 0.00000004686 * Utils.cost(3.27731664264 + 3361.38782219220 * x);
	B0 += 0.00000004999 * Utils.cost(3.09121636067 + 15643.68020330980 * x);
	B0 += 0.00000003919 * Utils.cost(2.96552252075 + 7740.60678358880 * x);
	B0 += 0.00000003361 * Utils.cost(1.85016770821 + 2957.71589447660 * x);
	B0 += 0.00000004246 * Utils.cost(4.19639278630 + 2146.16541647520 * x);
	B0 += 0.00000004101 * Utils.cost(6.22532797325 + 10213.28554621100 * x);
	B0 += 0.00000003124 * Utils.cost(0.08536218671 + 10419.98628350760 * x);
	B0 += 0.00000003079 * Utils.cost(2.41163389513 + 3344.20285535160 * x);
	B0 += 0.00000003093 * Utils.cost(1.98041729732 + 3337.02199804800 * x);
	B0 += 0.00000003044 * Utils.cost(4.38894419912 + 1221.84856632140 * x);
	B0 += 0.00000002879 * Utils.cost(2.93292197885 + 2787.04302385740 * x);
	B0 += 0.00000003372 * Utils.cost(4.45558202843 + 6674.11130639880 * x);
	B0 += 0.00000002510 * Utils.cost(4.06249795775 + 6872.67311951120 * x);
	B0 += 0.00000002616 * Utils.cost(1.23659420897 + 4933.20844033260 * x);
	B0 += 0.00000003011 * Utils.cost(4.33965766608 + 2388.89402044920 * x);
	B0 += 0.00000003094 * Utils.cost(2.40385309455 + 2118.76386037840 * x);
	B0 += 0.00000002516 * Utils.cost(2.30275910483 + 3723.50895892300 * x);
	B0 += 0.00000002192 * Utils.cost(1.68877598700 + 639.89728631400 * x);
	B0 += 0.00000002157 * Utils.cost(6.07600403318 + 9808.53818466140 * x);
	B0 += 0.00000002686 * Utils.cost(2.38172448359 + 15113.98923821520 * x);
	B0 += 0.00000002156 * Utils.cost(2.87771528495 + 6041.32756708560 * x);
	B0 += 0.00000002495 * Utils.cost(3.87395320804 + 7903.07341972100 * x);
	B0 += 0.00000002253 * Utils.cost(0.47469626036 + 3475.67750673520 * x);
	B0 += 0.00000002443 * Utils.cost(3.02632351975 + 3767.21061757580 * x);
	B0 += 0.00000001937 * Utils.cost(0.38000997629 + 13358.92658845020 * x);
	B0 += 0.00000002213 * Utils.cost(3.91982326360 + 3205.54734666440 * x);
	B0 += 0.00000002385 * Utils.cost(6.23883456815 + 12964.30070339100 * x);
	B0 += 0.00000001806 * Utils.cost(2.38408432339 + 11243.68584642080 * x);
	B0 += 0.00000002265 * Utils.cost(1.85773885180 + 6525.80445396540 * x);
	B0 += 0.00000001642 * Utils.cost(1.86812936557 + 6680.24453233140 * x);
	B0 += 0.00000001616 * Utils.cost(3.39954231101 + 8429.24126646660 * x);
	B0 += 0.00000001646 * Utils.cost(0.73261192032 + 2274.11694950980 * x);
	B0 += 0.00000001910 * Utils.cost(6.04319894051 + 13365.97282514820 * x);
	B0 += 0.00000001492 * Utils.cost(2.99360929050 + 7875.67186362420 * x);
	B0 += 0.00000001567 * Utils.cost(1.76860259924 + 382.89653222320 * x);
	B0 += 0.00000001459 * Utils.cost(1.40571286543 + 14584.29827312060 * x);
	B0 += 0.00000001527 * Utils.cost(5.79343536555 + 6894.52394883760 * x);
	B0 += 0.00000001409 * Utils.cost(5.17099876287 + 9830.38901398780 * x);
	B0 += 0.00000001665 * Utils.cost(3.60183854165 + 2288.34404351140 * x);
	B0 += 0.00000001616 * Utils.cost(2.19447775480 + 8827.39026987480 * x);
	B0 += 0.00000001746 * Utils.cost(0.10485504333 + 3583.34103067380 * x);
	B0 += 0.00000001637 * Utils.cost(3.20410489018 + 6682.20517446780 * x);
	B0 += 0.00000001269 * Utils.cost(2.02253791623 + 155.42039943420 * x);
	B0 += 0.00000001507 * Utils.cost(5.80795976424 + 1748.01641306700 * x);
	B0 += 0.00000001296 * Utils.cost(2.92899986522 + 9381.93999378540 * x);
	B0 += 0.00000001291 * Utils.cost(2.98932404463 + 6836.64525283380 * x);
	B0 += 0.00000001377 * Utils.cost(5.80980821450 + 10021.90459040220 * x);
	B0 += 0.00000001357 * Utils.cost(0.32856318286 + 4032.77002792660 * x);
	B0 += 0.00000001377 * Utils.cost(6.21830533138 + 10021.76996979660 * x);
	B0 += 0.00000001227 * Utils.cost(2.20421067322 + 12935.85151592320 * x);
	B0 += 0.00000001080 * Utils.cost(4.75502761725 + 10818.13528691580 * x);
	B0 += 0.00000001016 * Utils.cost(1.33950348904 + 12566.15169998280 * x);
	B0 += 0.00000001083 * Utils.cost(0.87622049125 + 16173.37116840440 * x);
	B0 += 0.00000000957 * Utils.cost(5.29505019432 + 1066.49547719000 * x);
	B0 += 0.00000001035 * Utils.cost(2.44286811558 + 1052.26838318840 * x);
	B0 += 0.00000001153 * Utils.cost(4.73786864168 + 8031.09226305840 * x);
	B0 += 0.00000001042 * Utils.cost(1.73541825729 + 3369.06161416760 * x);
	B0 += 0.00000000899 * Utils.cost(1.87265511538 + 3077.52850332700 * x);
	B0 += 0.00000000892 * Utils.cost(2.51347636401 + 3603.69635007260 * x);
	B0 += 0.00000000904 * Utils.cost(0.27361540197 + 3325.35995551480 * x);
	B0 += 0.00000000883 * Utils.cost(5.46537936740 + 5614.72937620960 * x);
	B0 += 0.00000000949 * Utils.cost(0.04595688771 + 7064.12138562280 * x);
	B0 += 0.00000000872 * Utils.cost(3.61205859852 + 6702.00024889200 * x);
	B0 += 0.00000000842 * Utils.cost(5.61713543212 + 8955.34180290940 * x);
	B0 += 0.00000000842 * Utils.cost(0.57536275896 + 3191.04922956520 * x);
	B0 += 0.00000000904 * Utils.cost(4.11832249537 + 3355.86489788480 * x);
	B0 += 0.00000001044 * Utils.cost(2.65889542110 + 3312.16323923200 * x);
	B0 += 0.00000000807 * Utils.cost(2.26443259820 + 8969.56889691100 * x);
	B0 += 0.00000001046 * Utils.cost(6.11317298058 + 5331.35744374080 * x);
	B0 += 0.00000000933 * Utils.cost(0.82551054416 + 3503.07906283200 * x);
	B0 += 0.00000000946 * Utils.cost(1.92368414869 + 5628.95647021120 * x);
	B0 += 0.00000000978 * Utils.cost(4.55697167317 + 3097.88382272579 * x);
	B0 += 0.00000000846 * Utils.cost(4.65096242323 + 6438.49624942560 * x);
	B0 += 0.00000000901 * Utils.cost(1.46788821922 + 6660.44945790720 * x);
	B0 += 0.00000000739 * Utils.cost(4.97716008834 + 10014.72373309860 * x);
	B0 += 0.00000000762 * Utils.cost(3.42576079312 + 18984.29263000960 * x);
	B0 += 0.00000000934 * Utils.cost(0.35014113954 + 3264.34635542420 * x);
	B0 += 0.00000000894 * Utils.cost(0.34991139502 + 10551.52824519400 * x);
	B0 += 0.00000000665 * Utils.cost(6.05561837558 + 7632.94325965020 * x);
	B0 += 0.00000000605 * Utils.cost(4.68480399923 + 5729.50644714900 * x);
	B0 += 0.00000000593 * Utils.cost(2.97207045977 + 3178.14579056760 * x);
	B0 += 0.00000000617 * Utils.cost(2.19529512598 + 13362.43245314700 * x);
	B0 += 0.00000000579 * Utils.cost(3.32303439858 + 11081.21921028860 * x);
	B0 += 0.00000000579 * Utils.cost(2.31217959727 + 6677.63442474780 * x);
	B0 += 0.00000000572 * Utils.cost(4.27984088783 + 6546.15977336420 * x);
	B0 += 0.00000000584 * Utils.cost(4.51625727923 + 1648.44675719740 * x);
	B0 += 0.00000000626 * Utils.cost(4.60715188203 + 2487.41604494780 * x);
	B0 += 0.00000000649 * Utils.cost(2.17894376907 + 6298.32832117640 * x);
	B0 += 0.00000000617 * Utils.cost(4.22635718375 + 13362.46696045140 * x);
	B0 += 0.00000000550 * Utils.cost(3.11161314141 + 6144.42034130420 * x);
	B0 += 0.00000000551 * Utils.cost(3.27081871281 + 6127.65545055720 * x);
	B0 += 0.00000000536 * Utils.cost(0.18973312148 + 3346.13535100720 * x);
	B0 += 0.00000000557 * Utils.cost(6.13686769377 + 26724.89941359840 * x);
	B0 += 0.00000000571 * Utils.cost(5.65341463660 + 2921.12778282460 * x);
	B0 += 0.00000000552 * Utils.cost(5.75724124958 + 149.56319713460 * x);
	B0 += 0.00000000638 * Utils.cost(4.49647258906 + 3.52311834900 * x);
	B0 += 0.00000000552 * Utils.cost(1.07795672495 + 536.80451209540 * x);
	B0 += 0.00000000537 * Utils.cost(4.19207200801 + 3335.08950239240 * x);
	B0 += 0.00000000567 * Utils.cost(2.62806466971 + 2648.45482547300 * x);
	B0 += 0.00000000641 * Utils.cost(3.24534699403 + 3347.72597370060 * x);
	B0 += 0.00000000546 * Utils.cost(2.76744357149 + 5459.37628707820 * x);
	B0 += 0.00000000556 * Utils.cost(4.98610303145 + 6531.66165626500 * x);
	B0 += 0.00000000578 * Utils.cost(2.74445077242 + 6684.81528205140 * x);
	B0 += 0.00000000613 * Utils.cost(3.01718810256 + 8270.29774868340 * x);
	B0 += 0.00000000558 * Utils.cost(5.89236366633 + 6158.64743530580 * x);
	B0 += 0.00000000489 * Utils.cost(4.59082197201 + 522.57741809380 * x);
	B0 += 0.00000000445 * Utils.cost(3.64293918046 + 10713.99488132620 * x);
	B0 += 0.00000000539 * Utils.cost(0.59284523316 + 553.56940284240 * x);
	B0 += 0.00000000434 * Utils.cost(1.99641894213 + 26087.90314157420 * x);
	B0 += 0.00000000459 * Utils.cost(4.84216944554 + 1758.65307841680 * x);
	B0 += 0.00000000423 * Utils.cost(3.77854586358 + 6688.33840040040 * x);
	B0 += 0.00000000421 * Utils.cost(3.10245838137 + 8329.67161059700 * x);
	B0 += 0.00000000421 * Utils.cost(4.43540354818 + 103.09277421860 * x);
	B0 += 0.00000000502 * Utils.cost(3.03141512630 + 3360.96774609859 * x);
	B0 += 0.00000000422 * Utils.cost(5.99158563064 + 242.72860397400 * x);
	B0 += 0.00000000401 * Utils.cost(2.06012045711 + 3980.50971301380 * x);
	B0 += 0.00000000410 * Utils.cost(5.85255605682 + 3351.24909204960 * x);
	B0 += 0.00000000375 * Utils.cost(2.50803340920 + 6784.31762761820 * x);
	B0 += 0.00000000407 * Utils.cost(0.30117328390 + 16304.91313009080 * x);
	B0 += 0.00000000507 * Utils.cost(1.35016417800 + 3320.25710730100 * x);
	B0 += 0.00000000385 * Utils.cost(1.06248122739 + 7234.79425624200 * x);
	B0 += 0.00000000519 * Utils.cost(4.61705823333 + 7373.38245462640 * x);
	B0 += 0.00000000401 * Utils.cost(0.51161484292 + 17085.95866572220 * x);
	B0 += 0.00000000371 * Utils.cost(0.41707432281 + 13760.59871020740 * x);
	B0 += 0.00000000476 * Utils.cost(0.81142637639 + 6816.28993343500 * x);
	B0 += 0.00000000348 * Utils.cost(3.36497054127 + 8439.87793181640 * x);
	B0 += 0.00000000366 * Utils.cost(6.05186692577 + 3607.21946842160 * x);
	B0 += 0.00000000402 * Utils.cost(2.67375675473 + 18454.60166491500 * x);
	B0 += 0.00000000439 * Utils.cost(0.41122589061 + 10404.73381232260 * x);
	B0 += 0.00000000412 * Utils.cost(4.81039654306 + 3329.97576135000 * x);
	B0 += 0.00000000413 * Utils.cost(0.21011211689 + 13149.15061136120 * x);
	B0 += 0.00000000363 * Utils.cost(2.19017574725 + 9866.41688066520 * x);
	B0 += 0.00000000337 * Utils.cost(5.46398740226 + 6604.95878212400 * x);
	B0 += 0.00000000340 * Utils.cost(1.73392662280 + 1692.16566950240 * x);
	B0 += 0.00000000344 * Utils.cost(3.58310197017 + 7107.82304427560 * x);
	B0 += 0.00000000420 * Utils.cost(2.77274750272 + 2906.90068882300 * x);
	B0 += 0.00000000335 * Utils.cost(2.02339633221 + 3333.56619000180 * x);
	B0 += 0.00000000336 * Utils.cost(2.78173647754 + 4989.05918389720 * x);
	B0 += 0.00000000354 * Utils.cost(5.41265456299 + 951.71840625060 * x);
	B0 += 0.00000000328 * Utils.cost(0.43464916253 + 6923.95345737360 * x);
	B0 += 0.00000000422 * Utils.cost(1.57591737080 + 8273.82086703240 * x);
	B0 += 0.00000000324 * Utils.cost(4.99165215532 + 11371.70468975820 * x);
	B0 += 0.00000000351 * Utils.cost(4.60766539695 + 3074.00538497800 * x);
	B0 += 0.00000000333 * Utils.cost(4.86991808664 + 3863.18984479360 * x);
	B0 += 0.00000000319 * Utils.cost(1.44510282827 + 11769.85369316640 * x);
	B0 += 0.00000000296 * Utils.cost(5.25637576704 + 76.26607127560 * x);
	B0 += 0.00000000349 * Utils.cost(1.62483962938 + 17924.91069982040 * x);
	B0 += 0.00000000293 * Utils.cost(2.20643287367 + 3347.65866339780 * x);
	B0 += 0.00000000315 * Utils.cost(4.55227306770 + 5828.02847164760 * x);
	B0 += 0.00000000280 * Utils.cost(1.42134291540 + 6606.44325483230 * x);
	B0 += 0.00000000336 * Utils.cost(1.56854533505 + 1581.95934828300 * x);
	B0 += 0.00000000343 * Utils.cost(0.27605726543 + 10973.55568635000 * x);
	B0 += 0.00000000271 * Utils.cost(0.08314924409 + 10235.13637553740 * x);
	B0 += 0.00000000280 * Utils.cost(0.76436434398 + 853.19638175200 * x);
	B0 += 0.00000000317 * Utils.cost(4.91466081381 + 3443.70520091840 * x);
	B0 += 0.00000000257 * Utils.cost(0.15709629188 + 12168.00269657460 * x);
	B0 += 0.00000000237 * Utils.cost(3.13380421805 + 74.78159856730 * x);
	B0 += 0.00000000271 * Utils.cost(1.83008759256 + 3399.98628861340 * x);
	B0 += 0.00000000233 * Utils.cost(3.20163702613 + 10177.25767953360 * x);
	B0 += 0.00000000312 * Utils.cost(0.28436027987 + 13745.34623902240 * x);
	B0 += 0.00000000273 * Utils.cost(4.53535816659 + 3344.49376205780 * x);
	B0 += 0.00000000235 * Utils.cost(0.67980074869 + 17395.21973472580 * x);
	B0 += 0.00000000262 * Utils.cost(3.84436620806 + 9168.64089834740 * x);
	B0 += 0.00000000271 * Utils.cost(4.94509131052 + 692.15760122680 * x);
	B0 += 0.00000000254 * Utils.cost(2.19491751584 + 3281.23856478620 * x);
	B0 += 0.00000000220 * Utils.cost(1.65400798925 + 3546.79797513700 * x);
	B0 += 0.00000000283 * Utils.cost(5.57884389098 + 3973.39616601300 * x);
	B0 += 0.00000000229 * Utils.cost(5.93153003758 + 3364.49086444760 * x);
	B0 += 0.00000000223 * Utils.cost(4.82744958322 + 9779.10867612540 * x);
	B0 += 0.00000000222 * Utils.cost(0.71788606092 + 16699.53901514999 * x);
	B0 += 0.00000000219 * Utils.cost(0.09831940529 + 16706.58525184800 * x);
	B0 += 0.00000000221 * Utils.cost(1.66596576205 + 10575.40668294180 * x);
	B0 += 0.00000000259 * Utils.cost(1.10208840059 + 1744.42598441520 * x);
	B0 += 0.00000000243 * Utils.cost(1.52425310144 + 14054.60730802600 * x);
	B0 += 0.00000000273 * Utils.cost(6.12932898811 + 3336.73109134180 * x);
	B0 += 0.00000000232 * Utils.cost(4.73422268172 + 3316.73398895200 * x);
	B0 += 0.00000000210 * Utils.cost(5.97305256642 + 419.48464387520 * x);
	B0 += 0.00000000213 * Utils.cost(5.35378111313 + 1596.18644228460 * x);
	B0 += 0.00000000197 * Utils.cost(3.32400761027 + 5085.03841111500 * x);
	B0 += 0.00000000193 * Utils.cost(0.90522037315 + 14314.16811304980 * x);
	B0 += 0.00000000192 * Utils.cost(2.63243342989 + 433.71173787680 * x);
	B0 += 0.00000000188 * Utils.cost(1.14983778034 + 13892.14067189380 * x);
	B0 += 0.00000000200 * Utils.cost(4.79567916236 + 6261.74020952440 * x);
	B0 += 0.00000000204 * Utils.cost(2.32272167710 + 13916.01910964160 * x);
	B0 += 0.00000000191 * Utils.cost(5.08454560792 + 2178.13772229200 * x);
	B0 += 0.00000000191 * Utils.cost(5.88821293073 + 3340.19235060619 * x);
	B0 += 0.00000000236 * Utils.cost(0.97341490472 + 3230.40610548040 * x);
	B0 += 0.00000000200 * Utils.cost(3.60041329896 + 3304.58456002240 * x);
	B0 += 0.00000000165 * Utils.cost(2.91701234796 + 3415.39402526710 * x);
	B0 += 0.00000000191 * Utils.cost(4.77647338120 + 3341.03250279340 * x);
	B0 += 0.00000000174 * Utils.cost(2.20549134205 + 10020.85695903120 * x);
	B0 += 0.00000000161 * Utils.cost(2.64795288862 + 3304.00706139560 * x);
	B0 += 0.00000000173 * Utils.cost(3.54115285115 + 10022.81760116760 * x);
	B0 += 0.00000000154 * Utils.cost(2.45916882835 + 12722.55242048520 * x);
	B0 += 0.00000000160 * Utils.cost(1.73968020026 + 3377.21779200400 * x);
	B0 += 0.00000000196 * Utils.cost(0.78013533938 + 3376.64029337720 * x);
	B0 += 0.00000000153 * Utils.cost(0.27328628499 + 13362.38239649640 * x);
	B0 += 0.00000000190 * Utils.cost(2.65143864216 + 3657.00429635640 * x);
	B0 += 0.00000000172 * Utils.cost(5.71092117488 + 2384.32327072920 * x);
	B0 += 0.00000000157 * Utils.cost(1.00235389487 + 3209.07046501340 * x);
	B0 += 0.00000000150 * Utils.cost(3.39592748537 + 3472.15438838620 * x);
	B0 += 0.00000000165 * Utils.cost(5.86551673354 + 2803.80791460440 * x);
	B0 += 0.00000000154 * Utils.cost(0.32136196834 + 6665.97238221460 * x);
	B0 += 0.00000000178 * Utils.cost(3.34059693754 + 11216.28429032400 * x);
	B0 += 0.00000000192 * Utils.cost(0.66079944629 + 3134.42687826260 * x);
	B0 += 0.00000000161 * Utils.cost(2.87915391245 + 4392.88080988820 * x);
	B0 += 0.00000000159 * Utils.cost(3.72249746113 + 13517.87010623340 * x);
	B0 += 0.00000000168 * Utils.cost(0.55746622745 + 110.20632121940 * x);
	B0 += 0.00000000158 * Utils.cost(5.67248197213 + 4407.10790388980 * x);
	B0 += 0.00000000161 * Utils.cost(1.76789928464 + 6709.67404086740 * x);
	B0 += 0.00000000158 * Utils.cost(5.50643845256 + 13171.00144068760 * x);
	B0 += 0.00000000129 * Utils.cost(1.21297315367 + 19513.98359510420 * x);
	B0 += 0.00000000173 * Utils.cost(0.17070148373 + 3024.22055704320 * x);
	B0 += 0.00000000132 * Utils.cost(4.25407099272 + 16858.48253293320 * x);
	B0 += 0.00000000125 * Utils.cost(2.88510294667 + 17256.63153634140 * x);
	B0 += 0.00000000124 * Utils.cost(2.59724598646 + 12310.18132361080 * x);
	B0 += 0.00000000170 * Utils.cost(4.05945259741 + 2818.03500860600 * x);
	B0 += 0.00000000121 * Utils.cost(5.23997785185 + 9872.27408296480 * x);
	B0 += 0.00000000142 * Utils.cost(3.02798835989 + 3511.28529731900 * x);
	B0 += 0.00000000165 * Utils.cost(2.53171951288 + 16276.46394262300 * x);
	B0 += 0.00000000153 * Utils.cost(6.14783670557 + 13362.51701710200 * x);
	B0 += 0.00000000119 * Utils.cost(4.15694365082 + 3760.09707057500 * x);
	B0 += 0.00000000120 * Utils.cost(0.64287725481 + 4459.36821880260 * x);
	B0 += 0.00000000130 * Utils.cost(4.95002309460 + 13553.89797291080 * x);
	B0 += 0.00000000120 * Utils.cost(0.17087854222 + 8671.96987044060 * x);
	B0 += 0.00000000112 * Utils.cost(0.16822264326 + 135.06508003540 * x);
	B0 += 0.00000000137 * Utils.cost(3.34809361979 + 3341.04230982650 * x);
	B0 += 0.00000000125 * Utils.cost(1.32195559043 + 1349.86740965880 * x);
	B0 += 0.00000000111 * Utils.cost(3.14151030451 + 13524.91634293140 * x);
	B0 += 0.00000000119 * Utils.cost(5.95361348050 + 12295.95422960920 * x);
	B0 += 0.00000000131 * Utils.cost(5.09769375731 + 14158.74771361560 * x);
	B0 += 0.00000000141 * Utils.cost(1.37128440708 + 3169.93955608060 * x);
	B0 += 0.00000000112 * Utils.cost(3.35831868034 + 5989.06725217280 * x);
	B0 += 0.00000000104 * Utils.cost(5.00696041032 + 13119.72110282519 * x);
	B0 += 0.00000000110 * Utils.cost(5.23317664736 + 1375.77379984580 * x);
	B0 += 0.00000000105 * Utils.cost(2.72692368303 + 1162.47470440780 * x);
	B0 += 0.00000000104 * Utils.cost(1.73769165705 + 2221.85663459700 * x);
	B0 += 0.00000000137 * Utils.cost(1.04576950390 + 3340.18254357310 * x);
	B0 += 0.00000000106 * Utils.cost(6.13415161313 + 162.46663613220 * x);
	B0 += 0.00000000119 * Utils.cost(2.63312561442 + 7321.12213971360 * x);
	B0 += 0.00000000105 * Utils.cost(3.09551802365 + 20618.01935853360 * x);
	B0 += 0.00000000099 * Utils.cost(4.25515697974 + 23539.70738633280 * x);
	B0 += 0.00000000108 * Utils.cost(1.01854506729 + 3265.83082813250 * x);
	B0 += 0.00000000119 * Utils.cost(4.07277528003 + 10184.30391623160 * x);
	B0 += 0.00000000096 * Utils.cost(1.81122023425 + 10001.06188460700 * x);
	B0 += 0.00000000093 * Utils.cost(3.58905885066 + 5099.26550511660 * x);
	B0 += 0.00000000095 * Utils.cost(4.94756054764 + 3981.49003408200 * x);
	B0 += 0.00000000094 * Utils.cost(5.37493368020 + 13355.33615979840 * x);
	B0 += 0.00000000095 * Utils.cost(0.13037485775 + 15508.61512327440 * x);
	B0 += 0.00000000103 * Utils.cost(0.43484130196 + 1861.74585263540 * x);
	B0 += 0.00000000090 * Utils.cost(3.76370412628 + 22324.90505670940 * x);
	B0 += 0.00000000091 * Utils.cost(3.95041101283 + 10042.61267559180 * x);
	B0 += 0.00000000106 * Utils.cost(4.30186500383 + 640.87760738220 * x);
	B0 += 0.00000000109 * Utils.cost(6.18873749839 + 1478.86657406440 * x);
	B0 += 0.00000000088 * Utils.cost(1.79608901332 + 6247.51311552280 * x);
	B0 += 0.00000000102 * Utils.cost(5.58754073056 + 2766.26762836500 * x);
	B0 += 0.00000000110 * Utils.cost(0.94707767481 + 3274.12501778540 * x);
	B0 += 0.00000000084 * Utils.cost(4.45487801845 + 6696.47732458460 * x);
	B0 += 0.00000000085 * Utils.cost(2.74791518135 + 3407.09983561420 * x);
	B0 += 0.00000000087 * Utils.cost(4.51145821088 + 220.41264243880 * x);
	B0 += 0.00000000101 * Utils.cost(5.94930983227 + 8425.65083781480 * x);
	B0 += 0.00000000082 * Utils.cost(0.01837230371 + 9499.25986200560 * x);
	B0 += 0.00000000080 * Utils.cost(0.42550989980 + 18052.92954315780 * x);
	B0 += 0.00000000083 * Utils.cost(2.96589752213 + 6652.77566593180 * x);
	B0 += 0.00000000080 * Utils.cost(4.61446168762 + 3914.95722503460 * x);
	B0 += 0.00000000079 * Utils.cost(1.50228636499 + 2111.65031337760 * x);
	B0 += 0.00000000089 * Utils.cost(3.52977975496 + 9485.03276800400 * x);
	B0 += 0.00000000086 * Utils.cost(0.41976545794 + 956.28915597060 * x);
	B0 += 0.00000000088 * Utils.cost(5.46013317934 + 16460.33352952499 * x);
	B0 += 0.00000000091 * Utils.cost(2.09965252231 + 949.17560896980 * x);
	B0 += 0.00000000104 * Utils.cost(1.72206104768 + 3296.89351439480 * x);
	B0 += 0.00000000103 * Utils.cost(1.25691413032 + 3384.33133900480 * x);
	B0 += 0.00000000084 * Utils.cost(5.78647729498 + 5518.75014899180 * x);
	B0 += 0.00000000079 * Utils.cost(1.79313426804 + 38.13303563780 * x);
	B0 += 0.00000000073 * Utils.cost(0.10667695992 + 29822.78323632420 * x);
	B0 += 0.00000000087 * Utils.cost(2.11654357529 + 3450.81874791920 * x);
	B0 += 0.00000000072 * Utils.cost(3.89476829327 + 9380.95967271720 * x);
	B0 += 0.00000000075 * Utils.cost(2.59340305340 + 1964.83862685400 * x);
	B0 += 0.00000000098 * Utils.cost(4.01577665825 + 6843.69148953180 * x);
	B0 += 0.00000000074 * Utils.cost(5.32032289064 + 11766.26326451460 * x);
	B0 += 0.00000000068 * Utils.cost(0.04775525953 + 2125.87740737920 * x);
	B0 += 0.00000000069 * Utils.cost(6.07427052412 + 26482.17080962440 * x);
	B0 += 0.00000000069 * Utils.cost(2.05018999200 + 29424.63423291600 * x);
	B0 += 0.00000000084 * Utils.cost(0.16960920719 + 263.08392337280 * x);
	B0 += 0.00000000068 * Utils.cost(5.03013252197 + 9070.11887384880 * x);
	B0 += 0.00000000076 * Utils.cost(2.00296087293 + 224.34479570190 * x);
	B0 += 0.00000000078 * Utils.cost(2.17362706851 + 30220.93223973240 * x);
	B0 += 0.00000000066 * Utils.cost(3.85497672006 + 19406.67828817460 * x);
	B0 += 0.00000000066 * Utils.cost(5.70059718737 + 33561.54466643220 * x);
	B0 += 0.00000000067 * Utils.cost(0.16600936321 + 22743.40937951640 * x);
	B0 += 0.00000000065 * Utils.cost(4.65423392949 + 2807.39834325620 * x);
	B0 += 0.00000000069 * Utils.cost(3.34387224268 + 11670.28403729680 * x);
	B0 += 0.00000000087 * Utils.cost(4.97838021880 + 1118.75579210280 * x);
	B0 += 0.00000000063 * Utils.cost(0.18907106180 + 30065.51184029820 * x);
	B0 += 0.00000000064 * Utils.cost(4.61909647015 + 9886.77220006400 * x);
	B0 += 0.00000000073 * Utils.cost(0.93706647938 + 20735.83216142559 * x);
	B0 += 0.00000000060 * Utils.cost(5.83757395809 + 8646.06348025360 * x);
	B0 += 0.00000000062 * Utils.cost(4.81389895867 + 20199.09495963300 * x);
	B0 += 0.00000000059 * Utils.cost(5.00150762621 + 6414.61781167780 * x);
	B0 += 0.00000000068 * Utils.cost(3.84252763135 + 6571.01853218020 * x);
	B0 += 0.00000000062 * Utils.cost(2.81689634717 + 6944.30877677240 * x);
	B0 += 0.00000000065 * Utils.cost(4.49078808776 + 632.78373931320 * x);
	B0 += 0.00000000058 * Utils.cost(5.64889513615 + 9945.57120882380 * x);
	B0 += 0.00000000070 * Utils.cost(2.51605694403 + 9638.94074787620 * x);
	B0 += 0.00000000057 * Utils.cost(3.28105791201 + 206.18554843720 * x);
	B0 += 0.00000000057 * Utils.cost(2.97448265957 + 21795.21409161479 * x);
	B0 += 0.00000000056 * Utils.cost(2.23565630779 + 20995.39296644940 * x);
	B0 += 0.00000000057 * Utils.cost(1.88614831237 + 18451.07854656599 * x);
	B0 += 0.00000000071 * Utils.cost(4.82445647307 + 8542.97070603500 * x);
	B0 += 0.00000000061 * Utils.cost(3.65945073900 + 14421.83163698840 * x);
	B0 += 0.00000000056 * Utils.cost(3.13789031275 + 8799.98871377800 * x);
	B0 += 0.00000000057 * Utils.cost(4.89927831599 + 9602.35263622420 * x);
	B0 += 0.00000000065 * Utils.cost(3.37109873211 + 11610.91017538320 * x);
	B0 += 0.00000000067 * Utils.cost(1.92945007459 + 21265.52312652020 * x);
	B0 += 0.00000000055 * Utils.cost(1.95164531764 + 9588.12554222260 * x);
	B0 += 0.00000000057 * Utils.cost(2.82240075154 + 10124.93005431800 * x);
	B0 += 0.00000000057 * Utils.cost(6.10407356832 + 19800.94595622480 * x);
	B0 += 0.00000000055 * Utils.cost(5.20976473824 + 3237.51965248120 * x);
	B0 += 0.00000000057 * Utils.cost(4.12235760406 + 10028.95082710020 * x);
	B0 += 0.00000000055 * Utils.cost(1.41700952855 + 15906.76412668260 * x);
	B0 += 0.00000000053 * Utils.cost(2.16328741039 + 6418.14093002680 * x);
	B0 += 0.00000000060 * Utils.cost(2.64683840328 + 10018.24685144760 * x);
	B0 += 0.00000000068 * Utils.cost(5.36539876845 + 1228.96211332220 * x);
	B0 += 0.00000000051 * Utils.cost(5.73824213507 + 6048.44111408640 * x);
	B0 += 0.00000000053 * Utils.cost(0.31937174553 + 12721.57209941700 * x);
	B0 += 0.00000000051 * Utils.cost(0.06312524105 + 20206.14119633100 * x);
	B0 += 0.00000000049 * Utils.cost(4.53401402385 + 6675.70192909220 * x);
	B0 += 0.00000000051 * Utils.cost(1.15475560534 + 10156.90236013480 * x);
	B0 += 0.00000000064 * Utils.cost(4.56332268770 + 16703.07938715119 * x);
	B0 += 0.00000000060 * Utils.cost(3.61007443614 + 9468.26787725700 * x);
	B0 += 0.00000000059 * Utils.cost(3.08413561767 + 10025.42770875120 * x);
	B0 += 0.00000000064 * Utils.cost(2.53229538141 + 16703.04487984680 * x);
	B0 += 0.00000000056 * Utils.cost(3.31988072467 + 6518.75821726740 * x);
	B0 += 0.00000000047 * Utils.cost(1.44559165677 + 6643.09181776180 * x);
	B0 += 0.00000000050 * Utils.cost(1.92342238827 + 11614.43329373220 * x);
	B0 += 0.00000000047 * Utils.cost(4.03794177027 + 23958.63178523340 * x);
	B0 += 0.00000000046 * Utils.cost(3.70927352724 + 8859.36257569160 * x);
	B0 += 0.00000000060 * Utils.cost(2.55506470511 + 11780.49035851620 * x);
	B0 += 0.00000000047 * Utils.cost(1.69256878711 + 6660.86953400080 * x);
	B0 += 0.00000000044 * Utils.cost(6.09481217162 + 6460.81221096080 * x);
	B0 += 0.00000000044 * Utils.cost(2.63040622140 + 13936.79450513400 * x);
	B0 += 0.00000000053 * Utils.cost(0.77878945764 + 16865.52876963120 * x);
	B0 += 0.00000000049 * Utils.cost(1.83368544550 + 17654.78053974960 * x);
	B0 += 0.00000000048 * Utils.cost(0.52828042378 + 6686.74777770700 * x);
	B0 += 0.00000000042 * Utils.cost(4.30347553493 + 9065.54812412880 * x);
	B0 += 0.00000000042 * Utils.cost(5.71964550673 + 7203.80227149340 * x);
	B0 += 0.00000000041 * Utils.cost(0.98427208931 + 20426.57109242200 * x);
	B0 += 0.00000000051 * Utils.cost(3.54335413699 + 20597.24396304120 * x);
	B0 += 0.00000000041 * Utils.cost(0.21219617682 + 7314.00859271280 * x);
	B0 += 0.00000000038 * Utils.cost(2.53074981011 + 13207.02930736500 * x);
	B0 += 0.00000000039 * Utils.cost(5.15577369902 + 6670.58818804980 * x);
	B0 += 0.00000000051 * Utils.cost(3.25271478667 + 7799.98064550240 * x);
	B0 += 0.00000000049 * Utils.cost(0.77060706107 + 17101.21113690720 * x);
	B0 += 0.00000000038 * Utils.cost(6.06684699984 + 9389.05354078620 * x);
	B0 += 0.00000000043 * Utils.cost(0.51983815091 + 16489.76303806100 * x);
	B0 += 0.00000000036 * Utils.cost(0.84102576439 + 23937.85638974100 * x);

	let B1 = 0;
	B1 += 0.00350068845 * Utils.cost(5.36847836211 + 3340.61242669980 * x);
	B1 -= 0.00014116030;
	B1 += 0.00009670755 * Utils.cost(5.47877786506 + 6681.22485339960 * x);
	B1 += 0.00001471918 * Utils.cost(3.20205766795 + 10021.83728009940 * x);
	B1 += 0.00000425864 * Utils.cost(3.40843812875 + 13362.44970679920 * x);
	B1 += 0.00000102039 * Utils.cost(0.77617286189 + 3337.08930835080 * x);
	B1 += 0.00000078848 * Utils.cost(3.71768293865 + 16703.06213349900 * x);
	B1 += 0.00000026171 * Utils.cost(2.48293558065 + 2281.23049651060 * x);
	B1 += 0.00000032708 * Utils.cost(3.45803723682 + 5621.84292321040 * x);
	B1 += 0.00000020712 * Utils.cost(1.44120802297 + 6151.53388830500 * x);
	B1 += 0.00000018294 * Utils.cost(6.03102943125 + 529.69096509460 * x);
	B1 += 0.00000015680 * Utils.cost(3.93075566599 + 8962.45534991020 * x);
	B1 += 0.00000016975 * Utils.cost(4.81115186866 + 3344.13554504880 * x);
	B1 += 0.00000013067 * Utils.cost(0.97324736181 + 6677.70173505060 * x);
	B1 += 0.00000015622 * Utils.cost(2.78241383265 + 3340.59517304760 * x);
	B1 += 0.00000015622 * Utils.cost(4.81318636318 + 3340.62968035200 * x);
	B1 += 0.00000013771 * Utils.cost(1.67983063909 + 3532.06069281140 * x);
	B1 += 0.00000012711 * Utils.cost(4.04546734935 + 20043.67456019880 * x);
	B1 += 0.00000014268 * Utils.cost(0.24640247719 + 2942.46342329160 * x);
	B1 += 0.00000012493 * Utils.cost(2.25620513522 + 5884.92684658320 * x);
	B1 += 0.00000008800 * Utils.cost(0.34079528233 + 398.14900340820 * x);
	B1 += 0.00000008637 * Utils.cost(1.75213704409 + 2544.31441988340 * x);
	B1 += 0.00000008903 * Utils.cost(5.95437916504 + 2810.92146160520 * x);
	B1 += 0.00000008102 * Utils.cost(0.84279830287 + 6283.07584999140 * x);
	B1 += 0.00000009250 * Utils.cost(4.35071778619 + 3496.03282613400 * x);
	B1 += 0.00000008085 * Utils.cost(4.29614034209 + 6684.74797174860 * x);
	B1 += 0.00000005811 * Utils.cost(3.55479498415 + 5092.15195811580 * x);
	B1 += 0.00000005864 * Utils.cost(3.69652093329 + 5486.77784317500 * x);
	B1 += 0.00000005618 * Utils.cost(0.03475872145 + 3185.19202726560 * x);
	B1 += 0.00000005148 * Utils.cost(0.85886443528 + 3340.54511639700 * x);
	B1 += 0.00000005145 * Utils.cost(0.45169791514 + 3340.67973700260 * x);
	B1 += 0.00000004898 * Utils.cost(4.12922007874 + 1059.38193018920 * x);
	B1 += 0.00000003471 * Utils.cost(5.07253485267 + 5088.62883976680 * x);
	B1 += 0.00000003102 * Utils.cost(3.11487063736 + 3339.63210563160 * x);
	B1 += 0.00000003013 * Utils.cost(1.00910437496 + 2914.01423582380 * x);
	B1 += 0.00000003171 * Utils.cost(1.24730004776 + 3738.76143010800 * x);
	B1 += 0.00000003194 * Utils.cost(2.86899092087 + 1751.53953141600 * x);
	B1 += 0.00000002304 * Utils.cost(1.38460565999 + 3870.30339179440 * x);
	B1 += 0.00000002233 * Utils.cost(2.91238180064 + 3894.18182954220 * x);
	B1 += 0.00000002792 * Utils.cost(4.27117916474 + 8432.76438481560 * x);
	B1 += 0.00000002431 * Utils.cost(0.14615904873 + 4690.47983635860 * x);
	B1 += 0.00000002577 * Utils.cost(2.78651098185 + 6254.62666252360 * x);
	B1 += 0.00000001996 * Utils.cost(1.51200589223 + 4292.33083295040 * x);
	B1 += 0.00000001860 * Utils.cost(5.15222219319 + 796.29800681640 * x);
	B1 += 0.00000002014 * Utils.cost(5.48528849094 + 3127.31333126180 * x);
	B1 += 0.00000001922 * Utils.cost(4.37668623732 + 23384.28698689860 * x);
	B1 += 0.00000002248 * Utils.cost(4.46756441051 + 10025.36039844840 * x);
	B1 += 0.00000001782 * Utils.cost(2.70229954651 + 4136.91043351620 * x);
	B1 += 0.00000001621 * Utils.cost(2.26742355334 + 3149.16416058820 * x);
	B1 += 0.00000001452 * Utils.cost(1.53948251192 + 9492.14631500480 * x);
	B1 += 0.00000001373 * Utils.cost(3.20232312108 + 2146.16541647520 * x);
	B1 += 0.00000001332 * Utils.cost(5.67966837010 + 1592.59601363280 * x);
	B1 += 0.00000001378 * Utils.cost(4.12087865376 + 3723.50895892300 * x);
	B1 += 0.00000001215 * Utils.cost(0.33914405698 + 6674.11130639880 * x);
	B1 += 0.00000001168 * Utils.cost(3.52407129935 + 11773.37681151540 * x);
	B1 += 0.00000001179 * Utils.cost(6.15475441355 + 213.29909543800 * x);
	B1 += 0.00000001173 * Utils.cost(1.26036608440 + 3341.59274776800 * x);
	B1 += 0.00000001211 * Utils.cost(0.97241747335 + 6467.92575796160 * x);
	B1 += 0.00000001204 * Utils.cost(0.95200561837 + 10018.31416175040 * x);
	B1 += 0.00000001107 * Utils.cost(1.44142157852 + 2787.04302385740 * x);
	B1 += 0.00000001194 * Utils.cost(0.84501638145 + 1194.44701022460 * x);
	B1 += 0.00000001043 * Utils.cost(3.98123209815 + 12303.06777661000 * x);
	B1 += 0.00000001029 * Utils.cost(1.21951732572 + 4535.05943692440 * x);
	B1 += 0.00000000939 * Utils.cost(2.99716248257 + 7477.52286021600 * x);
	B1 += 0.00000001303 * Utils.cost(1.12409937702 + 4399.99435688900 * x);
	B1 += 0.00000001032 * Utils.cost(4.26592917807 + 1990.74501704100 * x);
	B1 += 0.00000001230 * Utils.cost(0.37904885593 + 6525.80445396540 * x);
	B1 += 0.00000000989 * Utils.cost(2.37220445455 + 9225.53927328300 * x);
	B1 += 0.00000000946 * Utils.cost(3.14940196742 + 6489.77658728800 * x);
	B1 += 0.00000001013 * Utils.cost(5.90131661122 + 3097.88382272579 * x);
	B1 += 0.00000000913 * Utils.cost(2.86098924372 + 2388.89402044920 * x);
	B1 += 0.00000000954 * Utils.cost(4.90448639106 + 3583.34103067380 * x);
	B1 += 0.00000000866 * Utils.cost(4.92421595837 + 6681.24210705180 * x);
	B1 += 0.00000000797 * Utils.cost(4.53307543814 + 7079.37385680780 * x);
	B1 += 0.00000000866 * Utils.cost(2.89344915945 + 6681.20759974740 * x);
	B1 += 0.00000000659 * Utils.cost(0.33901474348 + 2957.71589447660 * x);
	B1 += 0.00000000670 * Utils.cost(3.23650405278 + 9595.23908922340 * x);
	B1 += 0.00000000782 * Utils.cost(1.56739177814 + 3333.49887969900 * x);
	B1 += 0.00000000641 * Utils.cost(4.46918721250 + 6836.64525283380 * x);
	B1 += 0.00000000611 * Utils.cost(3.97393774087 + 6041.32756708560 * x);
	B1 += 0.00000000738 * Utils.cost(3.78715624780 + 4562.46099302120 * x);
	B1 += 0.00000000558 * Utils.cost(2.92718433901 + 1589.07289528380 * x);
	B1 += 0.00000000513 * Utils.cost(0.96852780537 + 9623.68827669120 * x);
	B1 += 0.00000000508 * Utils.cost(4.07262127921 + 7.11354700080 * x);
	B1 += 0.00000000512 * Utils.cost(1.53960708348 + 7740.60678358880 * x);
	B1 += 0.00000000481 * Utils.cost(3.51023225206 + 155.42039943420 * x);
	B1 += 0.00000000528 * Utils.cost(6.06190721770 + 4933.20844033260 * x);
	B1 += 0.00000000558 * Utils.cost(2.09491968451 + 2288.34404351140 * x);
	B1 += 0.00000000445 * Utils.cost(3.42439886280 + 6680.24453233140 * x);
	B1 += 0.00000000482 * Utils.cost(4.73460866232 + 13365.97282514820 * x);
	B1 += 0.00000000534 * Utils.cost(4.88536251621 + 3361.38782219220 * x);
	B1 += 0.00000000520 * Utils.cost(6.19100285186 + 6438.49624942560 * x);
	B1 += 0.00000000441 * Utils.cost(1.82408206251 + 3325.35995551480 * x);
	B1 += 0.00000000487 * Utils.cost(2.72879191049 + 3319.83703120740 * x);
	B1 += 0.00000000417 * Utils.cost(4.48716253276 + 7903.07341972100 * x);
	B1 += 0.00000000430 * Utils.cost(0.62845892205 + 5614.72937620960 * x);
	B1 += 0.00000000395 * Utils.cost(4.89021898045 + 10419.98628350760 * x);
	B1 += 0.00000000380 * Utils.cost(1.91138845097 + 3553.91152213780 * x);
	B1 += 0.00000000358 * Utils.cost(4.21584518245 + 426.59819087600 * x);
	B1 += 0.00000000409 * Utils.cost(4.53421956625 + 3360.96774609859 * x);
	B1 += 0.00000000426 * Utils.cost(5.47172830908 + 3205.54734666440 * x);
	B1 += 0.00000000330 * Utils.cost(1.00078638665 + 8955.34180290940 * x);
	B1 += 0.00000000322 * Utils.cost(2.42607399606 + 2274.11694950980 * x);
	B1 += 0.00000000316 * Utils.cost(3.22064089430 + 1221.84856632140 * x);
	B1 += 0.00000000312 * Utils.cost(3.66073476074 + 3337.02199804800 * x);
	B1 += 0.00000000310 * Utils.cost(4.09100416919 + 3344.20285535160 * x);
	B1 += 0.00000000295 * Utils.cost(2.87635162282 + 7210.91581849420 * x);
	B1 += 0.00000000329 * Utils.cost(5.64440592793 + 12832.75874170460 * x);
	B1 += 0.00000000306 * Utils.cost(1.52567836482 + 7875.67186362420 * x);
	B1 += 0.00000000284 * Utils.cost(0.56373187712 + 6681.29216370240 * x);
	B1 += 0.00000000358 * Utils.cost(4.21258737082 + 1052.26838318840 * x);
	B1 += 0.00000000347 * Utils.cost(1.52200237477 + 10213.28554621100 * x);
	B1 += 0.00000000268 * Utils.cost(3.57749600251 + 9830.38901398780 * x);
	B1 += 0.00000000346 * Utils.cost(1.65247014273 + 6682.20517446780 * x);
	B1 += 0.00000000269 * Utils.cost(4.45182417080 + 9381.93999378540 * x);
	B1 += 0.00000000285 * Utils.cost(0.97118840317 + 6681.15754309680 * x);
	B1 += 0.00000000256 * Utils.cost(3.67744143301 + 1066.49547719000 * x);
	B1 += 0.00000000269 * Utils.cost(1.78448639785 + 6127.65545055720 * x);
	B1 += 0.00000000312 * Utils.cost(4.63751658715 + 5331.35744374080 * x);
	B1 += 0.00000000317 * Utils.cost(6.15274242841 + 3320.25710730100 * x);
	B1 += 0.00000000245 * Utils.cost(4.71030710599 + 26724.89941359840 * x);
	B1 += 0.00000000249 * Utils.cost(3.31328995337 + 10818.13528691580 * x);
	B1 += 0.00000000240 * Utils.cost(4.87364672707 + 6144.42034130420 * x);
	B1 += 0.00000000239 * Utils.cost(1.35709001659 + 7064.12138562280 * x);
	B1 += 0.00000000237 * Utils.cost(3.19837233399 + 5729.50644714900 * x);
	B1 += 0.00000000278 * Utils.cost(1.50842060340 + 4929.68532198360 * x);
	B1 += 0.00000000274 * Utils.cost(3.61160906396 + 191.44826611160 * x);
	B1 += 0.00000000248 * Utils.cost(3.93789974497 + 11243.68584642080 * x);
	B1 += 0.00000000242 * Utils.cost(2.57630671866 + 3355.86489788480 * x);
	B1 += 0.00000000241 * Utils.cost(1.89683861728 + 15643.68020330980 * x);
	B1 += 0.00000000228 * Utils.cost(0.71217112323 + 9866.41688066520 * x);
	B1 += 0.00000000246 * Utils.cost(0.16913226579 + 2700.71514038580 * x);
	B1 += 0.00000000219 * Utils.cost(0.03864812268 + 522.57741809380 * x);
	B1 += 0.00000000215 * Utils.cost(3.44260776071 + 8827.39026987480 * x);
	B1 += 0.00000000206 * Utils.cost(5.23615052385 + 6923.95345737360 * x);
	B1 += 0.00000000202 * Utils.cost(0.60277862639 + 10021.82002644720 * x);
	B1 += 0.00000000226 * Utils.cost(2.43332503270 + 8429.24126646660 * x);
	B1 += 0.00000000202 * Utils.cost(2.63373646725 + 10021.85453375160 * x);
	B1 += 0.00000000199 * Utils.cost(3.26545613445 + 382.89653222320 * x);
	B1 += 0.00000000198 * Utils.cost(4.50685315424 + 242.72860397400 * x);
	B1 += 0.00000000215 * Utils.cost(2.12744795327 + 553.56940284240 * x);
	B1 += 0.00000000177 * Utils.cost(3.92599588022 + 8031.09226305840 * x);
	B1 += 0.00000000162 * Utils.cost(3.94498519498 + 2921.12778282460 * x);
	B1 += 0.00000000199 * Utils.cost(4.22948972595 + 3312.16323923200 * x);
	B1 += 0.00000000188 * Utils.cost(0.67072289565 + 6298.32832117640 * x);
	B1 += 0.00000000160 * Utils.cost(2.90951395323 + 6872.67311951120 * x);
	B1 += 0.00000000155 * Utils.cost(1.24529852403 + 3364.49086444760 * x);
	B1 += 0.00000000186 * Utils.cost(2.44723831367 + 3503.07906283200 * x);
	B1 += 0.00000000139 * Utils.cost(5.75493557040 + 7632.94325965020 * x);
	B1 += 0.00000000149 * Utils.cost(0.49665393273 + 8969.56889691100 * x);
	B1 += 0.00000000132 * Utils.cost(4.97828413367 + 1748.01641306700 * x);
	B1 += 0.00000000130 * Utils.cost(0.66881298338 + 10014.72373309860 * x);
	B1 += 0.00000000128 * Utils.cost(2.80753554051 + 14584.29827312060 * x);
	B1 += 0.00000000176 * Utils.cost(2.37291314099 + 2118.76386037840 * x);
	B1 += 0.00000000127 * Utils.cost(1.76223414864 + 11081.21921028860 * x);
	B1 += 0.00000000127 * Utils.cost(0.26234206855 + 13358.92658845020 * x);
	B1 += 0.00000000163 * Utils.cost(5.83356697025 + 639.89728631400 * x);
	B1 += 0.00000000129 * Utils.cost(2.02607662846 + 3346.13535100720 * x);
	B1 += 0.00000000155 * Utils.cost(1.57189307640 + 3767.21061757580 * x);
	B1 += 0.00000000133 * Utils.cost(4.20989922795 + 11371.70468975820 * x);
	B1 += 0.00000000114 * Utils.cost(2.12636383988 + 6688.33840040040 * x);
	B1 += 0.00000000130 * Utils.cost(1.33114943655 + 3347.72597370060 * x);
	B1 += 0.00000000110 * Utils.cost(5.78893316282 + 16173.37116840440 * x);
	B1 += 0.00000000105 * Utils.cost(3.27202438053 + 15113.98923821520 * x);
	B1 += 0.00000000117 * Utils.cost(5.66812806862 + 536.80451209540 * x);
	B1 += 0.00000000106 * Utils.cost(1.21268139587 + 7234.79425624200 * x);
	B1 += 0.00000000108 * Utils.cost(0.94652521237 + 9808.53818466140 * x);
	B1 += 0.00000000121 * Utils.cost(4.22204758443 + 6158.64743530580 * x);
	B1 += 0.00000000124 * Utils.cost(4.92495255567 + 12964.30070339100 * x);
	B1 += 0.00000000142 * Utils.cost(3.85764234922 + 6894.52394883760 * x);
	B1 += 0.00000000099 * Utils.cost(5.62543167000 + 10973.55568635000 * x);
	B1 += 0.00000000100 * Utils.cost(2.56456804207 + 3178.14579056760 * x);
	B1 += 0.00000000131 * Utils.cost(0.08971075365 + 8273.82086703240 * x);
	B1 += 0.00000000112 * Utils.cost(3.14240135508 + 3316.73398895200 * x);
	B1 += 0.00000000095 * Utils.cost(0.64723185059 + 2487.41604494780 * x);
	B1 += 0.00000000087 * Utils.cost(4.14322802003 + 3603.69635007260 * x);
	B1 += 0.00000000087 * Utils.cost(3.50260474148 + 3077.52850332700 * x);
	B1 += 0.00000000096 * Utils.cost(5.13010621713 + 3304.58456002240 * x);
	B1 += 0.00000000082 * Utils.cost(4.87880877413 + 5828.02847164760 * x);
	B1 += 0.00000000083 * Utils.cost(2.04400907684 + 18984.29263000960 * x);
	B1 += 0.00000000085 * Utils.cost(3.33671991814 + 1758.65307841680 * x);
	B1 += 0.00000000099 * Utils.cost(3.28955694324 + 17654.78053974960 * x);
	B1 += 0.00000000078 * Utils.cost(0.89238228021 + 2699.73481931760 * x);
	B1 += 0.00000000095 * Utils.cost(0.32948273562 + 3863.18984479360 * x);
	B1 += 0.00000000083 * Utils.cost(0.80327899268 + 5085.03841111500 * x);
	B1 += 0.00000000091 * Utils.cost(1.48623539837 + 8270.29774868340 * x);
	B1 += 0.00000000075 * Utils.cost(4.91191036053 + 10021.76996979660 * x);
	B1 += 0.00000000079 * Utils.cost(4.25171159471 + 7373.38245462640 * x);
	B1 += 0.00000000084 * Utils.cost(2.16662156833 + 12566.15169998280 * x);
	B1 += 0.00000000088 * Utils.cost(2.78893554858 + 11769.85369316640 * x);
	B1 += 0.00000000095 * Utils.cost(0.29428946155 + 5628.95647021120 * x);
	B1 += 0.00000000076 * Utils.cost(5.23354729169 + 13760.59871020740 * x);
	B1 += 0.00000000092 * Utils.cost(1.40883592065 + 3336.73109134180 * x);
	B1 += 0.00000000069 * Utils.cost(3.50477916910 + 10713.99488132620 * x);
	B1 += 0.00000000079 * Utils.cost(0.61833410504 + 951.71840625060 * x);
	B1 += 0.00000000070 * Utils.cost(1.93458925881 + 3475.67750673520 * x);
	B1 += 0.00000000066 * Utils.cost(5.01996258363 + 16706.58525184800 * x);
	B1 += 0.00000000067 * Utils.cost(3.68731475523 + 4032.77002792660 * x);
	B1 += 0.00000000071 * Utils.cost(1.71691035008 + 10575.40668294180 * x);
	B1 += 0.00000000086 * Utils.cost(1.82073461894 + 10404.73381232260 * x);
	B1 += 0.00000000064 * Utils.cost(2.43149744819 + 2648.45482547300 * x);
	B1 += 0.00000000062 * Utils.cost(0.25250107112 + 3980.50971301380 * x);
	B1 += 0.00000000062 * Utils.cost(3.16420520010 + 13517.87010623340 * x);
	B1 += 0.00000000078 * Utils.cost(1.41762772678 + 3.52311834900 * x);
	B1 += 0.00000000086 * Utils.cost(3.34935714534 + 1581.95934828300 * x);
	B1 += 0.00000000064 * Utils.cost(3.75812808116 + 1596.18644228460 * x);
	B1 += 0.00000000061 * Utils.cost(1.37421861116 + 419.48464387520 * x);
	B1 += 0.00000000055 * Utils.cost(1.11154560464 + 433.71173787680 * x);
	B1 += 0.00000000061 * Utils.cost(5.33515994167 + 853.19638175200 * x);
	B1 += 0.00000000059 * Utils.cost(0.80382380790 + 13362.43245314700 * x);
	B1 += 0.00000000055 * Utils.cost(0.37478855406 + 149.56319713460 * x);
	B1 += 0.00000000053 * Utils.cost(0.55329112916 + 14314.16811304980 * x);
	B1 += 0.00000000059 * Utils.cost(0.07234691744 + 6531.66165626500 * x);
	B1 += 0.00000000059 * Utils.cost(2.83458587563 + 13362.46696045140 * x);
	B1 += 0.00000000059 * Utils.cost(4.13409540555 + 4407.10790388980 * x);
	B1 += 0.00000000057 * Utils.cost(5.57913927474 + 3376.64029337720 * x);
	B1 += 0.00000000049 * Utils.cost(4.58036235824 + 10551.52824519400 * x);
	B1 += 0.00000000050 * Utils.cost(2.01769015785 + 10022.81760116760 * x);
	B1 += 0.00000000055 * Utils.cost(1.36081433917 + 21393.54196985760 * x);
	B1 += 0.00000000048 * Utils.cost(1.59939595487 + 18052.92954315780 * x);
	B1 += 0.00000000045 * Utils.cost(4.97928157994 + 8671.96987044060 * x);
	B1 += 0.00000000044 * Utils.cost(2.58542985685 + 13916.01910964160 * x);
	B1 += 0.00000000047 * Utils.cost(1.40206686464 + 8425.65083781480 * x);
	B1 += 0.00000000043 * Utils.cost(0.21864618144 + 9779.10867612540 * x);
	B1 += 0.00000000042 * Utils.cost(6.22365857047 + 3914.95722503460 * x);
	B1 += 0.00000000048 * Utils.cost(3.44104044998 + 692.15760122680 * x);
	B1 += 0.00000000043 * Utils.cost(3.21191030055 + 6247.51311552280 * x);
	B1 += 0.00000000055 * Utils.cost(4.01321481700 + 10177.25767953360 * x);
	B1 += 0.00000000053 * Utils.cost(2.93285711320 + 3981.49003408200 * x);
	B1 += 0.00000000039 * Utils.cost(5.54634215618 + 6702.00024889200 * x);
	B1 += 0.00000000041 * Utils.cost(2.46188112193 + 6660.44945790720 * x);
	B1 += 0.00000000049 * Utils.cost(3.04236065330 + 640.87760738220 * x);
	B1 += 0.00000000039 * Utils.cost(1.62689158397 + 3335.08950239240 * x);
	B1 += 0.00000000038 * Utils.cost(3.31198341709 + 1744.42598441520 * x);
	B1 += 0.00000000038 * Utils.cost(6.16317067723 + 2818.03500860600 * x);
	B1 += 0.00000000038 * Utils.cost(4.03534957207 + 103.09277421860 * x);
	B1 += 0.00000000044 * Utils.cost(0.91040525278 + 5459.37628707820 * x);
	B1 += 0.00000000049 * Utils.cost(1.88325571471 + 11216.28429032400 * x);
	B1 += 0.00000000046 * Utils.cost(5.62762941168 + 9168.64089834740 * x);
	B1 += 0.00000000035 * Utils.cost(1.65976191407 + 12168.00269657460 * x);
	B1 += 0.00000000047 * Utils.cost(4.52334272666 + 10021.90459040220 * x);
	B1 += 0.00000000039 * Utils.cost(2.08367076229 + 13745.34623902240 * x);
	B1 += 0.00000000039 * Utils.cost(4.76186135572 + 20597.24396304120 * x);
	B1 += 0.00000000039 * Utils.cost(3.00951950244 + 3344.49376205780 * x);
	B1 += 0.00000000037 * Utils.cost(1.33065895739 + 12295.95422960920 * x);
	B1 += 0.00000000040 * Utils.cost(3.96893429107 + 13171.00144068760 * x);
	B1 += 0.00000000032 * Utils.cost(0.91212661789 + 12310.18132361080 * x);
	B1 += 0.00000000032 * Utils.cost(2.22618836835 + 7107.82304427560 * x);
	B1 += 0.00000000032 * Utils.cost(4.96078703650 + 24734.15439655740 * x);
	B1 += 0.00000000037 * Utils.cost(3.30085609301 + 20995.39296644940 * x);
	B1 += 0.00000000033 * Utils.cost(3.70858397913 + 10020.85695903120 * x);
	B1 += 0.00000000031 * Utils.cost(4.18674524484 + 17256.63153634140 * x);
	B1 += 0.00000000034 * Utils.cost(3.25657016622 + 14054.60730802600 * x);
	B1 += 0.00000000032 * Utils.cost(5.75360661734 + 6546.15977336420 * x);
	B1 += 0.00000000031 * Utils.cost(3.16209740784 + 12935.85151592320 * x);
	B1 += 0.00000000037 * Utils.cost(2.14901622101 + 6665.97238221460 * x);
	B1 += 0.00000000030 * Utils.cost(0.21926429217 + 6660.86953400080 * x);
	B1 += 0.00000000030 * Utils.cost(3.55459460301 + 9070.11887384880 * x);
	B1 += 0.00000000029 * Utils.cost(2.97927335664 + 2766.26762836500 * x);
	B1 += 0.00000000029 * Utils.cost(4.65051930186 + 10235.13637553740 * x);
	B1 += 0.00000000030 * Utils.cost(5.16882435400 + 16304.91313009080 * x);
	B1 += 0.00000000032 * Utils.cost(5.01760544488 + 3191.04922956520 * x);
	B1 += 0.00000000029 * Utils.cost(2.93988761068 + 6696.47732458460 * x);
	B1 += 0.00000000029 * Utils.cost(5.06447742493 + 5099.26550511660 * x);
	B1 += 0.00000000029 * Utils.cost(5.68073325802 + 3329.97576135000 * x);
	B1 += 0.00000000029 * Utils.cost(0.43949269085 + 3351.24909204960 * x);
	B1 += 0.00000000032 * Utils.cost(1.37056688814 + 6040.34724601740 * x);
	B1 += 0.00000000032 * Utils.cost(1.42334455474 + 76.26607127560 * x);
	B1 += 0.00000000033 * Utils.cost(0.36423446435 + 6604.95878212400 * x);
	B1 += 0.00000000033 * Utils.cost(4.85478789063 + 6701.58017279840 * x);
	B1 += 0.00000000030 * Utils.cost(3.33348460172 + 3369.06161416760 * x);
	B1 += 0.00000000028 * Utils.cost(0.60182098585 + 11766.26326451460 * x);
	B1 += 0.00000000026 * Utils.cost(1.05197848649 + 13207.02930736500 * x);
	B1 += 0.00000000026 * Utils.cost(5.03535225585 + 30065.51184029820 * x);
	B1 += 0.00000000034 * Utils.cost(3.65553061498 + 14158.74771361560 * x);
	B1 += 0.00000000025 * Utils.cost(4.60925601393 + 8329.67161059700 * x);
	B1 += 0.00000000025 * Utils.cost(2.05970140678 + 17395.21973472580 * x);
	B1 += 0.00000000030 * Utils.cost(5.22285260441 + 9485.03276800400 * x);
	B1 += 0.00000000025 * Utils.cost(4.84964369679 + 1648.44675719740 * x);
	B1 += 0.00000000026 * Utils.cost(5.47626814223 + 3074.00538497800 * x);
	B1 += 0.00000000024 * Utils.cost(2.45239543931 + 17085.95866572220 * x);
	B1 += 0.00000000029 * Utils.cost(5.36428737888 + 2707.82868738660 * x);
	B1 += 0.00000000024 * Utils.cost(5.57488544800 + 10264.56588407340 * x);
	B1 += 0.00000000025 * Utils.cost(4.22744782935 + 1692.16566950240 * x);
	B1 += 0.00000000023 * Utils.cost(6.09244870438 + 20199.09495963300 * x);
	B1 += 0.00000000028 * Utils.cost(1.30366587075 + 8439.87793181640 * x);
	B1 += 0.00000000032 * Utils.cost(2.13597148493 + 9468.26787725700 * x);

	let B2 = 0;
	B2 += 0.00016726690 * Utils.cost(0.60221392419 + 3340.61242669980 * x);
	B2 -= 0.00004986799;
	B2 += 0.00000302141 * Utils.cost(5.55871276021 + 6681.22485339960 * x);
	B2 += 0.00000025767 * Utils.cost(1.89662673499 + 13362.44970679920 * x);
	B2 += 0.00000021452 * Utils.cost(0.91749968618 + 10021.83728009940 * x);
	B2 += 0.00000011820 * Utils.cost(2.24240738700 + 3337.08930835080 * x);
	B2 += 0.00000007985 * Utils.cost(2.24892866611 + 16703.06213349900 * x);
	B2 += 0.00000002960 * Utils.cost(5.89425825808 + 3496.03282613400 * x);
	B2 += 0.00000002445 * Utils.cost(5.18770525274 + 5621.84292321040 * x);
	B2 += 0.00000001428 * Utils.cost(1.25238140580 + 2281.23049651060 * x);
	B2 += 0.00000001779 * Utils.cost(2.58759968520 + 20043.67456019880 * x);
	B2 += 0.00000001501 * Utils.cost(3.18533003542 + 3532.06069281140 * x);
	B2 += 0.00000001259 * Utils.cost(4.80695172904 + 3185.19202726560 * x);
	B2 += 0.00000001029 * Utils.cost(2.35029907056 + 6677.70173505060 * x);
	B2 += 0.00000001109 * Utils.cost(3.80982317372 + 5884.92684658320 * x);
	B2 += 0.00000000928 * Utils.cost(0.29719160927 + 3344.13554504880 * x);
	B2 += 0.00000000860 * Utils.cost(3.11698318930 + 6151.53388830500 * x);
	B2 += 0.00000000853 * Utils.cost(1.33003321402 + 529.69096509460 * x);
	B2 += 0.00000000883 * Utils.cost(5.18681316017 + 5486.77784317500 * x);
	B2 += 0.00000001100 * Utils.cost(1.82962075794 + 2942.46342329160 * x);
	B2 += 0.00000000815 * Utils.cost(3.40910567373 + 2544.31441988340 * x);
	B2 += 0.00000000702 * Utils.cost(5.49076132554 + 8962.45534991020 * x);
	B2 += 0.00000000644 * Utils.cost(0.31400306761 + 5088.62883976680 * x);
	B2 += 0.00000000745 * Utils.cost(4.30248377111 + 3340.59517304760 * x);
	B2 += 0.00000000586 * Utils.cost(4.48071459693 + 3894.18182954220 * x);
	B2 += 0.00000000681 * Utils.cost(5.40951261308 + 2810.92146160520 * x);
	B2 += 0.00000000745 * Utils.cost(0.05006463495 + 3340.62968035200 * x);
	B2 += 0.00000000542 * Utils.cost(4.68895461946 + 3339.63210563160 * x);
	B2 += 0.00000000497 * Utils.cost(4.65665197749 + 5092.15195811580 * x);
	B2 += 0.00000000460 * Utils.cost(1.06670343610 + 3097.88382272579 * x);
	B2 += 0.00000000423 * Utils.cost(3.08034568777 + 4292.33083295040 * x);
	B2 += 0.00000000381 * Utils.cost(2.24933115190 + 6283.07584999140 * x);
	B2 += 0.00000000429 * Utils.cost(1.70668733378 + 4690.47983635860 * x);
	B2 += 0.00000000339 * Utils.cost(2.92195933142 + 23384.28698689860 * x);
	B2 += 0.00000000310 * Utils.cost(5.63324402105 + 3723.50895892300 * x);
	B2 += 0.00000000287 * Utils.cost(1.98619629868 + 398.14900340820 * x);
	B2 += 0.00000000298 * Utils.cost(2.58990636818 + 6684.74797174860 * x);
	B2 += 0.00000000323 * Utils.cost(5.15230144390 + 6525.80445396540 * x);
	B2 += 0.00000000247 * Utils.cost(2.36923535528 + 3340.54511639700 * x);
	B2 += 0.00000000247 * Utils.cost(1.96071951597 + 3340.67973700260 * x);
	B2 += 0.00000000223 * Utils.cost(4.75562842441 + 2146.16541647520 * x);
	B2 += 0.00000000240 * Utils.cost(3.53331653789 + 3583.34103067380 * x);
	B2 += 0.00000000238 * Utils.cost(4.69268478666 + 6254.62666252360 * x);
	B2 += 0.00000000198 * Utils.cost(6.21548965568 + 2787.04302385740 * x);
	B2 += 0.00000000202 * Utils.cost(4.25439775032 + 3333.49887969900 * x);
	B2 += 0.00000000158 * Utils.cost(1.89216973387 + 6674.11130639880 * x);
	B2 += 0.00000000185 * Utils.cost(2.99350590687 + 10025.36039844840 * x);
	B2 += 0.00000000177 * Utils.cost(1.41002572971 + 6438.49624942560 * x);
	B2 += 0.00000000138 * Utils.cost(1.23172102079 + 3127.31333126180 * x);
	B2 += 0.00000000153 * Utils.cost(5.93528616595 + 6836.64525283380 * x);
	B2 += 0.00000000106 * Utils.cost(5.35414400998 + 3738.76143010800 * x);
	B2 += 0.00000000102 * Utils.cost(3.67040445208 + 1059.38193018920 * x);
	B2 += 0.00000000136 * Utils.cost(1.06039656714 + 2388.89402044920 * x);
	B2 += 0.00000000093 * Utils.cost(5.04434801864 + 155.42039943420 * x);
	B2 += 0.00000000093 * Utils.cost(2.70817394910 + 8955.34180290940 * x);
	B2 += 0.00000000108 * Utils.cost(6.13917250674 + 1748.01641306700 * x);
	B2 += 0.00000000116 * Utils.cost(5.97739483530 + 2914.01423582380 * x);
	B2 += 0.00000000099 * Utils.cost(1.50221319099 + 1751.53953141600 * x);
	B2 += 0.00000000092 * Utils.cost(2.68470906437 + 1990.74501704100 * x);
	B2 += 0.00000000077 * Utils.cost(4.01966292109 + 1592.59601363280 * x);
	B2 += 0.00000000076 * Utils.cost(4.49660101731 + 4562.46099302120 * x);
	B2 += 0.00000000076 * Utils.cost(5.67354102576 + 6041.32756708560 * x);
	B2 += 0.00000000078 * Utils.cost(0.79220883728 + 2288.34404351140 * x);
	B2 += 0.00000000074 * Utils.cost(5.84795427965 + 3341.59274776800 * x);
	B2 += 0.00000000080 * Utils.cost(5.48556941416 + 8432.76438481560 * x);
	B2 += 0.00000000065 * Utils.cost(2.11705931744 + 10018.31416175040 * x);
	B2 += 0.00000000066 * Utils.cost(5.08073805943 + 2957.71589447660 * x);
	B2 += 0.00000000059 * Utils.cost(3.79695096075 + 6923.95345737360 * x);
	B2 += 0.00000000061 * Utils.cost(4.51116100631 + 4933.20844033260 * x);
	B2 += 0.00000000059 * Utils.cost(0.27765984344 + 6127.65545055720 * x);
	B2 += 0.00000000052 * Utils.cost(5.84885902302 + 4535.05943692440 * x);
	B2 += 0.00000000051 * Utils.cost(1.45495904398 + 7477.52286021600 * x);
	B2 += 0.00000000054 * Utils.cost(1.50278239577 + 6489.77658728800 * x);
	B2 += 0.00000000056 * Utils.cost(5.23212313891 + 9866.41688066520 * x);
	B2 += 0.00000000057 * Utils.cost(4.73711357046 + 2274.11694950980 * x);
	B2 += 0.00000000051 * Utils.cost(2.48654805044 + 6467.92575796160 * x);
	B2 += 0.00000000047 * Utils.cost(3.25899585469 + 26724.89941359840 * x);
	B2 += 0.00000000048 * Utils.cost(1.12255878532 + 1349.86740965880 * x);
	B2 += 0.00000000048 * Utils.cost(2.87122326236 + 242.72860397400 * x);
	B2 += 0.00000000045 * Utils.cost(1.61358524585 + 5729.50644714900 * x);
	B2 += 0.00000000043 * Utils.cost(2.24334731490 + 7.11354700080 * x);
	B2 += 0.00000000044 * Utils.cost(4.61065704096 + 11773.37681151540 * x);
	B2 += 0.00000000042 * Utils.cost(3.32038536161 + 13365.97282514820 * x);
	B2 += 0.00000000047 * Utils.cost(5.10736479739 + 8969.56889691100 * x);
	B2 += 0.00000000044 * Utils.cost(4.64194663616 + 4399.99435688900 * x);
	B2 += 0.00000000039 * Utils.cost(5.45779680648 + 8031.09226305840 * x);
	B2 += 0.00000000044 * Utils.cost(5.21409542420 + 4136.91043351620 * x);
	B2 += 0.00000000045 * Utils.cost(4.26206063790 + 796.29800681640 * x);
	B2 += 0.00000000048 * Utils.cost(3.04342098072 + 5331.35744374080 * x);
	B2 += 0.00000000042 * Utils.cost(2.12882700518 + 213.29909543800 * x);
	B2 += 0.00000000038 * Utils.cost(2.49365585516 + 951.71840625060 * x);
	B2 += 0.00000000037 * Utils.cost(3.44816851943 + 3325.35995551480 * x);
	B2 += 0.00000000038 * Utils.cost(3.13981385980 + 3149.16416058820 * x);
	B2 += 0.00000000039 * Utils.cost(3.64984946180 + 553.56940284240 * x);
	B2 += 0.00000000036 * Utils.cost(0.54858124109 + 7632.94325965020 * x);
	B2 += 0.00000000032 * Utils.cost(4.29985057106 + 3355.86489788480 * x);
	B2 += 0.00000000037 * Utils.cost(6.26349600634 + 6682.20517446780 * x);
	B2 += 0.00000000037 * Utils.cost(3.83188032092 + 3870.30339179440 * x);
	B2 += 0.00000000031 * Utils.cost(4.94959395405 + 6680.24453233140 * x);
	B2 += 0.00000000035 * Utils.cost(6.14813219827 + 3360.96774609859 * x);
	B2 += 0.00000000029 * Utils.cost(0.54115054572 + 6681.29216370240 * x);
	B2 += 0.00000000035 * Utils.cost(1.49899662719 + 3320.25710730100 * x);
	B2 += 0.00000000033 * Utils.cost(0.19183878029 + 3347.72597370060 * x);
	B2 += 0.00000000036 * Utils.cost(3.28055425527 + 1589.07289528380 * x);
	B2 += 0.00000000031 * Utils.cost(5.66015228291 + 1066.49547719000 * x);
	B2 += 0.00000000028 * Utils.cost(4.18178455540 + 7210.91581849420 * x);
	B2 += 0.00000000025 * Utils.cost(1.21627749818 + 9492.14631500480 * x);
	B2 += 0.00000000029 * Utils.cost(2.02283118033 + 7234.79425624200 * x);
	B2 += 0.00000000024 * Utils.cost(2.96777681837 + 7064.12138562280 * x);
	B2 += 0.00000000024 * Utils.cost(2.16823248221 + 10419.98628350760 * x);
	B2 += 0.00000000022 * Utils.cost(4.67496434823 + 1194.44701022460 * x);
	B2 += 0.00000000022 * Utils.cost(5.01797528499 + 9595.23908922340 * x);
	B2 += 0.00000000028 * Utils.cost(4.19843924702 + 8429.24126646660 * x);
	B2 += 0.00000000023 * Utils.cost(6.21195010050 + 7740.60678358880 * x);
	B2 += 0.00000000025 * Utils.cost(1.45100528915 + 6872.67311951120 * x);
	B2 += 0.00000000024 * Utils.cost(1.93342510858 + 2699.73481931760 * x);
	B2 += 0.00000000028 * Utils.cost(5.87009898150 + 1052.26838318840 * x);
	B2 += 0.00000000025 * Utils.cost(2.49707182259 + 2118.76386037840 * x);
	B2 += 0.00000000020 * Utils.cost(0.15682384975 + 3205.54734666440 * x);
	B2 += 0.00000000019 * Utils.cost(3.82087005916 + 12303.06777661000 * x);
	B2 += 0.00000000020 * Utils.cost(6.26534330674 + 7875.67186362420 * x);
	B2 += 0.00000000019 * Utils.cost(0.99282533197 + 522.57741809380 * x);
	B2 += 0.00000000018 * Utils.cost(4.11668144665 + 426.59819087600 * x);
	B2 += 0.00000000020 * Utils.cost(3.28531167827 + 9225.53927328300 * x);
	B2 += 0.00000000019 * Utils.cost(5.72169822815 + 11371.70468975820 * x);
	B2 += 0.00000000018 * Utils.cost(4.76871968197 + 382.89653222320 * x);
	B2 += 0.00000000017 * Utils.cost(0.96519535826 + 191.44826611160 * x);
	B2 += 0.00000000017 * Utils.cost(0.86184324841 + 10973.55568635000 * x);
	B2 += 0.00000000018 * Utils.cost(6.22706341047 + 9381.93999378540 * x);
	B2 += 0.00000000015 * Utils.cost(0.54135050421 + 640.87760738220 * x);

	let B3 = 0;
	B3 += 0.00000606506 * Utils.cost(1.98050633529 + 3340.61242669980 * x);
	B3 += 0.00000042611;
	B3 += 0.00000013652 * Utils.cost(1.79588228800 + 6681.22485339960 * x);
	B3 += 0.00000002730 * Utils.cost(3.45377082121 + 10021.83728009940 * x);
	B3 += 0.00000000929 * Utils.cost(3.75226159072 + 3337.08930835080 * x);
	B3 += 0.00000000607 * Utils.cost(0.10618486408 + 13362.44970679920 * x);
	B3 += 0.00000000617 * Utils.cost(1.14471772765 + 3496.03282613400 * x);
	B3 += 0.00000000479 * Utils.cost(0.70504966293 + 16703.06213349900 * x);
	B3 += 0.00000000185 * Utils.cost(3.28778562029 + 3185.19202726560 * x);
	B3 += 0.00000000169 * Utils.cost(0.29980532608 + 5621.84292321040 * x);
	B3 += 0.00000000158 * Utils.cost(1.09025317222 + 20043.67456019880 * x);
	B3 += 0.00000000123 * Utils.cost(2.55664973413 + 3097.88382272579 * x);
	B3 += 0.00000000126 * Utils.cost(4.74517022983 + 3532.06069281140 * x);
	B3 += 0.00000000093 * Utils.cost(6.03607685759 + 3894.18182954220 * x);
	B3 += 0.00000000099 * Utils.cost(4.92257049901 + 2544.31441988340 * x);
	B3 += 0.00000000106 * Utils.cost(3.41315845439 + 2942.46342329160 * x);
	B3 += 0.00000000062 * Utils.cost(6.25738949900 + 3339.63210563160 * x);
	B3 += 0.00000000058 * Utils.cost(4.64867983361 + 4292.33083295040 * x);
	B3 += 0.00000000050 * Utils.cost(3.75358626972 + 6677.70173505060 * x);
	B3 += 0.00000000050 * Utils.cost(1.89408668049 + 5088.62883976680 * x);
	B3 += 0.00000000058 * Utils.cost(3.65295480755 + 6525.80445396540 * x);
	B3 += 0.00000000045 * Utils.cost(0.38295906298 + 5486.77784317500 * x);
	B3 += 0.00000000052 * Utils.cost(3.25535694335 + 4690.47983635860 * x);
	B3 += 0.00000000044 * Utils.cost(1.89342588822 + 3583.34103067380 * x);
	B3 += 0.00000000037 * Utils.cost(0.04871920725 + 2146.16541647520 * x);
	B3 += 0.00000000039 * Utils.cost(0.91787211117 + 3723.50895892300 * x);
	B3 += 0.00000000051 * Utils.cost(5.24063514394 + 5884.92684658320 * x);
	B3 += 0.00000000036 * Utils.cost(2.79633276263 + 529.69096509460 * x);
	B3 += 0.00000000032 * Utils.cost(1.44641701752 + 23384.28698689860 * x);
	B3 += 0.00000000024 * Utils.cost(5.41362501363 + 3340.59517304760 * x);
	B3 += 0.00000000023 * Utils.cost(4.70639896508 + 2787.04302385740 * x);
	B3 += 0.00000000021 * Utils.cost(1.12581894224 + 3340.62968035200 * x);
	B3 += 0.00000000021 * Utils.cost(0.51744721589 + 8962.45534991020 * x);
	B3 += 0.00000000018 * Utils.cost(0.36433365806 + 155.42039943420 * x);
	B3 += 0.00000000018 * Utils.cost(5.53170427847 + 3333.49887969900 * x);
	B3 += 0.00000000019 * Utils.cost(4.34401282378 + 6151.53388830500 * x);
	B3 += 0.00000000021 * Utils.cost(2.94765501590 + 398.14900340820 * x);
	B3 += 0.00000000020 * Utils.cost(5.96181389299 + 5092.15195811580 * x);
	B3 += 0.00000000017 * Utils.cost(0.80891817293 + 1194.44701022460 * x);
	B3 += 0.00000000011 * Utils.cost(0.43817745316 + 1059.38193018920 * x);
	B3 += 0.00000000014 * Utils.cost(1.06654064248 + 6836.64525283380 * x);

	let B4 = 0;
	B4 += 0.00000011334 * Utils.cost(3.45724352586 + 3340.61242669980 * x);
	B4 += 0.00000013369;
	B4 += 0.00000000744 * Utils.cost(0.50445805257 + 6681.22485339960 * x);
	B4 += 0.00000000148 * Utils.cost(1.05056602649 + 10021.83728009940 * x);
	B4 += 0.00000000102 * Utils.cost(2.66185835593 + 3496.03282613400 * x);
	B4 += 0.00000000053 * Utils.cost(5.27888218929 + 3337.08930835080 * x);
	B4 += 0.00000000022 * Utils.cost(4.09971603267 + 3097.88382272579 * x);
	B4 += 0.00000000023 * Utils.cost(1.72422342130 + 3185.19202726560 * x);
	B4 += 0.00000000013 * Utils.cost(5.41704779112 + 16703.06213349900 * x);
	B4 += 0.00000000013 * Utils.cost(2.06957065662 + 13362.44970679920 * x);
	B4 += 0.00000000010 * Utils.cost(0.95989595600 + 3894.18182954220 * x);

	let B5 = 0;
	B5 += 0.00000000457 * Utils.cost(4.86794125358 + 3340.61242669980 * x);
	B5 += 0.00000000053 * Utils.cost(5.30547050586 + 6681.22485339960 * x);
	B5 += 0.00000000012 * Utils.cost(5.75114070583 + 10021.83728009940 * x);
	B5 += 0.00000000013 * Utils.cost(4.17736925293 + 3496.03282613400 * x);
	B5 += 0.00000000007;

	let x2 = x * x;
	let x3 = x2 * x;
	let x4 = x3 * x;
	let x5 = x4 * x;

	return Math.toDegrees(B0 + B1 * x + B2 * x2 + B3 * x3 + B4 * x4 + B5 * x5);
}

// Distance Mars-Sun [AU]
export function rMars(x) {
	let R0 = 0;
	R0 += 1.53033488276;
	R0 += 0.14184953153 * Utils.cost(3.47971283519 + 3340.61242669980 * x);
	R0 += 0.00660776357 * Utils.cost(3.81783442097 + 6681.22485339960 * x);
	R0 += 0.00046179117 * Utils.cost(4.15595316284 + 10021.83728009940 * x);
	R0 += 0.00008109738 * Utils.cost(5.55958460165 + 2810.92146160520 * x);
	R0 += 0.00007485315 * Utils.cost(1.77238998069 + 5621.84292321040 * x);
	R0 += 0.00005523193 * Utils.cost(1.36436318880 + 2281.23049651060 * x);
	R0 += 0.00003825160 * Utils.cost(4.49407182408 + 13362.44970679920 * x);
	R0 += 0.00002306539 * Utils.cost(0.09081742493 + 2544.31441988340 * x);
	R0 += 0.00001999399 * Utils.cost(5.36059605227 + 3337.08930835080 * x);
	R0 += 0.00002484385 * Utils.cost(4.92545577893 + 2942.46342329160 * x);
	R0 += 0.00001960198 * Utils.cost(4.74249386323 + 3344.13554504880 * x);
	R0 += 0.00001167115 * Utils.cost(2.11261501155 + 5092.15195811580 * x);
	R0 += 0.00001102828 * Utils.cost(5.00908264160 + 398.14900340820 * x);
	R0 += 0.00000899077 * Utils.cost(4.40790433994 + 529.69096509460 * x);
	R0 += 0.00000992252 * Utils.cost(5.83862401067 + 6151.53388830500 * x);
	R0 += 0.00000807348 * Utils.cost(2.10216647104 + 1059.38193018920 * x);
	R0 += 0.00000797910 * Utils.cost(3.44839026172 + 796.29800681640 * x);
	R0 += 0.00000740980 * Utils.cost(1.49906336892 + 2146.16541647520 * x);
	R0 += 0.00000692340 * Utils.cost(2.13378814785 + 8962.45534991020 * x);
	R0 += 0.00000633144 * Utils.cost(0.89353285018 + 3340.59517304760 * x);
	R0 += 0.00000725583 * Utils.cost(1.24516913473 + 8432.76438481560 * x);
	R0 += 0.00000633140 * Utils.cost(2.92430448169 + 3340.62968035200 * x);
	R0 += 0.00000574352 * Utils.cost(0.82896196337 + 2914.01423582380 * x);
	R0 += 0.00000526187 * Utils.cost(5.38292276228 + 3738.76143010800 * x);
	R0 += 0.00000629976 * Utils.cost(1.28738135858 + 1751.53953141600 * x);
	R0 += 0.00000472776 * Utils.cost(5.19850457873 + 3127.31333126180 * x);
	R0 += 0.00000348095 * Utils.cost(4.83219198908 + 16703.06213349900 * x);
	R0 += 0.00000283702 * Utils.cost(2.90692294913 + 3532.06069281140 * x);
	R0 += 0.00000279552 * Utils.cost(5.25749247548 + 6283.07584999140 * x);
	R0 += 0.00000233827 * Utils.cost(5.10546492529 + 5486.77784317500 * x);
	R0 += 0.00000219428 * Utils.cost(5.58340248784 + 191.44826611160 * x);
	R0 += 0.00000269891 * Utils.cost(3.76394728622 + 5884.92684658320 * x);
	R0 += 0.00000208333 * Utils.cost(5.25476080773 + 3340.54511639700 * x);
	R0 += 0.00000275224 * Utils.cost(2.90818883832 + 1748.01641306700 * x);
	R0 += 0.00000275501 * Utils.cost(1.21767967781 + 6254.62666252360 * x);
	R0 += 0.00000239133 * Utils.cost(2.03669896238 + 1194.44701022460 * x);
	R0 += 0.00000223190 * Utils.cost(4.19861593779 + 3149.16416058820 * x);
	R0 += 0.00000182686 * Utils.cost(5.08062683355 + 6684.74797174860 * x);
	R0 += 0.00000186213 * Utils.cost(5.69871555748 + 6677.70173505060 * x);
	R0 += 0.00000175995 * Utils.cost(5.95341786369 + 3870.30339179440 * x);
	R0 += 0.00000178613 * Utils.cost(4.18423025538 + 3333.49887969900 * x);
	R0 += 0.00000208336 * Utils.cost(4.84626442122 + 3340.67973700260 * x);
	R0 += 0.00000228128 * Utils.cost(3.25529020620 + 6872.67311951120 * x);
	R0 += 0.00000144286 * Utils.cost(0.21296012258 + 5088.62883976680 * x);
	R0 += 0.00000163534 * Utils.cost(3.79889068111 + 4136.91043351620 * x);
	R0 += 0.00000133120 * Utils.cost(1.53910106710 + 7903.07341972100 * x);
	R0 += 0.00000141759 * Utils.cost(2.47790321309 + 4562.46099302120 * x);
	R0 += 0.00000114941 * Utils.cost(4.31745088059 + 1349.86740965880 * x);
	R0 += 0.00000118781 * Utils.cost(2.12178071222 + 1589.07289528380 * x);
	R0 += 0.00000102096 * Utils.cost(6.18138550087 + 9492.14631500480 * x);
	R0 += 0.00000128555 * Utils.cost(5.49883294915 + 8827.39026987480 * x);
	R0 += 0.00000111538 * Utils.cost(0.55339169625 + 11243.68584642080 * x);
	R0 += 0.00000082498 * Utils.cost(1.62227044590 + 11773.37681151540 * x);
	R0 += 0.00000083212 * Utils.cost(0.61553380568 + 8429.24126646660 * x);
	R0 += 0.00000084470 * Utils.cost(0.62274593110 + 1592.59601363280 * x);
	R0 += 0.00000086659 * Utils.cost(1.74988330093 + 2700.71514038580 * x);
	R0 += 0.00000071826 * Utils.cost(2.47489899385 + 12303.06777661000 * x);
	R0 += 0.00000085312 * Utils.cost(1.61621097912 + 4690.47983635860 * x);
	R0 += 0.00000063641 * Utils.cost(2.67334126661 + 426.59819087600 * x);
	R0 += 0.00000068599 * Utils.cost(2.40197828418 + 4399.99435688900 * x);
	R0 += 0.00000058559 * Utils.cost(4.72052787516 + 213.29909543800 * x);
	R0 += 0.00000062015 * Utils.cost(1.10065866221 + 1221.84856632140 * x);
	R0 += 0.00000066509 * Utils.cost(2.21307705185 + 6041.32756708560 * x);
	R0 += 0.00000055811 * Utils.cost(1.23288325946 + 3185.19202726560 * x);
	R0 += 0.00000054989 * Utils.cost(5.72691385306 + 951.71840625060 * x);
	R0 += 0.00000052418 * Utils.cost(3.02366828926 + 4292.33083295040 * x);
	R0 += 0.00000055686 * Utils.cost(5.44686699242 + 3723.50895892300 * x);
	R0 += 0.00000058959 * Utils.cost(3.26242666052 + 6681.24210705180 * x);
	R0 += 0.00000044629 * Utils.cost(2.01473640390 + 8031.09226305840 * x);
	R0 += 0.00000058959 * Utils.cost(1.23165502899 + 6681.20759974740 * x);
	R0 += 0.00000042444 * Utils.cost(2.26551590902 + 155.42039943420 * x);
	R0 += 0.00000038956 * Utils.cost(2.57760416009 + 3341.59274776800 * x);
	R0 += 0.00000051561 * Utils.cost(5.72326937712 + 7079.37385680780 * x);
	R0 += 0.00000048939 * Utils.cost(5.61614696751 + 3553.91152213780 * x);
	R0 += 0.00000045414 * Utils.cost(5.43290921705 + 6467.92575796160 * x);
	R0 += 0.00000036435 * Utils.cost(4.43921812388 + 3894.18182954220 * x);
	R0 += 0.00000035980 * Utils.cost(1.15966567007 + 2288.34404351140 * x);
	R0 += 0.00000035265 * Utils.cost(5.49029710802 + 1990.74501704100 * x);
	R0 += 0.00000042191 * Utils.cost(1.63253742760 + 5628.95647021120 * x);
	R0 += 0.00000044292 * Utils.cost(5.00341366850 + 5614.72937620960 * x);
	R0 += 0.00000033623 * Utils.cost(5.17029029766 + 20043.67456019880 * x);
	R0 += 0.00000043256 * Utils.cost(1.03732072925 + 11769.85369316640 * x);
	R0 += 0.00000039237 * Utils.cost(1.24237122859 + 3339.63210563160 * x);
	R0 += 0.00000031943 * Utils.cost(4.59258406791 + 2274.11694950980 * x);
	R0 += 0.00000030345 * Utils.cost(2.44177670130 + 11371.70468975820 * x);
	R0 += 0.00000032259 * Utils.cost(2.38215172582 + 4535.05943692440 * x);
	R0 += 0.00000031870 * Utils.cost(4.37521442752 + 3.52311834900 * x);
	R0 += 0.00000029350 * Utils.cost(4.06034813442 + 3097.88382272579 * x);
	R0 += 0.00000031972 * Utils.cost(1.93970478412 + 382.89653222320 * x);
	R0 += 0.00000026166 * Utils.cost(5.58466944895 + 9623.68827669120 * x);
	R0 += 0.00000027904 * Utils.cost(4.25805969214 + 3191.04922956520 * x);
	R0 += 0.00000033065 * Utils.cost(0.85467740581 + 553.56940284240 * x);
	R0 += 0.00000027543 * Utils.cost(1.57668567401 + 9595.23908922340 * x);
	R0 += 0.00000025159 * Utils.cost(0.81355213242 + 10713.99488132620 * x);
	R0 += 0.00000022070 * Utils.cost(0.85747723964 + 3319.83703120740 * x);
	R0 += 0.00000024772 * Utils.cost(5.38970742761 + 2818.03500860600 * x);
	R0 += 0.00000023359 * Utils.cost(6.01453778225 + 3496.03282613400 * x);
	R0 += 0.00000024732 * Utils.cost(2.58034797703 + 2803.80791460440 * x);
	R0 += 0.00000019365 * Utils.cost(5.18528750472 + 6681.29216370240 * x);
	R0 += 0.00000019122 * Utils.cost(5.41968559451 + 10025.36039844840 * x);
	R0 += 0.00000019364 * Utils.cost(5.59378382138 + 6681.15754309680 * x);
	R0 += 0.00000018330 * Utils.cost(5.79567324240 + 7064.12138562280 * x);
	R0 += 0.00000018193 * Utils.cost(5.61307426173 + 7.11354700080 * x);
	R0 += 0.00000020392 * Utils.cost(4.53637816869 + 6489.77658728800 * x);
	R0 += 0.00000021260 * Utils.cost(6.19160142215 + 14054.60730802600 * x);
	R0 += 0.00000017094 * Utils.cost(1.55004739305 + 2957.71589447660 * x);
	R0 += 0.00000022791 * Utils.cost(3.41709388606 + 7632.94325965020 * x);
	R0 += 0.00000020585 * Utils.cost(2.98697279083 + 3361.38782219220 * x);
	R0 += 0.00000018005 * Utils.cost(2.81431094394 + 4032.77002792660 * x);
	R0 += 0.00000017049 * Utils.cost(6.15528099726 + 10404.73381232260 * x);
	R0 += 0.00000016488 * Utils.cost(3.84534700818 + 10973.55568635000 * x);
	R0 += 0.00000016052 * Utils.cost(0.92823508003 + 14584.29827312060 * x);
	R0 += 0.00000021027 * Utils.cost(2.38474290907 + 4989.05918389720 * x);
	R0 += 0.00000016267 * Utils.cost(1.92321585819 + 7373.38245462640 * x);
	R0 += 0.00000016291 * Utils.cost(6.28233085307 + 7210.91581849420 * x);
	R0 += 0.00000018585 * Utils.cost(4.07325116588 + 2388.89402044920 * x);
	R0 += 0.00000015977 * Utils.cost(4.58368417141 + 3264.34635542420 * x);
	R0 += 0.00000019913 * Utils.cost(2.73518445950 + 5099.26550511660 * x);
	R0 += 0.00000019661 * Utils.cost(1.86285979000 + 3443.70520091840 * x);
	R0 += 0.00000016500 * Utils.cost(4.14061745086 + 7477.52286021600 * x);
	R0 += 0.00000019495 * Utils.cost(6.03778234182 + 10018.31416175040 * x);
	R0 += 0.00000015104 * Utils.cost(2.65433427561 + 2787.04302385740 * x);
	R0 += 0.00000019099 * Utils.cost(0.22623441108 + 13745.34623902240 * x);
	R0 += 0.00000017163 * Utils.cost(3.18825562972 + 3347.72597370060 * x);
	R0 += 0.00000013423 * Utils.cost(2.12818658793 + 3344.20285535160 * x);
	R0 += 0.00000015410 * Utils.cost(2.20773507960 + 2118.76386037840 * x);
	R0 += 0.00000017238 * Utils.cost(3.67067776368 + 3205.54734666440 * x);
	R0 += 0.00000013113 * Utils.cost(4.27490214998 + 14314.16811304980 * x);
	R0 += 0.00000016451 * Utils.cost(2.86641622696 + 14712.31711645800 * x);
	R0 += 0.00000013734 * Utils.cost(1.68629769646 + 3337.02199804800 * x);
	R0 += 0.00000016659 * Utils.cost(4.52130808861 + 6674.11130639880 * x);
	R0 += 0.00000011830 * Utils.cost(0.19684525299 + 3475.67750673520 * x);
	R0 += 0.00000011767 * Utils.cost(3.22897247987 + 5828.02847164760 * x);
	R0 += 0.00000011886 * Utils.cost(4.82057654742 + 7234.79425624200 * x);
	R0 += 0.00000010609 * Utils.cost(1.73997337551 + 639.89728631400 * x);
	R0 += 0.00000011154 * Utils.cost(0.23859830185 + 12832.75874170460 * x);
	R0 += 0.00000011030 * Utils.cost(0.44541706440 + 10213.28554621100 * x);
	R0 += 0.00000010240 * Utils.cost(5.74758340632 + 242.72860397400 * x);
	R0 += 0.00000010051 * Utils.cost(2.45102946726 + 4929.68532198360 * x);
	R0 += 0.00000010061 * Utils.cost(0.78907665448 + 9381.93999378540 * x);
	R0 += 0.00000010065 * Utils.cost(5.37506605762 + 5085.03841111500 * x);
	R0 += 0.00000011902 * Utils.cost(0.79897698904 + 3265.83082813250 * x);
	R0 += 0.00000008990 * Utils.cost(0.96463418322 + 4933.20844033260 * x);
	R0 += 0.00000008970 * Utils.cost(4.18326774405 + 9225.53927328300 * x);
	R0 += 0.00000008982 * Utils.cost(1.98501418026 + 15113.98923821520 * x);
	R0 += 0.00000008324 * Utils.cost(1.93694866513 + 1648.44675719740 * x);
	R0 += 0.00000007833 * Utils.cost(2.04997447879 + 1758.65307841680 * x);
	R0 += 0.00000007957 * Utils.cost(3.92331072722 + 2921.12778282460 * x);
	R0 += 0.00000010224 * Utils.cost(2.66497189021 + 2487.41604494780 * x);
	R0 += 0.00000008277 * Utils.cost(0.94860765546 + 2906.90068882300 * x);
	R0 += 0.00000007371 * Utils.cost(0.84378341481 + 692.15760122680 * x);
	R0 += 0.00000007545 * Utils.cost(5.68031160782 + 13916.01910964160 * x);
	R0 += 0.00000007912 * Utils.cost(2.81294761885 + 15643.68020330980 * x);
	R0 += 0.00000006958 * Utils.cost(3.32193127272 + 3230.40610548040 * x);
	R0 += 0.00000007426 * Utils.cost(6.09656283295 + 3583.34103067380 * x);
	R0 += 0.00000006402 * Utils.cost(4.19806996774 + 5202.35827933520 * x);
	R0 += 0.00000006529 * Utils.cost(6.11929252710 + 135.06508003540 * x);
	R0 += 0.00000006130 * Utils.cost(0.00117252232 + 6836.64525283380 * x);
	R0 += 0.00000006226 * Utils.cost(6.10683955669 + 17256.63153634140 * x);
	R0 += 0.00000008193 * Utils.cost(5.24811458833 + 10575.40668294180 * x);
	R0 += 0.00000006168 * Utils.cost(3.60069207439 + 10021.85453375160 * x);
	R0 += 0.00000006169 * Utils.cost(1.56992114335 + 10021.82002644720 * x);
	R0 += 0.00000005671 * Utils.cost(0.13650306660 + 13524.91634293140 * x);
	R0 += 0.00000006257 * Utils.cost(4.50450768937 + 8425.65083781480 * x);
	R0 += 0.00000005249 * Utils.cost(2.70122358603 + 4459.36821880260 * x);
	R0 += 0.00000006479 * Utils.cost(2.74267498287 + 7740.60678358880 * x);
	R0 += 0.00000005530 * Utils.cost(6.06408145092 + 10419.98628350760 * x);
	R0 += 0.00000005536 * Utils.cost(5.74996063243 + 12168.00269657460 * x);
	R0 += 0.00000006826 * Utils.cost(4.69327545839 + 17654.78053974960 * x);
	R0 += 0.00000005005 * Utils.cost(4.68382632238 + 522.57741809380 * x);
	R0 += 0.00000006328 * Utils.cost(3.31896726895 + 3767.21061757580 * x);
	R0 += 0.00000004734 * Utils.cost(0.00755678425 + 3325.35995551480 * x);
	R0 += 0.00000005032 * Utils.cost(2.33696685608 + 1052.26838318840 * x);
	R0 += 0.00000004661 * Utils.cost(5.15051711401 + 1066.49547719000 * x);
	R0 += 0.00000004724 * Utils.cost(5.77956037309 + 9808.53818466140 * x);
	R0 += 0.00000005136 * Utils.cost(1.57259709878 + 6525.80445396540 * x);
	R0 += 0.00000004522 * Utils.cost(1.44218620352 + 3369.06161416760 * x);
	R0 += 0.00000006189 * Utils.cost(4.58996159356 + 6531.66165626500 * x);
	R0 += 0.00000006205 * Utils.cost(4.48164856516 + 22747.29071487440 * x);
	R0 += 0.00000005329 * Utils.cost(4.55145599182 + 1744.42598441520 * x);
	R0 += 0.00000004511 * Utils.cost(5.94511266539 + 6894.52394883760 * x);
	R0 += 0.00000004330 * Utils.cost(3.10901365758 + 4569.57454002200 * x);
	R0 += 0.00000005366 * Utils.cost(5.08043436437 + 2707.82868738660 * x);
	R0 += 0.00000005134 * Utils.cost(1.28568358496 + 8439.87793181640 * x);
	R0 += 0.00000004127 * Utils.cost(5.48538052912 + 2699.73481931760 * x);
	R0 += 0.00000005394 * Utils.cost(5.21695066244 + 5305.45105355380 * x);
	R0 += 0.00000004449 * Utils.cost(5.56764082611 + 16865.52876963120 * x);
	R0 += 0.00000003898 * Utils.cost(1.48782434790 + 9168.64089834740 * x);
	R0 += 0.00000003863 * Utils.cost(1.23050803930 + 16858.48253293320 * x);
	R0 += 0.00000003766 * Utils.cost(0.27090392616 + 17395.21973472580 * x);
	R0 += 0.00000004683 * Utils.cost(3.05668892586 + 5518.75014899180 * x);
	R0 += 0.00000004258 * Utils.cost(2.79090145790 + 3503.07906283200 * x);
	R0 += 0.00000003864 * Utils.cost(0.37957291785 + 10177.25767953360 * x);
	R0 += 0.00000003992 * Utils.cost(1.84424768030 + 3134.42687826260 * x);
	R0 += 0.00000003643 * Utils.cost(2.95318600206 + 6144.42034130420 * x);
	R0 += 0.00000003654 * Utils.cost(1.58063207414 + 6680.24453233140 * x);
	R0 += 0.00000003931 * Utils.cost(1.98436570971 + 8969.56889691100 * x);
	R0 += 0.00000003350 * Utils.cost(2.72637081667 + 7875.67186362420 * x);
	R0 += 0.00000003623 * Utils.cost(2.91544991631 + 6682.20517446780 * x);
	R0 += 0.00000004392 * Utils.cost(0.81931997702 + 3302.47939106200 * x);
	R0 += 0.00000004062 * Utils.cost(5.46935175827 + 3120.19978426100 * x);
	R0 += 0.00000003319 * Utils.cost(1.77193665786 + 3116.26763099790 * x);
	R0 += 0.00000003510 * Utils.cost(1.18027333874 + 10184.30391623160 * x);
	R0 += 0.00000004008 * Utils.cost(1.33675167812 + 6247.51311552280 * x);
	R0 += 0.00000003603 * Utils.cost(0.15469852619 + 2178.13772229200 * x);
	R0 += 0.00000003313 * Utils.cost(3.12853663982 + 17277.40693183380 * x);
	R0 += 0.00000004138 * Utils.cost(4.39568891039 + 3074.00538497800 * x);
	R0 += 0.00000003201 * Utils.cost(3.36492925275 + 2384.32327072920 * x);
	R0 += 0.00000003991 * Utils.cost(3.82867836910 + 3355.86489788480 * x);
	R0 += 0.00000004205 * Utils.cost(1.90532279170 + 263.08392337280 * x);
	R0 += 0.00000003743 * Utils.cost(4.25458024187 + 6261.74020952440 * x);
	R0 += 0.00000003111 * Utils.cost(1.65445053349 + 20199.09495963300 * x);
	R0 += 0.00000003634 * Utils.cost(5.55063049451 + 632.78373931320 * x);
	R0 += 0.00000002892 * Utils.cost(1.91514920700 + 12935.85151592320 * x);
	R0 += 0.00000003373 * Utils.cost(5.50812408522 + 23384.28698689860 * x);
	R0 += 0.00000003312 * Utils.cost(5.83174680245 + 5331.35744374080 * x);
	R0 += 0.00000003124 * Utils.cost(5.44069658195 + 6048.44111408640 * x);
	R0 += 0.00000003813 * Utils.cost(0.80274487430 + 13517.87010623340 * x);
	R0 += 0.00000003612 * Utils.cost(3.68140265686 + 5724.93569742900 * x);
	R0 += 0.00000002813 * Utils.cost(1.68598843422 + 2391.43681773000 * x);
	R0 += 0.00000002902 * Utils.cost(5.30666239739 + 8955.34180290940 * x);
	R0 += 0.00000003225 * Utils.cost(2.29832592489 + 3312.16323923200 * x);
	R0 += 0.00000003863 * Utils.cost(3.48188264725 + 20618.01935853360 * x);
	R0 += 0.00000002738 * Utils.cost(5.49768261369 + 149.56319713460 * x);
	R0 += 0.00000002809 * Utils.cost(4.76933217397 + 1964.83862685400 * x);
	R0 += 0.00000002711 * Utils.cost(2.69244730345 + 3178.14579056760 * x);
	R0 += 0.00000002711 * Utils.cost(2.38275660721 + 2648.45482547300 * x);
	R0 += 0.00000002743 * Utils.cost(1.09492569851 + 536.80451209540 * x);
	R0 += 0.00000002821 * Utils.cost(5.91845472246 + 12964.30070339100 * x);
	R0 += 0.00000002716 * Utils.cost(6.10377796874 + 3973.39616601300 * x);
	R0 += 0.00000002487 * Utils.cost(3.87703916286 + 1861.74585263540 * x);
	R0 += 0.00000002617 * Utils.cost(2.65526535627 + 8329.67161059700 * x);
	R0 += 0.00000002938 * Utils.cost(5.68402398615 + 6158.64743530580 * x);
	R0 += 0.00000002336 * Utils.cost(3.24847913311 + 4672.66731424060 * x);
	R0 += 0.00000002318 * Utils.cost(1.69214259672 + 3914.95722503460 * x);
	R0 += 0.00000002371 * Utils.cost(4.75067664712 + 103.09277421860 * x);
	R0 += 0.00000002963 * Utils.cost(0.23381699914 + 20597.24396304120 * x);
	R0 += 0.00000002190 * Utils.cost(6.18344448099 + 3346.13535100720 * x);
	R0 += 0.00000002444 * Utils.cost(1.92547995169 + 7799.98064550240 * x);
	R0 += 0.00000002121 * Utils.cost(4.87491216115 + 9830.38901398780 * x);
	R0 += 0.00000002532 * Utils.cost(5.39550087270 + 3863.18984479360 * x);
	R0 += 0.00000002101 * Utils.cost(2.84309138388 + 3415.39402526710 * x);
	R0 += 0.00000002176 * Utils.cost(0.58632570025 + 162.46663613220 * x);
	R0 += 0.00000002106 * Utils.cost(3.06229353931 + 19800.94595622480 * x);
	R0 += 0.00000002347 * Utils.cost(3.90795942709 + 3335.08950239240 * x);
	R0 += 0.00000002031 * Utils.cost(5.52057907797 + 10021.90459040220 * x);
	R0 += 0.00000001997 * Utils.cost(2.77243710569 + 13936.79450513400 * x);
	R0 += 0.00000002139 * Utils.cost(5.40620646615 + 266.60704172180 * x);
	R0 += 0.00000002147 * Utils.cost(0.08966987600 + 13358.92658845020 * x);
	R0 += 0.00000001996 * Utils.cost(2.62541669265 + 20.77539549240 * x);
	R0 += 0.00000001961 * Utils.cost(4.88521794174 + 3237.51965248120 * x);
	R0 += 0.00000002216 * Utils.cost(1.06829128652 + 3320.25710730100 * x);
	R0 += 0.00000002131 * Utils.cost(3.02112533027 + 5625.36604155940 * x);
	R0 += 0.00000002124 * Utils.cost(3.68620121537 + 5618.31980486140 * x);
	R0 += 0.00000001938 * Utils.cost(1.29006691721 + 17924.91069982040 * x);
	R0 += 0.00000002555 * Utils.cost(4.91826220321 + 6604.95878212400 * x);
	R0 += 0.00000002561 * Utils.cost(2.10055088914 + 7910.18696672180 * x);
	R0 += 0.00000001820 * Utils.cost(5.57528712663 + 3351.24909204960 * x);
	R0 += 0.00000001786 * Utils.cost(5.77310414452 + 3607.21946842160 * x);
	R0 += 0.00000001780 * Utils.cost(4.48010071981 + 10818.13528691580 * x);
	R0 += 0.00000002106 * Utils.cost(5.75526661975 + 13365.97282514820 * x);
	R0 += 0.00000001987 * Utils.cost(2.61151965233 + 3546.79797513700 * x);
	R0 += 0.00000001799 * Utils.cost(2.73192475257 + 3360.96774609859 * x);
	R0 += 0.00000001715 * Utils.cost(1.50805385053 + 1692.16566950240 * x);
	R0 += 0.00000001752 * Utils.cost(2.21455466761 + 13119.72110282519 * x);
	R0 += 0.00000001913 * Utils.cost(3.32230688971 + 6702.00024889200 * x);
	R0 += 0.00000001724 * Utils.cost(1.43449979531 + 4885.96640967860 * x);
	R0 += 0.00000002050 * Utils.cost(1.19293239093 + 6660.44945790720 * x);
	R0 += 0.00000001774 * Utils.cost(2.18404386388 + 6784.31762761820 * x);
	R0 += 0.00000001722 * Utils.cost(4.86031154305 + 10014.72373309860 * x);
	R0 += 0.00000001773 * Utils.cost(2.09448668554 + 3603.69635007260 * x);
	R0 += 0.00000001606 * Utils.cost(3.48105136801 + 23141.55838292460 * x);
	R0 += 0.00000001621 * Utils.cost(5.73820120882 + 4555.34744602040 * x);
	R0 += 0.00000001579 * Utils.cost(1.88769198841 + 6298.32832117640 * x);
	R0 += 0.00000001530 * Utils.cost(5.16381564230 + 76.26607127560 * x);
	R0 += 0.00000001615 * Utils.cost(3.24110713658 + 3657.00429635640 * x);
	R0 += 0.00000001576 * Utils.cost(3.52622401575 + 6688.33840040040 * x);
	R0 += 0.00000002034 * Utils.cost(2.63620520451 + 16460.33352952499 * x);
	R0 += 0.00000002025 * Utils.cost(5.92907541624 + 10021.76996979660 * x);
	R0 += 0.00000001689 * Utils.cost(4.41053057494 + 5729.50644714900 * x);
	R0 += 0.00000001878 * Utils.cost(4.53291044847 + 3329.97576135000 * x);
	R0 += 0.00000001530 * Utils.cost(4.76331644411 + 7895.95987272020 * x);
	R0 += 0.00000001529 * Utils.cost(1.35289110986 + 1581.95934828300 * x);
	R0 += 0.00000001807 * Utils.cost(1.86212004697 + 2693.60159338500 * x);
	R0 += 0.00000001855 * Utils.cost(2.38561742394 + 6843.69148953180 * x);
	R0 += 0.00000001518 * Utils.cost(3.98476157750 + 6546.15977336420 * x);
	R0 += 0.00000001389 * Utils.cost(1.82099537095 + 9779.10867612540 * x);
	R0 += 0.00000001447 * Utils.cost(2.35649936427 + 6034.21402008480 * x);
	R0 += 0.00000001386 * Utils.cost(5.55304113895 + 4775.76008845920 * x);
	R0 += 0.00000001372 * Utils.cost(1.07224580315 + 12722.55242048520 * x);
	R0 += 0.00000001423 * Utils.cost(4.46530428193 + 574.34479833480 * x);
	R0 += 0.00000001424 * Utils.cost(2.57162391016 + 3399.98628861340 * x);
	R0 += 0.00000001380 * Utils.cost(5.76156315252 + 16335.83780453660 * x);
	R0 += 0.00000001338 * Utils.cost(2.97604558638 + 6127.65545055720 * x);
	R0 += 0.00000001479 * Utils.cost(4.74310691166 + 12566.15169998280 * x);
	R0 += 0.00000001706 * Utils.cost(0.30579918494 + 10551.52824519400 * x);
	R0 += 0.00000001281 * Utils.cost(2.00285974432 + 6677.63442474780 * x);
	R0 += 0.00000001350 * Utils.cost(0.78892333409 + 853.19638175200 * x);
	R0 += 0.00000001534 * Utils.cost(4.33326399444 + 640.87760738220 * x);
	R0 += 0.00000001247 * Utils.cost(1.02503908468 + 3024.22055704320 * x);
	R0 += 0.00000001289 * Utils.cost(1.92786975543 + 3347.65866339780 * x);
	R0 += 0.00000001243 * Utils.cost(2.44217806237 + 6684.81528205140 * x);
	R0 += 0.00000001453 * Utils.cost(1.74218016403 + 3333.56619000180 * x);
	R0 += 0.00000001675 * Utils.cost(1.79693456330 + 1118.75579210280 * x);
	R0 += 0.00000001491 * Utils.cost(2.59386711806 + 2494.52959194860 * x);
	R0 += 0.00000001293 * Utils.cost(3.31710472549 + 3407.09983561420 * x);
	R0 += 0.00000001188 * Utils.cost(4.92989260576 + 22743.40937951640 * x);
	R0 += 0.00000001329 * Utils.cost(1.99426530402 + 1228.96211332220 * x);
	R0 += 0.00000001373 * Utils.cost(2.53354987340 + 5459.37628707820 * x);
	R0 += 0.00000001183 * Utils.cost(4.25338096667 + 3344.49376205780 * x);
	R0 += 0.00000001231 * Utils.cost(2.50206227837 + 4356.27544458400 * x);
	R0 += 0.00000001243 * Utils.cost(2.65176267860 + 74.78159856730 * x);
	R0 += 0.00000001285 * Utils.cost(4.34087881585 + 3326.38533269820 * x);
	R0 += 0.00000001119 * Utils.cost(1.91321862491 + 3281.23856478620 * x);
	R0 += 0.00000001094 * Utils.cost(5.50748655535 + 3017.10701004240 * x);
	R0 += 0.00000001259 * Utils.cost(3.77654662830 + 11236.57229942000 * x);
	R0 += 0.00000001285 * Utils.cost(1.38335267684 + 3077.52850332700 * x);
	R0 += 0.00000001100 * Utils.cost(1.17130732373 + 6606.44325483230 * x);
	R0 += 0.00000001115 * Utils.cost(5.81275569652 + 2675.85638156980 * x);
	R0 += 0.00000001380 * Utils.cost(5.70641426169 + 2807.39834325620 * x);
	R0 += 0.00000001256 * Utils.cost(3.35479933251 + 4039.88357492740 * x);
	R0 += 0.00000001187 * Utils.cost(2.41348693872 + 10596.18207843420 * x);
	R0 += 0.00000001052 * Utils.cost(3.33521939538 + 3304.58456002240 * x);
	R0 += 0.00000001188 * Utils.cost(5.84735836632 + 3336.73109134180 * x);
	R0 += 0.00000001072 * Utils.cost(2.78383184435 + 8270.29774868340 * x);
	R0 += 0.00000001105 * Utils.cost(3.03463252672 + 3929.67725370800 * x);
	R0 += 0.00000001013 * Utils.cost(3.52026711847 + 8013.27974094040 * x);
	R0 += 0.00000001079 * Utils.cost(0.51857999039 + 2814.44457995420 * x);
	R0 += 0.00000000999 * Utils.cost(4.72734008760 + 533.21408344360 * x);
	R0 += 0.00000001131 * Utils.cost(0.52584038526 + 6816.28993343500 * x);
	R0 += 0.00000001191 * Utils.cost(0.60874292520 + 2301.58581590939 * x);
	R0 += 0.00000001313 * Utils.cost(2.07273299121 + 23539.70738633280 * x);
	R0 += 0.00000000996 * Utils.cost(4.03971126547 + 16062.18452611680 * x);
	R0 += 0.00000000954 * Utils.cost(5.90340414098 + 20206.14119633100 * x);
	R0 += 0.00000000993 * Utils.cost(0.07132588892 + 24150.08005134500 * x);
	R0 += 0.00000001051 * Utils.cost(2.22096534870 + 3980.50971301380 * x);
	R0 += 0.00000001089 * Utils.cost(1.25512213569 + 5938.23479286700 * x);
	R0 += 0.00000000912 * Utils.cost(2.54221161167 + 433.71173787680 * x);
	R0 += 0.00000001249 * Utils.cost(0.60003625956 + 16173.37116840440 * x);
	R0 += 0.00000001027 * Utils.cost(4.95999945094 + 19676.45023123640 * x);
	R0 += 0.00000001108 * Utils.cost(4.34209448160 + 3339.12795399150 * x);
	R0 += 0.00000001188 * Utils.cost(6.21563747433 + 2679.37949991880 * x);
	R0 += 0.00000000849 * Utils.cost(0.82548606454 + 2597.62236616720 * x);
	R0 += 0.00000001145 * Utils.cost(4.48151980872 + 19402.79695281660 * x);
	R0 += 0.00000000948 * Utils.cost(1.30280088857 + 8273.82086703240 * x);
	R0 += 0.00000001016 * Utils.cost(5.14464815830 + 1596.18644228460 * x);
	R0 += 0.00000000832 * Utils.cost(5.60623652030 + 3340.19235060619 * x);
	R0 += 0.00000001035 * Utils.cost(4.71893106874 + 419.48464387520 * x);
	R0 += 0.00000000903 * Utils.cost(0.45419000582 + 12995.22537783680 * x);
	R0 += 0.00000001089 * Utils.cost(0.51294377637 + 11250.79939342160 * x);
	R0 += 0.00000000840 * Utils.cost(5.30858028008 + 26084.02180621620 * x);
	R0 += 0.00000000990 * Utils.cost(2.06776368865 + 7255.56965173440 * x);
	R0 += 0.00000000808 * Utils.cost(6.25630819993 + 15508.61512327440 * x);
	R0 += 0.00000000806 * Utils.cost(3.09007612135 + 5415.65737477320 * x);
	R0 += 0.00000000782 * Utils.cost(4.62274599734 + 2547.83753823240 * x);
	R0 += 0.00000000963 * Utils.cost(2.10680539916 + 6456.88005769770 * x);
	R0 += 0.00000000778 * Utils.cost(3.56602161857 + 12721.57209941700 * x);
	R0 += 0.00000000873 * Utils.cost(5.09097164784 + 2540.79130153440 * x);
	R0 += 0.00000000772 * Utils.cost(3.08101797047 + 11081.21921028860 * x);
	R0 += 0.00000000965 * Utils.cost(2.33106703115 + 18454.60166491500 * x);
	R0 += 0.00000000859 * Utils.cost(4.14788214122 + 6438.49624942560 * x);
	R0 += 0.00000001012 * Utils.cost(4.45011664540 + 3316.73398895200 * x);
	R0 += 0.00000000906 * Utils.cost(4.29336078401 + 3344.54457996290 * x);
	R0 += 0.00000000741 * Utils.cost(2.61446403580 + 2284.75361485960 * x);
	R0 += 0.00000000790 * Utils.cost(6.03436225041 + 12509.25332504720 * x);
	R0 += 0.00000000738 * Utils.cost(0.52092422137 + 18052.92954315780 * x);
	R0 += 0.00000000737 * Utils.cost(4.11165247543 + 3760.09707057500 * x);
	R0 += 0.00000000727 * Utils.cost(3.28066632751 + 3510.19260983280 * x);
	R0 += 0.00000001006 * Utils.cost(0.45037465289 + 27490.69247804480 * x);
	R0 += 0.00000000923 * Utils.cost(2.78717931388 + 1332.05488754080 * x);
	R0 += 0.00000000756 * Utils.cost(0.86881841787 + 1545.35398297880 * x);
	R0 += 0.00000000774 * Utils.cost(3.71535541900 + 6571.01853218020 * x);
	R0 += 0.00000000900 * Utils.cost(2.74944190055 + 316.39186965660 * x);
	R0 += 0.00000000704 * Utils.cost(1.89617185328 + 13362.43245314700 * x);
	R0 += 0.00000000701 * Utils.cost(2.21328293796 + 20995.39296644940 * x);
	R0 += 0.00000000701 * Utils.cost(3.92689438700 + 13362.46696045140 * x);
	R0 += 0.00000000695 * Utils.cost(5.52658147215 + 3364.49086444760 * x);
	R0 += 0.00000000764 * Utils.cost(1.88253040972 + 5732.04924442980 * x);
	R0 += 0.00000000693 * Utils.cost(0.34849213821 + 5835.14201864840 * x);
	R0 += 0.00000000698 * Utils.cost(1.79132650081 + 206.18554843720 * x);
	R0 += 0.00000000687 * Utils.cost(0.11649928911 + 13760.59871020740 * x);
	R0 += 0.00000000827 * Utils.cost(0.49766945172 + 3376.64029337720 * x);
	R0 += 0.00000000686 * Utils.cost(0.23965591265 + 2409.24933984800 * x);
	R0 += 0.00000000672 * Utils.cost(0.51352450554 + 25685.87280280800 * x);
	R0 += 0.00000000699 * Utils.cost(5.90167595080 + 19004.64794940840 * x);
	R0 += 0.00000000647 * Utils.cost(3.01091875955 + 5223.69391980220 * x);
	R0 += 0.00000000643 * Utils.cost(4.88507402785 + 11766.26326451460 * x);
	R0 += 0.00000000723 * Utils.cost(3.28296530537 + 4142.97634914600 * x);
	R0 += 0.00000000660 * Utils.cost(4.27334393830 + 1214.73501932060 * x);
	R0 += 0.00000000675 * Utils.cost(0.48874492682 + 5408.54382777240 * x);
	R0 += 0.00000000809 * Utils.cost(3.13310075522 + 18984.29263000960 * x);
	R0 += 0.00000000646 * Utils.cost(3.63004914186 + 7107.82304427560 * x);
	R0 += 0.00000000831 * Utils.cost(4.49449658957 + 3341.03250279340 * x);
	R0 += 0.00000000680 * Utils.cost(0.16949964513 + 110.20632121940 * x);
	R0 += 0.00000000592 * Utils.cost(6.03272224596 + 20809.46762464520 * x);
	R0 += 0.00000000627 * Utils.cost(4.93438097728 + 9872.27408296480 * x);
	R0 += 0.00000000698 * Utils.cost(1.45709305452 + 3377.21779200400 * x);
	R0 += 0.00000000583 * Utils.cost(4.01887095237 + 664.75604513000 * x);
	R0 += 0.00000000591 * Utils.cost(4.01381288194 + 19406.67828817460 * x);
	R0 += 0.00000000571 * Utils.cost(1.20823284619 + 5621.86017686260 * x);
	R0 += 0.00000000680 * Utils.cost(4.72905586557 + 8116.37251515900 * x);
	R0 += 0.00000000739 * Utils.cost(3.19765996917 + 9380.95967271720 * x);
	R0 += 0.00000000571 * Utils.cost(5.46064659057 + 5621.82566955820 * x);
	R0 += 0.00000000702 * Utils.cost(0.14107083764 + 6923.95345737360 * x);
	R0 += 0.00000000598 * Utils.cost(3.05986754375 + 3341.04230982650 * x);
	R0 += 0.00000000601 * Utils.cost(2.17944973698 + 7270.28968040780 * x);
	R0 += 0.00000000572 * Utils.cost(0.42001145821 + 15110.46611986620 * x);
	R0 += 0.00000000655 * Utils.cost(1.08706089359 + 3169.93955608060 * x);
	R0 += 0.00000000582 * Utils.cost(1.68224967199 + 26087.90314157420 * x);
	R0 += 0.00000000543 * Utils.cost(2.42716241058 + 170.67287061920 * x);
	R0 += 0.00000000543 * Utils.cost(1.68460678113 + 11780.49035851620 * x);
	R0 += 0.00000000533 * Utils.cost(2.63982684952 + 2277.70737816160 * x);
	R0 += 0.00000000550 * Utils.cost(2.54220679987 + 7380.49600162720 * x);
	R0 += 0.00000000576 * Utils.cost(1.69042028754 + 3384.33133900480 * x);
	R0 += 0.00000000535 * Utils.cost(5.01279223460 + 1375.77379984580 * x);
	R0 += 0.00000000579 * Utils.cost(5.99182453047 + 2149.68853482420 * x);
	R0 += 0.00000000598 * Utils.cost(0.75754342787 + 3340.18254357310 * x);
	R0 += 0.00000000575 * Utils.cost(1.33793171924 + 3296.89351439480 * x);
	R0 += 0.00000000689 * Utils.cost(0.02993986536 + 22345.26037610820 * x);
	R0 += 0.00000000526 * Utils.cost(6.14212516186 + 13149.15061136120 * x);
	R0 += 0.00000000540 * Utils.cost(5.54137118955 + 8646.06348025360 * x);
	R0 += 0.00000000528 * Utils.cost(2.74183495775 + 3826.58447948940 * x);
	R0 += 0.00000000689 * Utils.cost(6.28205551764 + 12295.95422960920 * x);
	R0 += 0.00000000499 * Utils.cost(0.25665224668 + 2142.64229812620 * x);
	R0 += 0.00000000498 * Utils.cost(5.91370528026 + 6460.81221096080 * x);
	R0 += 0.00000000588 * Utils.cost(3.39977690249 + 3329.56672643590 * x);
	R0 += 0.00000000507 * Utils.cost(0.63367870048 + 20735.83216142559 * x);
	R0 += 0.00000000590 * Utils.cost(3.87951788923 + 9065.54812412880 * x);
	R0 += 0.00000000509 * Utils.cost(2.59333214746 + 3877.41693879520 * x);
	R0 += 0.00000000486 * Utils.cost(4.01113864377 + 23937.85638974100 * x);
	R0 += 0.00000000541 * Utils.cost(1.55072392536 + 2221.85663459700 * x);
	R0 += 0.00000000482 * Utils.cost(0.00200643783 + 10235.13637553740 * x);
	R0 += 0.00000000474 * Utils.cost(4.14503805378 + 3113.13629391080 * x);
	R0 += 0.00000000523 * Utils.cost(2.89171162726 + 6040.34724601740 * x);
	R0 += 0.00000000458 * Utils.cost(4.08131432844 + 1162.47470440780 * x);
	R0 += 0.00000000493 * Utils.cost(2.98933582802 + 1039.02661079040 * x);
	R0 += 0.00000000489 * Utils.cost(4.88201647585 + 5511.63660199100 * x);
	R0 += 0.00000000537 * Utils.cost(1.24870344441 + 48835.19385644859 * x);
	R0 += 0.00000000585 * Utils.cost(5.53384919340 + 4981.94563689640 * x);
	R0 += 0.00000000462 * Utils.cost(5.38999453893 + 15664.03552270859 * x);
	R0 += 0.00000000531 * Utils.cost(1.22287288928 + 10721.10842832700 * x);
	R0 += 0.00000000440 * Utils.cost(4.69966067585 + 799.82112516540 * x);
	R0 += 0.00000000588 * Utils.cost(5.15076051189 + 3873.82651014340 * x);
	R0 += 0.00000000465 * Utils.cost(5.49236978535 + 3342.09689940810 * x);
	R0 += 0.00000000545 * Utils.cost(5.91813092143 + 1478.86657406440 * x);
	R0 += 0.00000000440 * Utils.cost(2.28287871244 + 12310.18132361080 * x);
	R0 += 0.00000000436 * Utils.cost(0.12478564862 + 956.28915597060 * x);
	R0 += 0.00000000573 * Utils.cost(3.86388572602 + 26482.17080962440 * x);
	R0 += 0.00000000429 * Utils.cost(1.20474317285 + 28.44918746780 * x);
	R0 += 0.00000000435 * Utils.cost(3.75437730899 + 5195.24473233440 * x);
	R0 += 0.00000000457 * Utils.cost(1.45606713663 + 5636.07001721200 * x);
	R0 += 0.00000000553 * Utils.cost(5.30628175145 + 2766.26762836500 * x);
	R0 += 0.00000000494 * Utils.cost(0.63303483918 + 3274.12501778540 * x);
	R0 += 0.00000000530 * Utils.cost(3.18458612574 + 8535.85715903420 * x);
	R0 += 0.00000000535 * Utils.cost(1.89165024367 + 9866.41688066520 * x);
	R0 += 0.00000000433 * Utils.cost(0.33270291162 + 6665.97238221460 * x);
	R0 += 0.00000000404 * Utils.cost(4.67939964590 + 4825.54491639400 * x);
	R0 += 0.00000000402 * Utils.cost(3.25727658426 + 5820.91492464680 * x);
	R0 += 0.00000000415 * Utils.cost(1.41915166067 + 21947.11137270000 * x);
	R0 += 0.00000000414 * Utils.cost(3.32843373219 + 8859.36257569160 * x);
	R0 += 0.00000000403 * Utils.cost(1.68400791606 + 9588.12554222260 * x);
	R0 += 0.00000000399 * Utils.cost(0.93465630912 + 2295.45759051220 * x);
	R0 += 0.00000000402 * Utils.cost(0.85364636108 + 29026.48522950779 * x);
	R0 += 0.00000000494 * Utils.cost(4.57792960199 + 8542.97070603500 * x);
	R0 += 0.00000000413 * Utils.cost(2.60545132222 + 38.13303563780 * x);
	R0 += 0.00000000413 * Utils.cost(5.44081623497 + 4407.10790388980 * x);
	R0 += 0.00000000404 * Utils.cost(5.33168348188 + 3189.56475685690 * x);
	R0 += 0.00000000385 * Utils.cost(1.90313951519 + 10020.85695903120 * x);
	R0 += 0.00000000454 * Utils.cost(1.18358809702 + 10610.90210710760 * x);
	R0 += 0.00000000381 * Utils.cost(4.90212003667 + 19146.75926614180 * x);
	R0 += 0.00000000415 * Utils.cost(3.07892141478 + 11216.28429032400 * x);
	R0 += 0.00000000378 * Utils.cost(0.19461412344 + 2067.93140107260 * x);
	R0 += 0.00000000418 * Utils.cost(1.14626975196 + 6643.09181776180 * x);
	R0 += 0.00000000426 * Utils.cost(4.33863084563 + 220.41264243880 * x);
	R0 += 0.00000000412 * Utils.cost(0.02314567339 + 3192.53370227350 * x);
	R0 += 0.00000000391 * Utils.cost(4.75902617217 + 6414.61781167780 * x);
	R0 += 0.00000000399 * Utils.cost(1.37708573980 + 9654.61295113700 * x);
	R0 += 0.00000000381 * Utils.cost(2.74120772781 + 1854.63230563460 * x);
	R0 += 0.00000000378 * Utils.cost(4.16366866018 + 13553.89797291080 * x);
	R0 += 0.00000000409 * Utils.cost(3.12117409635 + 3723.49170527080 * x);
	R0 += 0.00000000379 * Utils.cost(5.87578711682 + 6357.71943674220 * x);
	R0 += 0.00000000375 * Utils.cost(3.29175394061 + 31022.75317085620 * x);
	R0 += 0.00000000358 * Utils.cost(3.99134138048 + 8958.93223156120 * x);
	R0 += 0.00000000390 * Utils.cost(2.01175211992 + 1903.43681250120 * x);
	R0 += 0.00000000373 * Utils.cost(1.27018251531 + 2111.65031337760 * x);
	R0 += 0.00000000493 * Utils.cost(4.66294641806 + 1435.14766175940 * x);
	R0 += 0.00000000379 * Utils.cost(4.08720452061 + 10706.88133432540 * x);
	R0 += 0.00000000461 * Utils.cost(1.90122301470 + 25287.72379939980 * x);
	R0 += 0.00000000364 * Utils.cost(3.25231136840 + 5095.67507646480 * x);
	R0 += 0.00000000382 * Utils.cost(2.18684874688 + 16276.46394262300 * x);
	R0 += 0.00000000359 * Utils.cost(2.29096599931 + 28628.33622609960 * x);
	R0 += 0.00000000362 * Utils.cost(4.15084528423 + 6696.47732458460 * x);
	R0 += 0.00000000374 * Utils.cost(5.78780163439 + 3490.17562383440 * x);
	R0 += 0.00000000386 * Utils.cost(4.73230339383 + 3981.49003408200 * x);
	R0 += 0.00000000344 * Utils.cost(5.79156714790 + 26880.31981303260 * x);
	R0 += 0.00000000368 * Utils.cost(3.44405073824 + 15.25247118500 * x);
	R0 += 0.00000000410 * Utils.cost(1.76294940448 + 6709.67404086740 * x);
	R0 += 0.00000000339 * Utils.cost(1.71242500987 + 224.34479570190 * x);
	R0 += 0.00000000373 * Utils.cost(2.71286157688 + 3472.15438838620 * x);
	R0 += 0.00000000334 * Utils.cost(1.10569460106 + 59.37386191360 * x);
	R0 += 0.00000000394 * Utils.cost(4.02046774116 + 2075.04494807340 * x);
	R0 += 0.00000000402 * Utils.cost(3.27520695853 + 931.36308685180 * x);
	R0 += 0.00000000318 * Utils.cost(3.28892524780 + 9485.03276800400 * x);
	R0 += 0.00000000319 * Utils.cost(4.05344391333 + 3450.81874791920 * x);
	R0 += 0.00000000341 * Utils.cost(6.08567978892 + 17085.95866572220 * x);
	R0 += 0.00000000378 * Utils.cost(0.71609301686 + 3209.07046501340 * x);
	R0 += 0.00000000326 * Utils.cost(4.58257191106 + 8982.81066930900 * x);
	R0 += 0.00000000369 * Utils.cost(6.17228742886 + 8671.96987044060 * x);
	R0 += 0.00000000308 * Utils.cost(1.01924467785 + 18606.49894600020 * x);
	R0 += 0.00000000370 * Utils.cost(2.84011243059 + 4392.88080988820 * x);
	R0 += 0.00000000303 * Utils.cost(5.00239879717 + 2810.93871525740 * x);
	R0 += 0.00000000303 * Utils.cost(2.97162741204 + 2810.90420795300 * x);
	R0 += 0.00000000419 * Utils.cost(2.79830562400 + 5106.37905211740 * x);
	R0 += 0.00000000358 * Utils.cost(1.15955325186 + 4076.48894023160 * x);
	R0 += 0.00000000360 * Utils.cost(5.83226123310 + 26724.89941359840 * x);
	R0 += 0.00000000298 * Utils.cost(5.57160706753 + 3041.48603243060 * x);
	R0 += 0.00000000298 * Utils.cost(3.06970285022 + 11670.28403729680 * x);
	R0 += 0.00000000388 * Utils.cost(5.01197738185 + 12323.42309600880 * x);
	R0 += 0.00000000336 * Utils.cost(4.60208332758 + 9602.35263622420 * x);
	R0 += 0.00000000371 * Utils.cost(2.23508025241 + 4996.17273089800 * x);
	R0 += 0.00000000300 * Utils.cost(6.04069385215 + 9499.25986200560 * x);
	R0 += 0.00000000345 * Utils.cost(1.74260482164 + 5617.91076994730 * x);
	R0 += 0.00000000302 * Utils.cost(3.01127349940 + 7483.58877584580 * x);
	R0 += 0.00000000289 * Utils.cost(0.39479288685 + 2412.77245819700 * x);
	R0 += 0.00000000289 * Utils.cost(2.21430640344 + 11140.59307220220 * x);
	R0 += 0.00000000330 * Utils.cost(5.81605457596 + 4246.06912336460 * x);
	R0 += 0.00000000394 * Utils.cost(2.12229107240 + 6475.03930496240 * x);
	R0 += 0.00000000301 * Utils.cost(5.26147877814 + 9945.57120882380 * x);
	R0 += 0.00000000338 * Utils.cost(4.94717046909 + 5625.77507647350 * x);
	R0 += 0.00000000372 * Utils.cost(5.46968662800 + 3561.02506913860 * x);
	R0 += 0.00000000279 * Utils.cost(0.54063870001 + 3226.21331978640 * x);
	R0 += 0.00000000291 * Utils.cost(5.21021494024 + 13171.00144068760 * x);
	R0 += 0.00000000384 * Utils.cost(3.23921380878 + 10022.81760116760 * x);
	R0 += 0.00000000309 * Utils.cost(3.17514941939 + 14047.49376102520 * x);
	R0 += 0.00000000273 * Utils.cost(1.68203034215 + 4253.18267036540 * x);
	R0 += 0.00000000272 * Utils.cost(0.11218647217 + 7314.00859271280 * x);
	R0 += 0.00000000281 * Utils.cost(5.15132055967 + 2825.14855560680 * x);
	R0 += 0.00000000292 * Utils.cost(3.33720586058 + 9468.26787725700 * x);
	R0 += 0.00000000316 * Utils.cost(1.41719074976 + 589.06482700820 * x);
	R0 += 0.00000000264 * Utils.cost(0.48845594730 + 16699.53901514999 * x);
	R0 += 0.00000000266 * Utils.cost(1.69694779915 + 647.01083331480 * x);
	R0 += 0.00000000318 * Utils.cost(2.47072726153 + 8436.28750316460 * x);
	R0 += 0.00000000260 * Utils.cost(2.54459932529 + 20.35531939880 * x);
	R0 += 0.00000000275 * Utils.cost(2.78608579994 + 2970.91261075940 * x);
	R0 += 0.00000000295 * Utils.cost(5.96367554548 + 4025.65648092580 * x);
	R0 += 0.00000000268 * Utils.cost(3.01034973031 + 6518.75821726740 * x);
	R0 += 0.00000000259 * Utils.cost(5.20888482695 + 7366.26890762560 * x);
	R0 += 0.00000000298 * Utils.cost(2.71010678192 + 6652.77566593180 * x);
	R0 += 0.00000000276 * Utils.cost(0.78545108300 + 3735.23831175900 * x);
	R0 += 0.00000000305 * Utils.cost(6.19137255377 + 6677.34351804160 * x);
	R0 += 0.00000000265 * Utils.cost(3.25145629239 + 24889.57479599160 * x);
	R0 += 0.00000000260 * Utils.cost(3.99612605351 + 2171.02417529120 * x);
	R0 += 0.00000000252 * Utils.cost(4.14773813625 + 5642.19824260920 * x);
	R0 += 0.00000000254 * Utils.cost(1.38470256851 + 846.08283475120 * x);
	R0 += 0.00000000258 * Utils.cost(2.03261985834 + 2089.78223039900 * x);
	R0 += 0.00000000298 * Utils.cost(3.81212222628 + 28230.18722269139 * x);
	R0 += 0.00000000241 * Utils.cost(2.96550398155 + 27682.14074415640 * x);
	R0 += 0.00000000259 * Utils.cost(4.79545870271 + 6657.34641565180 * x);
	R0 += 0.00000000238 * Utils.cost(1.18977479528 + 3171.03224356680 * x);
	R0 += 0.00000000256 * Utils.cost(1.01427800277 + 568.82187402740 * x);
	R0 += 0.00000000236 * Utils.cost(5.56425829084 + 14.22709400160 * x);
	R0 += 0.00000000304 * Utils.cost(3.81556245925 + 1190.92389187560 * x);
	R0 += 0.00000000237 * Utils.cost(1.37222961867 + 2277.29834324750 * x);
	R0 += 0.00000000239 * Utils.cost(2.47752611026 + 5430.39465709880 * x);
	R0 += 0.00000000234 * Utils.cost(4.34929504798 + 6675.70192909220 * x);
	R0 += 0.00000000239 * Utils.cost(0.14012746335 + 3742.28454845700 * x);
	R0 += 0.00000000286 * Utils.cost(5.04045301355 + 5607.61582920880 * x);
	R0 += 0.00000000305 * Utils.cost(4.59739079660 + 6685.10618875760 * x);
	R0 += 0.00000000254 * Utils.cost(5.03693878366 + 1905.46476494040 * x);
	R0 += 0.00000000323 * Utils.cost(1.67390215145 + 4922.57177498280 * x);
	R0 += 0.00000000232 * Utils.cost(4.82565548677 + 9070.11887384880 * x);
	R0 += 0.00000000236 * Utils.cost(2.40662610715 + 3620.39893105220 * x);
	R0 += 0.00000000260 * Utils.cost(5.72282468723 + 17468.85519794540 * x);
	R0 += 0.00000000259 * Utils.cost(6.15179402778 + 16706.58525184800 * x);
	R0 += 0.00000000263 * Utils.cost(0.63922292958 + 2008.55753915900 * x);
	R0 += 0.00000000300 * Utils.cost(3.78527265088 + 34363.36559755600 * x);
	R0 += 0.00000000226 * Utils.cost(1.86970344963 + 6418.14093002680 * x);
	R0 += 0.00000000239 * Utils.cost(0.04616997400 + 13362.38239649640 * x);
	R0 += 0.00000000241 * Utils.cost(4.85896907298 + 14158.74771361560 * x);
	R0 += 0.00000000225 * Utils.cost(1.70179250908 + 18451.07854656599 * x);
	R0 += 0.00000000288 * Utils.cost(2.26316945288 + 6621.85099148600 * x);
	R0 += 0.00000000231 * Utils.cost(2.19861265305 + 3936.79080070880 * x);
	R0 += 0.00000000251 * Utils.cost(5.51232121883 + 3416.87849797540 * x);
	R0 += 0.00000000245 * Utils.cost(3.30613942274 + 1197.97012857360 * x);
	R0 += 0.00000000253 * Utils.cost(4.54308131689 + 2285.16264977370 * x);
	R0 += 0.00000000225 * Utils.cost(5.50822507089 + 4936.79886898440 * x);
	R0 += 0.00000000249 * Utils.cost(1.06089727346 + 3313.21087060300 * x);
	R0 += 0.00000000309 * Utils.cost(6.21936675838 + 16304.91313009080 * x);
	R0 += 0.00000000244 * Utils.cost(1.94855224181 + 3.59042865180 * x);
	R0 += 0.00000000287 * Utils.cost(5.70461951656 + 792.77488846740 * x);
	R0 += 0.00000000254 * Utils.cost(5.34446995416 + 5401.43028077160 * x);
	R0 += 0.00000000263 * Utils.cost(1.49663212332 + 6364.83298374300 * x);
	R0 += 0.00000000223 * Utils.cost(2.66825139116 + 31968.94865279940 * x);
	R0 += 0.00000000222 * Utils.cost(2.48370132727 + 5355.23588148860 * x);
	R0 += 0.00000000220 * Utils.cost(5.20799024654 + 23017.06265793620 * x);
	R0 += 0.00000000215 * Utils.cost(2.72743996418 + 6740.59871531320 * x);
	R0 += 0.00000000218 * Utils.cost(1.30797197521 + 29822.78323632420 * x);
	R0 += 0.00000000270 * Utils.cost(0.90714939427 + 6155.05700665400 * x);
	R0 += 0.00000000216 * Utils.cost(4.73975263349 + 6679.74038069130 * x);
	R0 += 0.00000000211 * Utils.cost(3.72756562629 + 10042.61267559180 * x);
	R0 += 0.00000000211 * Utils.cost(2.61999755641 + 10124.93005431800 * x);
	R0 += 0.00000000293 * Utils.cost(6.07059383381 + 14061.72085502680 * x);
	R0 += 0.00000000219 * Utils.cost(2.98472846458 + 131.54196168640 * x);
	R0 += 0.00000000210 * Utils.cost(5.27496906319 + 13355.33615979840 * x);
	R0 += 0.00000000259 * Utils.cost(1.25267305830 + 2641.34127847220 * x);
	R0 += 0.00000000208 * Utils.cost(3.30241021109 + 6850.80503653260 * x);
	R0 += 0.00000000226 * Utils.cost(5.48438086246 + 7203.80227149340 * x);
	R0 += 0.00000000243 * Utils.cost(2.44748800604 + 3311.18291816379 * x);
	R0 += 0.00000000208 * Utils.cost(1.13500579457 + 5888.44996493220 * x);
	R0 += 0.00000000251 * Utils.cost(4.67012983729 + 6666.99775939800 * x);
	R0 += 0.00000000227 * Utils.cost(1.59926413307 + 10001.06188460700 * x);
	R0 += 0.00000000264 * Utils.cost(3.72622435628 + 6747.71226231400 * x);
	R0 += 0.00000000216 * Utils.cost(0.34122804918 + 6686.74777770700 * x);
	R0 += 0.00000000260 * Utils.cost(3.67749190896 + 6645.19698672220 * x);
	R0 += 0.00000000209 * Utils.cost(4.31928920378 + 3337.86091608880 * x);
	R0 += 0.00000000218 * Utils.cost(4.08068730999 + 3378.74546233760 * x);
	R0 += 0.00000000275 * Utils.cost(1.64274205426 + 2011.10033643980 * x);
	R0 += 0.00000000204 * Utils.cost(0.73237459784 + 3.93215326310 * x);
	R0 += 0.00000000219 * Utils.cost(0.88584017263 + 19513.98359510420 * x);
	R0 += 0.00000000205 * Utils.cost(2.60851826933 + 2771.79055267240 * x);
	R0 += 0.00000000215 * Utils.cost(2.99299817517 + 10824.20120254560 * x);
	R0 += 0.00000000249 * Utils.cost(0.99914444136 + 5753.38488489680 * x);
	R0 += 0.00000000225 * Utils.cost(0.23309143434 + 4782.87363546000 * x);
	R0 += 0.00000000275 * Utils.cost(0.86215660461 + 8749.15625447220 * x);
	R0 += 0.00000000201 * Utils.cost(2.87118854159 + 21548.96236929180 * x);
	R0 += 0.00000000246 * Utils.cost(3.34468800742 + 3333.92876282570 * x);
	R0 += 0.00000000203 * Utils.cost(4.11410443276 + 31570.79964939120 * x);
	R0 += 0.00000000202 * Utils.cost(4.96805650734 + 8166.15734309380 * x);
	R0 += 0.00000000232 * Utils.cost(2.69372584349 + 5989.06725217280 * x);
	R0 += 0.00000000214 * Utils.cost(4.83852070026 + 6681.64492949320 * x);
	R0 += 0.00000000258 * Utils.cost(2.66551831451 + 1062.90504853820 * x);
	R0 += 0.00000000197 * Utils.cost(0.55202541352 + 735.87651353180 * x);
	R0 += 0.00000000256 * Utils.cost(2.76274941586 + 2480.30249794700 * x);
	R0 += 0.00000000216 * Utils.cost(4.02506717011 + 3133.91168940320 * x);
	R0 += 0.00000000193 * Utils.cost(1.52645682146 + 949.17560896980 * x);
	R0 += 0.00000000209 * Utils.cost(0.67348618655 + 13892.14067189380 * x);
	R0 += 0.00000000220 * Utils.cost(1.52502617699 + 6660.86953400080 * x);
	R0 += 0.00000000223 * Utils.cost(1.09348882524 + 6148.01076995600 * x);
	R0 += 0.00000000192 * Utils.cost(2.90571322264 + 8799.98871377800 * x);
	R0 += 0.00000000243 * Utils.cost(3.36420301442 + 8965.97846825920 * x);
	R0 += 0.00000000206 * Utils.cost(5.11175800472 + 4140.43355186520 * x);
	R0 += 0.00000000189 * Utils.cost(1.06641624209 + 9374.82644678460 * x);
	R0 += 0.00000000240 * Utils.cost(5.92078519032 + 13362.51701710200 * x);
	R0 += 0.00000000248 * Utils.cost(5.79997873732 + 15806.14683944200 * x);
	R0 += 0.00000000193 * Utils.cost(3.19008521814 + 6756.00645196690 * x);
	R0 += 0.00000000237 * Utils.cost(4.11979030463 + 22487.37169284160 * x);
	R0 += 0.00000000218 * Utils.cost(0.84212090761 + 6717.25272007700 * x);
	R0 += 0.00000000200 * Utils.cost(2.43100846630 + 10018.24685144760 * x);
	R0 += 0.00000000199 * Utils.cost(5.81238461796 + 4289.78803566960 * x);
	R0 += 0.00000000214 * Utils.cost(5.95026024979 + 6680.80477730600 * x);
	R0 += 0.00000000192 * Utils.cost(3.06285109033 + 32765.24665961580 * x);
	R0 += 0.00000000229 * Utils.cost(1.68884404323 + 11614.43329373220 * x);
	R0 += 0.00000000185 * Utils.cost(3.13072183492 + 3253.30422216000 * x);
	R0 += 0.00000000246 * Utils.cost(2.58151525126 + 1795.25844372100 * x);
	R0 += 0.00000000187 * Utils.cost(4.06797969837 + 14577.18472611980 * x);
	R0 += 0.00000000185 * Utils.cost(0.96747889626 + 2604.73591316800 * x);
	R0 += 0.00000000184 * Utils.cost(1.46731725339 + 1437.17561419860 * x);
	R0 += 0.00000000186 * Utils.cost(2.55094700069 + 3188.71514561460 * x);
	R0 += 0.00000000211 * Utils.cost(4.23522784526 + 16703.07938715119 * x);
	R0 += 0.00000000196 * Utils.cost(2.80582160764 + 2796.69436760360 * x);
	R0 += 0.00000000198 * Utils.cost(5.92372067560 + 4133.38731516720 * x);
	R0 += 0.00000000238 * Utils.cost(2.30957041178 + 1879.55837475340 * x);
	R0 += 0.00000000224 * Utils.cost(3.13550652378 + 3613.28538405140 * x);
	R0 += 0.00000000223 * Utils.cost(1.81801741599 + 3184.21170619740 * x);
	R0 += 0.00000000199 * Utils.cost(3.64983703995 + 4271.97551355160 * x);
	R0 += 0.00000000181 * Utils.cost(2.71721121316 + 4186.69526145100 * x);
	R0 += 0.00000000184 * Utils.cost(2.03051030984 + 6674.17861670160 * x);
	R0 += 0.00000000182 * Utils.cost(1.54431442810 + 9947.05568153210 * x);
	R0 += 0.00000000179 * Utils.cost(4.38762678121 + 9886.77220006400 * x);
	R0 += 0.00000000181 * Utils.cost(1.80044971979 + 6717.83021870380 * x);
	R0 += 0.00000000190 * Utils.cost(4.97714900529 + 6670.58818804980 * x);
	R0 += 0.00000000247 * Utils.cost(5.77972128678 + 29424.63423291600 * x);
	R0 += 0.00000000194 * Utils.cost(5.90745451439 + 6705.10329114740 * x);
	R0 += 0.00000000224 * Utils.cost(5.61893896091 + 227.47613278900 * x);
	R0 += 0.00000000182 * Utils.cost(2.77233344458 + 6887.41040183680 * x);
	R0 += 0.00000000224 * Utils.cost(1.94094757956 + 8226.57883637840 * x);
	R0 += 0.00000000181 * Utils.cost(4.61381081330 + 3361.94806716680 * x);
	R0 += 0.00000000203 * Utils.cost(5.24659800837 + 7586.68155006440 * x);
	R0 += 0.00000000183 * Utils.cost(5.23826533455 + 6578.13207918100 * x);
	R0 += 0.00000000207 * Utils.cost(0.88292186428 + 10156.90236013480 * x);
	R0 += 0.00000000232 * Utils.cost(0.75375986797 + 3232.94890276120 * x);
	R0 += 0.00000000179 * Utils.cost(5.89794151802 + 4452.25467180180 * x);
	R0 += 0.00000000177 * Utils.cost(6.16223629155 + 3547.31316399640 * x);
	R0 += 0.00000000177 * Utils.cost(0.19292898030 + 401.67212175720 * x);
	R0 += 0.00000000173 * Utils.cost(3.89814064100 + 6019.99192661860 * x);
	R0 += 0.00000000172 * Utils.cost(2.42933586666 + 6944.30877677240 * x);
	R0 += 0.00000000201 * Utils.cost(6.18392570315 + 6947.83189512140 * x);
	R0 += 0.00000000183 * Utils.cost(5.82189570737 + 8962.43809625800 * x);
	R0 += 0.00000000189 * Utils.cost(2.71231990816 + 742.99006053260 * x);
	R0 += 0.00000000172 * Utils.cost(3.86810071059 + 10028.95082710020 * x);
	R0 += 0.00000000188 * Utils.cost(5.22462530948 + 2125.87740737920 * x);
	R0 += 0.00000000196 * Utils.cost(1.88388569900 + 5032.77809620220 * x);
	R0 += 0.00000000209 * Utils.cost(5.78130707501 + 3343.36393731080 * x);
	R0 += 0.00000000167 * Utils.cost(6.26758992296 + 15849.86575174700 * x);
	R0 += 0.00000000189 * Utils.cost(2.38894304278 + 3212.59358336240 * x);
	R0 += 0.00000000208 * Utils.cost(5.62485439431 + 31172.65064598300 * x);
	R0 += 0.00000000170 * Utils.cost(1.07346401060 + 20426.57109242200 * x);
	R0 += 0.00000000183 * Utils.cost(5.21160560654 + 27832.03821928320 * x);
	R0 += 0.00000000181 * Utils.cost(2.19756653553 + 16703.04487984680 * x);
	R0 += 0.00000000214 * Utils.cost(1.66101921272 + 21265.52312652020 * x);
	R0 += 0.00000000165 * Utils.cost(2.10517924574 + 6688.27109009760 * x);
	R0 += 0.00000000172 * Utils.cost(0.85495655009 + 14591.41182012140 * x);
	R0 += 0.00000000164 * Utils.cost(1.68898542913 + 3468.63127003720 * x);
	R0 += 0.00000000183 * Utils.cost(1.56948199057 + 8962.47260356240 * x);
	R0 += 0.00000000191 * Utils.cost(5.54553650068 + 2806.98930834210 * x);
	R0 += 0.00000000162 * Utils.cost(4.06699160265 + 5209.47182633600 * x);
	R0 += 0.00000000165 * Utils.cost(3.44003333876 + 14421.83163698840 * x);
	R0 += 0.00000000163 * Utils.cost(2.42152585351 + 6314.00052443720 * x);
	R0 += 0.00000000189 * Utils.cost(0.57681608522 + 2973.38809773740 * x);
	R0 += 0.00000000169 * Utils.cost(2.86190807726 + 5490.30096152400 * x);
	R0 += 0.00000000174 * Utils.cost(1.69333072403 + 1744.49329471800 * x);
	R0 += 0.00000000224 * Utils.cost(2.35886332922 + 9638.94074787620 * x);
	R0 += 0.00000000207 * Utils.cost(3.13737248079 + 3336.68027343670 * x);
	R0 += 0.00000000221 * Utils.cost(3.14807587279 + 11610.91017538320 * x);
	R0 += 0.00000000158 * Utils.cost(5.87599422932 + 4606.17990532620 * x);
	R0 += 0.00000000166 * Utils.cost(4.61834424167 + 9175.75444534820 * x);
	R0 += 0.00000000162 * Utils.cost(5.40045489036 + 23.87843774780 * x);
	R0 += 0.00000000158 * Utils.cost(5.57047764661 + 4503.08713110760 * x);
	R0 += 0.00000000156 * Utils.cost(3.08339691033 + 3448.27595063840 * x);
	R0 += 0.00000000202 * Utils.cost(2.56469307457 + 7321.12213971360 * x);
	R0 += 0.00000000164 * Utils.cost(1.10347159072 + 3710.31224264020 * x);
	R0 += 0.00000000158 * Utils.cost(3.65995745934 + 6997.61672305620 * x);
	R0 += 0.00000000169 * Utils.cost(1.85985317117 + 1329.51209026000 * x);
	R0 += 0.00000000211 * Utils.cost(1.66624816725 + 3304.00706139560 * x);
	R0 += 0.00000000206 * Utils.cost(1.81572746145 + 1596.11913198180 * x);
	R0 += 0.00000000169 * Utils.cost(0.46310427277 + 17101.21113690720 * x);
	R0 += 0.00000000159 * Utils.cost(5.73384451559 + 1265.56747862640 * x);
	R0 += 0.00000000159 * Utils.cost(0.92643196778 + 4001.84535348080 * x);
	R0 += 0.00000000189 * Utils.cost(2.74163850920 + 2910.49111747480 * x);
	R0 += 0.00000000181 * Utils.cost(5.48699984659 + 3319.27678623280 * x);
	R0 += 0.00000000156 * Utils.cost(5.95462118470 + 8584.66166590080 * x);
	R0 += 0.00000000158 * Utils.cost(3.38732507447 + 8742.04270747140 * x);
	R0 += 0.00000000171 * Utils.cost(3.11406750626 + 5621.91023351320 * x);
	R0 += 0.00000000199 * Utils.cost(2.86370198218 + 10025.42770875120 * x);
	R0 += 0.00000000173 * Utils.cost(4.73384838991 + 9389.05354078620 * x);
	R0 += 0.00000000160 * Utils.cost(3.06861532268 + 1612.95133303160 * x);
	R0 += 0.00000000203 * Utils.cost(1.71629299113 + 699.27114822760 * x);
	R0 += 0.00000000198 * Utils.cost(0.56267868345 + 15265.88651930040 * x);
	R0 += 0.00000000186 * Utils.cost(2.44573687199 + 2814.85361486830 * x);
	R0 += 0.00000000167 * Utils.cost(0.44417942260 + 37895.42629036740 * x);
	R0 += 0.00000000152 * Utils.cost(5.08616610530 + 3322.79990458180 * x);
	R0 += 0.00000000162 * Utils.cost(2.58982908935 + 1883.08149310240 * x);
	R0 += 0.00000000178 * Utils.cost(4.58774508034 + 6685.15700666270 * x);
	R0 += 0.00000000191 * Utils.cost(4.12771141768 + 9911.63095888000 * x);
	R0 += 0.00000000185 * Utils.cost(4.32284898739 + 323.50541665740 * x);
	R0 += 0.00000000199 * Utils.cost(1.83524172935 + 3436.59165391760 * x);
	R0 += 0.00000000199 * Utils.cost(6.00292619279 + 4427.39591298580 * x);
	R0 += 0.00000000153 * Utils.cost(3.46447669590 + 22324.90505670940 * x);
	R0 += 0.00000000171 * Utils.cost(3.52256446633 + 5621.77561290760 * x);
	R0 += 0.00000000165 * Utils.cost(3.32970937124 + 1272.68102562720 * x);
	R0 += 0.00000000149 * Utils.cost(0.13370088791 + 36.02786667740 * x);
	R0 += 0.00000000149 * Utils.cost(1.23280447264 + 4193.80880845180 * x);
	R0 += 0.00000000156 * Utils.cost(0.13018524921 + 11925.27409260060 * x);
	R0 += 0.00000000146 * Utils.cost(1.24102730441 + 3372.58473251660 * x);
	R0 += 0.00000000154 * Utils.cost(5.63537863362 + 3185.25933756840 * x);
	R0 += 0.00000000197 * Utils.cost(3.23364188440 + 3774.32416457660 * x);
	R0 += 0.00000000180 * Utils.cost(3.47485722477 + 8564.30634650200 * x);
	R0 += 0.00000000185 * Utils.cost(2.18248214016 + 802.36392244620 * x);
	R0 += 0.00000000145 * Utils.cost(2.62035460481 + 3368.01398279660 * x);
	R0 += 0.00000000180 * Utils.cost(6.01236697222 + 6691.86151874940 * x);
	R0 += 0.00000000148 * Utils.cost(2.51710178830 + 3262.86188271590 * x);
	R0 += 0.00000000151 * Utils.cost(4.17118896078 + 16894.51039961060 * x);
	R0 += 0.00000000185 * Utils.cost(3.03939668350 + 3354.83952070140 * x);
	R0 += 0.00000000143 * Utils.cost(3.37267915445 + 3468.56395973440 * x);
	R0 += 0.00000000160 * Utils.cost(2.16705959730 + 0.98032106820 * x);
	R0 += 0.00000000190 * Utils.cost(1.63240538938 + 2324.94940881560 * x);
	R0 += 0.00000000140 * Utils.cost(1.27592043896 + 6549.68289171320 * x);
	R0 += 0.00000000186 * Utils.cost(1.44849264278 + 1015.66301788420 * x);
	R0 += 0.00000000141 * Utils.cost(4.19208049402 + 5813.29118932200 * x);
	R0 += 0.00000000153 * Utils.cost(5.97405255778 + 3568.08855948880 * x);
	R0 += 0.00000000136 * Utils.cost(0.45455359025 + 3193.80074017620 * x);
	R0 += 0.00000000188 * Utils.cost(0.98977442882 + 2538.24850425360 * x);
	R0 += 0.00000000157 * Utils.cost(3.32117477144 + 3181.66890891660 * x);
	R0 += 0.00000000164 * Utils.cost(1.67705754742 + 2751.54759969160 * x);
	R0 += 0.00000000134 * Utils.cost(5.26327877742 + 13212.88650966460 * x);
	R0 += 0.00000000184 * Utils.cost(0.73082474043 + 369.69981594040 * x);
	R0 += 0.00000000145 * Utils.cost(5.54086212771 + 3152.68727893721 * x);
	R0 += 0.00000000139 * Utils.cost(3.30464120245 + 6151.51663465280 * x);
	R0 += 0.00000000132 * Utils.cost(0.96753793729 + 3487.42411322340 * x);
	R0 += 0.00000000148 * Utils.cost(1.55321724063 + 7696.88787128380 * x);
	R0 += 0.00000000140 * Utils.cost(5.39000757800 + 2945.98654164060 * x);
	R0 += 0.00000000155 * Utils.cost(4.35207037526 + 4005.36847182980 * x);
	R0 += 0.00000000142 * Utils.cost(5.13441372991 + 1641.33321019660 * x);
	R0 += 0.00000000131 * Utils.cost(2.48606821423 + 1353.39052800780 * x);
	R0 += 0.00000000131 * Utils.cost(2.18754536881 + 1765.76662541760 * x);
	R0 += 0.00000000133 * Utils.cost(3.01300582040 + 3283.71405176420 * x);
	R0 += 0.00000000177 * Utils.cost(2.37558492362 + 11346.77862063940 * x);
	R0 += 0.00000000145 * Utils.cost(0.79525636457 + 2281.24775016280 * x);
	R0 += 0.00000000133 * Utils.cost(5.96263652624 + 34513.26307268280 * x);
	R0 += 0.00000000165 * Utils.cost(1.32559153826 + 6510.55198278040 * x);
	R0 += 0.00000000132 * Utils.cost(4.31118469609 + 1971.95217385480 * x);
	R0 += 0.00000000176 * Utils.cost(3.17539133688 + 6701.58017279840 * x);
	R0 += 0.00000000140 * Utils.cost(1.18723558164 + 1461.05405194640 * x);
	R0 += 0.00000000128 * Utils.cost(6.07261046225 + 3362.46325602620 * x);
	R0 += 0.00000000139 * Utils.cost(5.33541181199 + 6151.55114195720 * x);
	R0 += 0.00000000143 * Utils.cost(1.04060603784 + 3351.65812696370 * x);
	R0 += 0.00000000138 * Utils.cost(1.96009952022 + 2014.62345478880 * x);
	R0 += 0.00000000127 * Utils.cost(2.12310260285 + 2917.53735417280 * x);
	R0 += 0.00000000142 * Utils.cost(0.29094317859 + 3212.66089366520 * x);
	R0 += 0.00000000128 * Utils.cost(0.49974456440 + 10264.56588407340 * x);
	R0 += 0.00000000125 * Utils.cost(1.62548810323 + 10191.41746323240 * x);
	R0 += 0.00000000128 * Utils.cost(3.55358985291 + 3223.29255847960 * x);
	R0 += 0.00000000140 * Utils.cost(5.87379732521 + 6382.09845913040 * x);
	R0 += 0.00000000129 * Utils.cost(2.90428606882 + 6812.76681508600 * x);
	R0 += 0.00000000127 * Utils.cost(4.03101399507 + 10448.43547097540 * x);
	R0 += 0.00000000128 * Utils.cost(3.23265469000 + 4576.68808702280 * x);
	R0 += 0.00000000124 * Utils.cost(2.02283056331 + 6724.94376570460 * x);
	R0 += 0.00000000134 * Utils.cost(0.19295362623 + 3130.83644961080 * x);
	R0 += 0.00000000145 * Utils.cost(5.04767049759 + 2281.21324285840 * x);
	R0 += 0.00000000143 * Utils.cost(4.45744983982 + 7100.70949727480 * x);
	R0 += 0.00000000133 * Utils.cost(5.00404182123 + 11883.58313273480 * x);
	R0 += 0.00000000124 * Utils.cost(0.73925895836 + 1485.98012106520 * x);
	R0 += 0.00000000123 * Utils.cost(0.47283015475 + 3347.29609057390 * x);
	R0 += 0.00000000137 * Utils.cost(5.73370922615 + 5244.04923920100 * x);
	R0 += 0.00000000152 * Utils.cost(5.01464455460 + 3358.42494881780 * x);
	R0 += 0.00000000122 * Utils.cost(1.37003015612 + 3370.04193523580 * x);
	R0 += 0.00000000143 * Utils.cost(1.95740753086 + 2921.68802779920 * x);
	R0 += 0.00000000123 * Utils.cost(3.94139290312 + 4957.08687808040 * x);
	R0 += 0.00000000130 * Utils.cost(0.90844304292 + 3427.92063123960 * x);
	R0 += 0.00000000135 * Utils.cost(3.56996218538 + 3229.42578441220 * x);
	R0 += 0.00000000143 * Utils.cost(5.30225767870 + 14128.24277124560 * x);
	R0 += 0.00000000134 * Utils.cost(2.47836558803 + 7167.19690618920 * x);
	R0 += 0.00000000150 * Utils.cost(5.89116199733 + 966.97087743560 * x);
	R0 += 0.00000000123 * Utils.cost(3.58787674774 + 3318.76159737340 * x);
	R0 += 0.00000000153 * Utils.cost(0.37199746202 + 6533.14612897330 * x);
	R0 += 0.00000000145 * Utils.cost(1.73326841661 + 6637.50594109460 * x);
	R0 += 0.00000000133 * Utils.cost(3.27553306809 + 11876.46958573400 * x);
	R0 += 0.00000000119 * Utils.cost(5.15087396729 + 15636.56665630900 * x);
	R0 += 0.00000000117 * Utils.cost(3.70999224131 + 3343.15522398060 * x);
	R0 += 0.00000000115 * Utils.cost(5.99541570797 + 11986.67590695340 * x);
	R0 += 0.00000000152 * Utils.cost(5.66662339960 + 6530.17718355670 * x);
	R0 += 0.00000000123 * Utils.cost(0.05231448642 + 9801.42463766060 * x);
	R0 += 0.00000000130 * Utils.cost(1.42377926040 + 16063.16484718500 * x);
	R0 += 0.00000000120 * Utils.cost(4.19579234337 + 604.84974070480 * x);
	R0 += 0.00000000126 * Utils.cost(1.38788085609 + 169.58018313300 * x);
	R0 += 0.00000000122 * Utils.cost(0.18785107006 + 18849.22754997420 * x);
	R0 += 0.00000000113 * Utils.cost(4.67731144918 + 24491.42579258340 * x);
	R0 += 0.00000000122 * Utils.cost(1.21803689218 + 3067.93946934820 * x);
	R0 += 0.00000000118 * Utils.cost(3.92389195187 + 2963.23881878400 * x);
	R0 += 0.00000000137 * Utils.cost(0.80076862963 + 3123.79021291280 * x);
	R0 += 0.00000000124 * Utils.cost(0.77274469912 + 12465.53441274220 * x);
	R0 += 0.00000000132 * Utils.cost(4.73888023892 + 2267.00340250900 * x);
	R0 += 0.00000000122 * Utils.cost(3.66231014052 + 8756.26980147300 * x);
	R0 += 0.00000000113 * Utils.cost(3.74955221887 + 21393.54196985760 * x);
	R0 += 0.00000000153 * Utils.cost(5.00596002145 + 15906.76412668260 * x);
	R0 += 0.00000000109 * Utils.cost(1.46394078440 + 2854.64037391020 * x);
	R0 += 0.00000000125 * Utils.cost(6.00744459186 + 1442.26120876020 * x);
	R0 += 0.00000000140 * Utils.cost(0.64532646558 + 13532.02988993220 * x);
	R0 += 0.00000000108 * Utils.cost(2.11691804278 + 43.71891230500 * x);
	R0 += 0.00000000130 * Utils.cost(1.43185911960 + 3370.10424500320 * x);
	R0 += 0.00000000133 * Utils.cost(2.31239626151 + 9072.66167112960 * x);
	R0 += 0.00000000107 * Utils.cost(5.68864833782 + 4878.85286267780 * x);
	R0 += 0.00000000116 * Utils.cost(3.91262234002 + 11904.91877320180 * x);
	R0 += 0.00000000106 * Utils.cost(1.99989592271 + 3497.01314720220 * x);
	R0 += 0.00000000106 * Utils.cost(5.79020088316 + 1.48447270830 * x);
	R0 += 0.00000000105 * Utils.cost(1.79751699456 + 3517.30615683360 * x);
	R0 += 0.00000000130 * Utils.cost(0.80396347034 + 3397.51080163540 * x);
	R0 += 0.00000000107 * Utils.cost(5.29449090921 + 10.63666534980 * x);
	R0 += 0.00000000137 * Utils.cost(0.47037516401 + 13575.74880223720 * x);
	R0 += 0.00000000104 * Utils.cost(5.03145022037 + 1751.52227776380 * x);
	R0 += 0.00000000146 * Utils.cost(2.57659804831 + 3308.64012088300 * x);
	R0 += 0.00000000103 * Utils.cost(3.29589452622 + 4379.63903749020 * x);
	R0 += 0.00000000104 * Utils.cost(0.77903634693 + 1751.55678506820 * x);
	R0 += 0.00000000118 * Utils.cost(4.11892224522 + 10927.29397676420 * x);
	R0 += 0.00000000106 * Utils.cost(2.25714927822 + 13207.02930736500 * x);
	R0 += 0.00000000126 * Utils.cost(1.10289326962 + 6680.79497027290 * x);
	R0 += 0.00000000105 * Utils.cost(1.41449747957 + 10081.21114201300 * x);
	R0 += 0.00000000110 * Utils.cost(6.16072219971 + 3338.06962941900 * x);
	R0 += 0.00000000113 * Utils.cost(0.61947991056 + 13421.82356871280 * x);
	R0 += 0.00000000139 * Utils.cost(2.21345603147 + 1954.71715036360 * x);
	R0 += 0.00000000102 * Utils.cost(3.81767069895 + 6670.17915313570 * x);
	R0 += 0.00000000101 * Utils.cost(3.44583422545 + 1505.28780909299 * x);
	R0 += 0.00000000105 * Utils.cost(2.46134952447 + 5525.86369599260 * x);
	R0 += 0.00000000119 * Utils.cost(5.64454862995 + 8425.71814811760 * x);
	R0 += 0.00000000101 * Utils.cost(1.87446179141 + 9161.52735134660 * x);
	R0 += 0.00000000111 * Utils.cost(5.46183253107 + 7214.43893684320 * x);
	R0 += 0.00000000123 * Utils.cost(0.14056284625 + 16489.76303806100 * x);
	R0 += 0.00000000128 * Utils.cost(0.00452525697 + 2185.25126929280 * x);
	R0 += 0.00000000106 * Utils.cost(6.20225179330 + 3717.98603461560 * x);
	R0 += 0.00000000099 * Utils.cost(1.70554147455 + 1655.56030419820 * x);
	R0 += 0.00000000100 * Utils.cost(1.76373681853 + 3002.36972771680 * x);
	R0 += 0.00000000101 * Utils.cost(0.55693458655 + 3337.15661865360 * x);
	R0 += 0.00000000101 * Utils.cost(0.56441794685 + 30774.50164257480 * x);
	R0 += 0.00000000098 * Utils.cost(1.93983799659 + 5562.46906129680 * x);
	R0 += 0.00000000130 * Utils.cost(5.65255471249 + 2735.76268599500 * x);
	R0 += 0.00000000125 * Utils.cost(6.18575288406 + 9698.33186344200 * x);
	R0 += 0.00000000100 * Utils.cost(2.35767934317 + 3337.07205469860 * x);
	R0 += 0.00000000100 * Utils.cost(3.76317527562 + 3344.15279870100 * x);
	R0 += 0.00000000105 * Utils.cost(5.33897491215 + 5096.08411137890 * x);
	R0 += 0.00000000103 * Utils.cost(1.24189801298 + 1385.89527633620 * x);
	R0 += 0.00000000101 * Utils.cost(1.42727612221 + 37455.72649597440 * x);
	R0 += 0.00000000096 * Utils.cost(2.55328478399 + 4466.48176580340 * x);
	R0 += 0.00000000097 * Utils.cost(5.86779127410 + 5220.17080145320 * x);
	R0 += 0.00000000101 * Utils.cost(2.61513508379 + 16858.41522263039 * x);
	R0 += 0.00000000107 * Utils.cost(4.23943588615 + 8823.86715152580 * x);
	R0 += 0.00000000100 * Utils.cost(4.38845221965 + 3337.10656200300 * x);
	R0 += 0.00000000100 * Utils.cost(1.73240240188 + 3344.11829139661 * x);
	R0 += 0.00000000101 * Utils.cost(3.51764169063 + 4694.00295470760 * x);
	R0 += 0.00000000096 * Utils.cost(3.16895015703 + 12825.64519470380 * x);
	R0 += 0.00000000101 * Utils.cost(6.24060604565 + 2942.53073359440 * x);
	R0 += 0.00000000103 * Utils.cost(1.09500325425 + 12089.76868117200 * x);
	R0 += 0.00000000106 * Utils.cost(5.57931664756 + 39048.32250960720 * x);
	R0 += 0.00000000126 * Utils.cost(3.40521738550 + 6681.65473652630 * x);
	R0 += 0.00000000105 * Utils.cost(2.52404371984 + 1755.06264976500 * x);
	R0 += 0.00000000115 * Utils.cost(6.10031030713 + 3145.64104223920 * x);
	R0 += 0.00000000092 * Utils.cost(5.06385191401 + 5085.10572141780 * x);
	R0 += 0.00000000097 * Utils.cost(1.11670836674 + 3341.79306935190 * x);
	R0 += 0.00000000092 * Utils.cost(5.83209800268 + 6682.70932610790 * x);
	R0 += 0.00000000121 * Utils.cost(2.39411154886 + 18208.34994259200 * x);
	R0 += 0.00000000110 * Utils.cost(2.51677822824 + 1045.15483618760 * x);
	R0 += 0.00000000091 * Utils.cost(1.07173725022 + 927.83996850280 * x);
	R0 += 0.00000000096 * Utils.cost(3.60155667418 + 13363.43002786740 * x);
	R0 += 0.00000000097 * Utils.cost(5.34224904711 + 7636.46637799920 * x);
	R0 += 0.00000000094 * Utils.cost(1.20811080231 + 9495.66943335380 * x);
	R0 += 0.00000000090 * Utils.cost(4.17568982529 + 0.06731030280 * x);
	R0 += 0.00000000097 * Utils.cost(3.20862890174 + 5298.33750655300 * x);
	R0 += 0.00000000092 * Utils.cost(3.20029831258 + 4403.51747523800 * x);
	R0 += 0.00000000090 * Utils.cost(3.79900428724 + 685.04405422600 * x);
	R0 += 0.00000000101 * Utils.cost(2.12778329280 + 10050.28646756720 * x);
	R0 += 0.00000000098 * Utils.cost(3.89390262307 + 2373.64154926420 * x);
	R0 += 0.00000000090 * Utils.cost(4.49046504054 + 6453.74872061060 * x);
	R0 += 0.00000000096 * Utils.cost(5.13129666936 + 7792.86709850160 * x);
	R0 += 0.00000000089 * Utils.cost(4.51228904794 + 10037.08975128440 * x);
	R0 += 0.00000000098 * Utils.cost(0.65689906709 + 2810.98877190800 * x);
	R0 += 0.00000000114 * Utils.cost(4.15908543927 + 9090.47419324760 * x);
	R0 += 0.00000000094 * Utils.cost(4.78960145866 + 35707.71008290740 * x);
	R0 += 0.00000000087 * Utils.cost(6.26525215858 + 34554.81386366760 * x);
	R0 += 0.00000000087 * Utils.cost(1.50181194995 + 9983.70424446160 * x);
	R0 += 0.00000000087 * Utils.cost(1.43790822626 + 9488.62319665580 * x);
	R0 += 0.00000000090 * Utils.cost(2.79573736864 + 47477.56377607380 * x);
	R0 += 0.00000000094 * Utils.cost(5.68919291448 + 6106.88005506480 * x);
	R0 += 0.00000000087 * Utils.cost(0.74049208991 + 41990.78593289880 * x);
	R0 += 0.00000000101 * Utils.cost(0.99308133443 + 6614.73744448520 * x);
	R0 += 0.00000000115 * Utils.cost(3.49732055752 + 4.50343941720 * x);
	R0 += 0.00000000086 * Utils.cost(0.18628425275 + 216.82221378700 * x);
	R0 += 0.00000000099 * Utils.cost(1.06539589813 + 2810.85415130240 * x);
	R0 += 0.00000000087 * Utils.cost(3.02856210899 + 7218.02936549500 * x);
	R0 += 0.00000000085 * Utils.cost(4.58476007089 + 1699.27921650320 * x);
	R0 += 0.00000000088 * Utils.cost(4.47996444588 + 21957.68072774700 * x);
	R0 += 0.00000000106 * Utils.cost(6.12011880730 + 4819.47900076420 * x);
	R0 += 0.00000000089 * Utils.cost(3.88600719587 + 12199.97500239140 * x);
	R0 += 0.00000000097 * Utils.cost(2.70091698598 + 3339.43178404770 * x);
	R0 += 0.00000000118 * Utils.cost(1.02739527200 + 34115.11406927460 * x);
	R0 += 0.00000000101 * Utils.cost(0.36591831115 + 2942.39611298880 * x);
	R0 += 0.00000000084 * Utils.cost(5.66081869654 + 1169.58825140860 * x);
	R0 += 0.00000000086 * Utils.cost(1.91214909013 + 55516.41870984820 * x);
	R0 += 0.00000000084 * Utils.cost(4.30909434949 + 4150.08989614680 * x);
	R0 += 0.00000000094 * Utils.cost(1.36645151323 + 9093.99731159660 * x);
	R0 += 0.00000000097 * Utils.cost(2.26544245706 + 13361.46938573100 * x);
	R0 += 0.00000000099 * Utils.cost(1.16054562056 + 128.01884333740 * x);
	R0 += 0.00000000094 * Utils.cost(1.10573952457 + 4591.44262300060 * x);
	R0 += 0.00000000092 * Utils.cost(0.74386387542 + 4845.90023579280 * x);
	R0 += 0.00000000101 * Utils.cost(1.51570299040 + 7807.09419250320 * x);
	R0 += 0.00000000096 * Utils.cost(1.02187746571 + 2899.78714182220 * x);
	R0 += 0.00000000086 * Utils.cost(0.66787658068 + 2957.73314812880 * x);
	R0 += 0.00000000087 * Utils.cost(3.49676189640 + 4061.75165790600 * x);
	R0 += 0.00000000095 * Utils.cost(3.35452781355 + 661.23292678100 * x);
	R0 += 0.00000000087 * Utils.cost(0.04840436087 + 23546.75362303080 * x);
	R0 += 0.00000000114 * Utils.cost(2.83270741566 + 394.62588505920 * x);
	R0 += 0.00000000081 * Utils.cost(3.44420073782 + 148.07872442630 * x);
	R0 += 0.00000000081 * Utils.cost(1.27062968985 + 4893.07995667940 * x);
	R0 += 0.00000000083 * Utils.cost(5.48462687348 + 4349.16189758320 * x);
	R0 += 0.00000000105 * Utils.cost(3.47842036130 + 3413.90955255880 * x);
	R0 += 0.00000000084 * Utils.cost(4.33209852801 + 51449.32426327820 * x);
	R0 += 0.00000000093 * Utils.cost(1.59775582035 + 5088.21980485270 * x);
	R0 += 0.00000000088 * Utils.cost(3.29950478012 + 2655.50106217100 * x);
	R0 += 0.00000000081 * Utils.cost(1.65543714666 + 78263.70942472259 * x);
	R0 += 0.00000000086 * Utils.cost(1.19342535692 + 4029.24690957760 * x);
	R0 += 0.00000000079 * Utils.cost(4.41964678009 + 151.04766984290 * x);
	R0 += 0.00000000084 * Utils.cost(1.96289182788 + 14867.73751589219 * x);
	R0 += 0.00000000091 * Utils.cost(5.76229906142 + 2544.33167353560 * x);
	R0 += 0.00000000086 * Utils.cost(3.78659802914 + 1481.40937134520 * x);
	R0 += 0.00000000082 * Utils.cost(2.85633413428 + 14164.81362924540 * x);
	R0 += 0.00000000078 * Utils.cost(4.29426812598 + 187.92514776260 * x);
	R0 += 0.00000000078 * Utils.cost(5.38566529072 + 2655.56837247380 * x);
	R0 += 0.00000000084 * Utils.cost(2.15121245434 + 3311.12060839640 * x);
	R0 += 0.00000000078 * Utils.cost(2.01651247942 + 9124.92198604240 * x);
	R0 += 0.00000000083 * Utils.cost(4.28280129037 + 74923.09699802278 * x);
	R0 += 0.00000000077 * Utils.cost(1.45903147715 + 2544.38173018620 * x);
	R0 += 0.00000000081 * Utils.cost(3.62204400197 + 12306.59089495900 * x);
	R0 += 0.00000000100 * Utils.cost(1.33498371324 + 9278.84721956680 * x);
	R0 += 0.00000000089 * Utils.cost(2.62080312892 + 24341.52831745660 * x);
	R0 += 0.00000000098 * Utils.cost(3.78877505378 + 3198.43379966360 * x);
	R0 += 0.00000000081 * Utils.cost(4.34306418828 + 10177.19036923080 * x);
	R0 += 0.00000000080 * Utils.cost(5.80054348103 + 2751.01515718000 * x);
	R0 += 0.00000000092 * Utils.cost(2.80228448795 + 3707.83675566220 * x);
	R0 += 0.00000000082 * Utils.cost(2.45812896240 + 9815.65173166220 * x);
	R0 += 0.00000000076 * Utils.cost(3.03616461584 + 9993.38809263160 * x);
	R0 += 0.00000000076 * Utils.cost(3.92674885488 + 2910.08208256070 * x);
	R0 += 0.00000000076 * Utils.cost(3.20004040720 + 7733.49323658800 * x);
	R0 += 0.00000000098 * Utils.cost(3.28574616663 + 3289.33208883739 * x);
	R0 += 0.00000000077 * Utils.cost(2.05948930010 + 12928.73796892240 * x);
	R0 += 0.00000000075 * Utils.cost(0.85784191736 + 28638.90558114660 * x);
	R0 += 0.00000000078 * Utils.cost(0.29690749181 + 10654.62101941260 * x);
	R0 += 0.00000000101 * Utils.cost(0.72388999452 + 48827.43118573260 * x);
	R0 += 0.00000000085 * Utils.cost(5.19438010130 + 2146.14816282300 * x);
	R0 += 0.00000000083 * Utils.cost(4.42475849926 + 2060.81785407180 * x);
	R0 += 0.00000000075 * Utils.cost(5.19097428778 + 1055.44977692610 * x);
	R0 += 0.00000000096 * Utils.cost(6.24132708357 + 11.04570026390 * x);
	R0 += 0.00000000074 * Utils.cost(3.37882325472 + 8006.16619393960 * x);
	R0 += 0.00000000101 * Utils.cost(0.95332927487 + 8186.51266249260 * x);
	R0 += 0.00000000092 * Utils.cost(0.96173005100 + 151.89728108520 * x);
	R0 += 0.00000000074 * Utils.cost(2.22716630210 + 272.67295735160 * x);
	R0 += 0.00000000092 * Utils.cost(5.56705883046 + 27873.58901026800 * x);
	R0 += 0.00000000091 * Utils.cost(3.73152787182 + 2544.29716623120 * x);
	R0 += 0.00000000084 * Utils.cost(0.41493230617 + 4296.90158267040 * x);
	R0 += 0.00000000074 * Utils.cost(5.09669613096 + 9755.23023837760 * x);
	R0 += 0.00000000078 * Utils.cost(1.79565224435 + 3564.95722240170 * x);
	R0 += 0.00000000075 * Utils.cost(4.58345774133 + 9153.90361602180 * x);
	R0 += 0.00000000074 * Utils.cost(3.88658218247 + 25298.29315444680 * x);
	R0 += 0.00000000085 * Utils.cost(5.31472029744 + 4716.38622654560 * x);
	R0 += 0.00000000074 * Utils.cost(1.46907693289 + 11527.12508919240 * x);
	R0 += 0.00000000101 * Utils.cost(2.94847804254 + 12032.93761653920 * x);
	R0 += 0.00000000072 * Utils.cost(0.24413748615 + 1324.94134054000 * x);
	R0 += 0.00000000078 * Utils.cost(0.17721609024 + 3391.89276456221 * x);
	R0 += 0.00000000073 * Utils.cost(1.65072742864 + 5452.26274007740 * x);
	R0 += 0.00000000073 * Utils.cost(4.91730083470 + 10787.63034454580 * x);
	R0 += 0.00000000073 * Utils.cost(3.28285909319 + 8830.91338822380 * x);
	R0 += 0.00000000081 * Utils.cost(5.46340742050 + 3856.07629779280 * x);
	R0 += 0.00000000073 * Utils.cost(4.61913155968 + 3288.35211178700 * x);
	R0 += 0.00000000096 * Utils.cost(5.71767221046 + 206.70073729660 * x);
	R0 += 0.00000000080 * Utils.cost(4.47918417138 + 12299.54465826100 * x);
	R0 += 0.00000000071 * Utils.cost(4.98130328330 + 12942.96506292400 * x);
	R0 += 0.00000000073 * Utils.cost(2.86057567032 + 4960.60999642940 * x);
	R0 += 0.00000000072 * Utils.cost(5.14120362338 + 4665.55376723980 * x);
	R0 += 0.00000000076 * Utils.cost(0.00928867041 + 6534.41316687600 * x);
	R0 += 0.00000000090 * Utils.cost(5.38224594245 + 2125.81009707640 * x);
	R0 += 0.00000000085 * Utils.cost(0.94196641948 + 2146.18267012740 * x);
	R0 += 0.00000000096 * Utils.cost(0.68069708134 + 10006.58480891440 * x);
	R0 += 0.00000000073 * Utils.cost(1.06048379839 + 3866.78027344540 * x);
	R0 += 0.00000000072 * Utils.cost(0.84342376295 + 3334.54651107000 * x);
	R0 += 0.00000000091 * Utils.cost(5.12701600437 + 3392.87274161260 * x);
	R0 += 0.00000000076 * Utils.cost(5.96038992872 + 3482.79105373600 * x);
	R0 += 0.00000000090 * Utils.cost(1.46230169383 + 5092.16921176800 * x);
	R0 += 0.00000000071 * Utils.cost(1.16745785331 + 1574.84580128220 * x);
	R0 += 0.00000000072 * Utils.cost(3.86137692169 + 16762.43599541260 * x);
	R0 += 0.00000000070 * Utils.cost(0.07310763691 + 12839.87228870540 * x);
	R0 += 0.00000000073 * Utils.cost(0.11725123446 + 10507.80933288900 * x);
	R0 += 0.00000000081 * Utils.cost(5.86817748181 + 3495.96551583120 * x);
	R0 += 0.00000000071 * Utils.cost(2.07963275673 + 1063.31408345230 * x);
	R0 += 0.00000000068 * Utils.cost(3.30993028662 + 4106.40549114620 * x);
	R0 += 0.00000000069 * Utils.cost(0.33467954461 + 5.52292430740 * x);
	R0 += 0.00000000068 * Utils.cost(1.56404561711 + 2398.55036473080 * x);
	R0 += 0.00000000090 * Utils.cost(2.61953849393 + 3346.67834232960 * x);
	R0 += 0.00000000068 * Utils.cost(1.06108185791 + 191.38095580880 * x);
	R0 += 0.00000000077 * Utils.cost(0.87794040199 + 2917.94638908690 * x);
	R0 += 0.00000000067 * Utils.cost(0.29712068423 + 12012.58229714040 * x);
	R0 += 0.00000000067 * Utils.cost(2.55451787747 + 11567.19126307820 * x);
	R0 += 0.00000000083 * Utils.cost(1.82578570364 + 3511.28529731900 * x);
	R0 += 0.00000000068 * Utils.cost(2.68247854175 + 20213.25474333179 * x);
	R0 += 0.00000000086 * Utils.cost(2.79273636804 + 367.22432896240 * x);
	R0 += 0.00000000086 * Utils.cost(0.81171860574 + 209.77597708900 * x);
	R0 += 0.00000000067 * Utils.cost(5.28035928877 + 8966.38750317330 * x);
	R0 += 0.00000000067 * Utils.cost(0.20258020424 + 27433.88921587499 * x);
	R0 += 0.00000000071 * Utils.cost(2.76410148218 + 15650.79375031060 * x);
	R0 += 0.00000000090 * Utils.cost(0.71593793107 + 3451.79906898740 * x);
	R0 += 0.00000000067 * Utils.cost(6.18148420146 + 3966.28261901220 * x);
	R0 += 0.00000000074 * Utils.cost(3.61959120765 + 7064.10413197060 * x);
	R0 += 0.00000000068 * Utils.cost(2.69550405031 + 12725.45343477500 * x);
	R0 += 0.00000000074 * Utils.cost(1.24854309783 + 8027.56914470940 * x);
	R0 += 0.00000000084 * Utils.cost(2.47006028699 + 3738.74417645580 * x);
	R0 += 0.00000000077 * Utils.cost(5.89874180572 + 4307.58330413540 * x);
	R0 += 0.00000000067 * Utils.cost(0.33285041428 + 19645.52555679060 * x);
	R0 += 0.00000000083 * Utils.cost(3.79134493696 + 2472.67876262220 * x);
	R0 += 0.00000000064 * Utils.cost(0.43216125634 + 1994.26813539000 * x);
	R0 += 0.00000000071 * Utils.cost(0.65707804543 + 860.30992875280 * x);
	R0 += 0.00000000064 * Utils.cost(0.98960038205 + 3376.17516116840 * x);
	R0 += 0.00000000070 * Utils.cost(0.96227192685 + 8428.83223155250 * x);
	R0 += 0.00000000066 * Utils.cost(0.65425879867 + 8219.46528937760 * x);
	R0 += 0.00000000070 * Utils.cost(4.36060455306 + 8436.69653807870 * x);
	R0 += 0.00000000084 * Utils.cost(4.50083253887 + 3738.77868376020 * x);
	R0 += 0.00000000073 * Utils.cost(5.69670871544 + 14687.39104733920 * x);
	R0 += 0.00000000071 * Utils.cost(0.36334330253 + 2619.47319549360 * x);
	R0 += 0.00000000080 * Utils.cost(5.85771861744 + 7747.72033058960 * x);
	R0 += 0.00000000068 * Utils.cost(3.06409889136 + 8446.99147881720 * x);
	R0 += 0.00000000066 * Utils.cost(1.07137364271 + 1987.22189869200 * x);
	R0 += 0.00000000061 * Utils.cost(3.71171429905 + 1055.85881184020 * x);
	R0 += 0.00000000079 * Utils.cost(0.06487001849 + 6286.59896834040 * x);
	R0 += 0.00000000075 * Utils.cost(1.54177744365 + 1059.39918384140 * x);
	R0 += 0.00000000061 * Utils.cost(1.47350010728 + 1685.05212250160 * x);
	R0 += 0.00000000061 * Utils.cost(0.46897959303 + 1727.66109366820 * x);
	R0 += 0.00000000064 * Utils.cost(2.11869877898 + 3305.04969223120 * x);
	R0 += 0.00000000060 * Utils.cost(1.17940250396 + 97670.38771289718 * x);
	R0 += 0.00000000060 * Utils.cost(5.13953821352 + 1898.33396428740 * x);
	R0 += 0.00000000064 * Utils.cost(4.04058406722 + 3945.46216740460 * x);
	R0 += 0.00000000063 * Utils.cost(5.20562384814 + 24606.13555322000 * x);
	R0 += 0.00000000061 * Utils.cost(0.55428968913 + 7082.89697515680 * x);
	R0 += 0.00000000075 * Utils.cost(4.81208819076 + 27299.24421193320 * x);
	R0 += 0.00000000059 * Utils.cost(1.75511446129 + 12082.65513417120 * x);
	R0 += 0.00000000061 * Utils.cost(5.88333855610 + 6901.63749583840 * x);
	R0 += 0.00000000074 * Utils.cost(3.46408580786 + 14556.89671702380 * x);
	R0 += 0.00000000074 * Utils.cost(4.40649822049 + 9360.60435331840 * x);
	R0 += 0.00000000058 * Utils.cost(4.22827613192 + 4531.53631857540 * x);
	R0 += 0.00000000080 * Utils.cost(2.14103357856 + 7917.30051372260 * x);
	R0 += 0.00000000075 * Utils.cost(1.85618011420 + 52566.19261584059 * x);
	R0 += 0.00000000075 * Utils.cost(5.15830659680 + 45884.96776244100 * x);
	R0 += 0.00000000068 * Utils.cost(2.06915254754 + 8958.52319664710 * x);
	R0 += 0.00000000056 * Utils.cost(3.77847713307 + 299.12639426920 * x);
	R0 += 0.00000000062 * Utils.cost(2.25564130818 + 9758.75335672660 * x);
	R0 += 0.00000000059 * Utils.cost(2.68657637673 + 6283.05859633920 * x);
	R0 += 0.00000000056 * Utils.cost(5.54148283448 + 13286.18363552360 * x);
	R0 += 0.00000000056 * Utils.cost(3.89200811600 + 8962.38803960740 * x);
	R0 += 0.00000000063 * Utils.cost(2.07254352069 + 7593.79509706520 * x);
	R0 += 0.00000000061 * Utils.cost(4.31994402891 + 4709.27267954480 * x);
	R0 += 0.00000000075 * Utils.cost(5.79419108898 + 1059.36467653700 * x);
	R0 += 0.00000000056 * Utils.cost(0.18569912415 + 7768.00833968560 * x);
	R0 += 0.00000000059 * Utils.cost(5.49627068572 + 7322.10246078180 * x);
	R0 += 0.00000000064 * Utils.cost(3.95992112220 + 3050.12694723020 * x);
	R0 += 0.00000000055 * Utils.cost(2.19506741266 + 7.04623669800 * x);
	R0 += 0.00000000057 * Utils.cost(4.05252695300 + 3930.20969621960 * x);
	R0 += 0.00000000075 * Utils.cost(3.99788100837 + 5483.25472482600 * x);
	R0 += 0.00000000060 * Utils.cost(4.61703903739 + 6990.50317605540 * x);
	R0 += 0.00000000073 * Utils.cost(4.20362525534 + 21150.81336588360 * x);
	R0 += 0.00000000066 * Utils.cost(2.82009591985 + 8771.00708379860 * x);
	R0 += 0.00000000054 * Utils.cost(0.38782719267 + 360.11078196160 * x);
	R0 += 0.00000000059 * Utils.cost(4.71734799803 + 6283.09310364360 * x);
	R0 += 0.00000000068 * Utils.cost(5.74655335863 + 987.74627292800 * x);

	let R1 = 0;
	R1 += 0.01107433340 * Utils.cost(2.03250524950 + 3340.61242669980 * x);
	R1 += 0.00103175886 * Utils.cost(2.37071845682 + 6681.22485339960 * x);
	R1 += 0.00012877200;
	R1 += 0.00010815880 * Utils.cost(2.70888093803 + 10021.83728009940 * x);
	R1 += 0.00001194550 * Utils.cost(3.04702182503 + 13362.44970679920 * x);
	R1 += 0.00000438579 * Utils.cost(2.88835072628 + 2281.23049651060 * x);
	R1 += 0.00000395698 * Utils.cost(3.42324611291 + 3344.13554504880 * x);
	R1 += 0.00000182572 * Utils.cost(1.58428644001 + 2544.31441988340 * x);
	R1 += 0.00000135850 * Utils.cost(3.38507017993 + 16703.06213349900 * x);
	R1 += 0.00000128204 * Utils.cost(0.62991220570 + 1059.38193018920 * x);
	R1 += 0.00000127068 * Utils.cost(1.95389775740 + 796.29800681640 * x);
	R1 += 0.00000118443 * Utils.cost(2.99761345074 + 2146.16541647520 * x);
	R1 += 0.00000128362 * Utils.cost(6.04343360441 + 3337.08930835080 * x);
	R1 += 0.00000087537 * Utils.cost(3.42052758979 + 398.14900340820 * x);
	R1 += 0.00000083026 * Utils.cost(3.85574986653 + 3738.76143010800 * x);
	R1 += 0.00000075598 * Utils.cost(4.45101839349 + 6151.53388830500 * x);
	R1 += 0.00000071999 * Utils.cost(2.76442180680 + 529.69096509460 * x);
	R1 += 0.00000066542 * Utils.cost(2.54892602695 + 1751.53953141600 * x);
	R1 += 0.00000054314 * Utils.cost(0.67750943459 + 8962.45534991020 * x);
	R1 += 0.00000051035 * Utils.cost(3.72585409207 + 6684.74797174860 * x);
	R1 += 0.00000066430 * Utils.cost(4.40597549957 + 1748.01641306700 * x);
	R1 += 0.00000047863 * Utils.cost(2.28527896843 + 2914.01423582380 * x);
	R1 += 0.00000049428 * Utils.cost(5.72959428364 + 3340.59517304760 * x);
	R1 += 0.00000049424 * Utils.cost(1.47717922226 + 3340.62968035200 * x);
	R1 += 0.00000057518 * Utils.cost(0.54354327916 + 1194.44701022460 * x);
	R1 += 0.00000048318 * Utils.cost(2.58061691301 + 3149.16416058820 * x);
	R1 += 0.00000036384 * Utils.cost(6.02728752344 + 3185.19202726560 * x);
	R1 += 0.00000037176 * Utils.cost(5.81439911546 + 1349.86740965880 * x);
	R1 += 0.00000036036 * Utils.cost(5.89508336048 + 3333.49887969900 * x);
	R1 += 0.00000031115 * Utils.cost(0.97832506960 + 191.44826611160 * x);
	R1 += 0.00000038953 * Utils.cost(2.31900090554 + 4136.91043351620 * x);
	R1 += 0.00000027244 * Utils.cost(5.41367977087 + 1592.59601363280 * x);
	R1 += 0.00000024300 * Utils.cost(3.75843924498 + 155.42039943420 * x);
	R1 += 0.00000022804 * Utils.cost(1.74830773908 + 5088.62883976680 * x);
	R1 += 0.00000022324 * Utils.cost(0.93932040730 + 951.71840625060 * x);
	R1 += 0.00000021708 * Utils.cost(3.83571581352 + 6283.07584999140 * x);
	R1 += 0.00000021304 * Utils.cost(0.78049229782 + 1589.07289528380 * x);
	R1 += 0.00000021631 * Utils.cost(4.56895741061 + 3532.06069281140 * x);
	R1 += 0.00000017956 * Utils.cost(4.21930481803 + 3870.30339179440 * x);
	R1 += 0.00000018237 * Utils.cost(0.41328624131 + 5486.77784317500 * x);
	R1 += 0.00000016251 * Utils.cost(3.80760134974 + 3340.54511639700 * x);
	R1 += 0.00000016803 * Utils.cost(5.54857987615 + 3097.88382272579 * x);
	R1 += 0.00000016850 * Utils.cost(4.53690440252 + 4292.33083295040 * x);
	R1 += 0.00000015755 * Utils.cost(4.75736730681 + 9492.14631500480 * x);
	R1 += 0.00000015746 * Utils.cost(3.72356090283 + 20043.67456019880 * x);
	R1 += 0.00000020428 * Utils.cost(3.13540712557 + 4690.47983635860 * x);
	R1 += 0.00000014699 * Utils.cost(5.95325006816 + 3894.18182954220 * x);
	R1 += 0.00000016251 * Utils.cost(3.39910907599 + 3340.67973700260 * x);
	R1 += 0.00000014259 * Utils.cost(3.99897353022 + 1990.74501704100 * x);
	R1 += 0.00000016528 * Utils.cost(0.96752074938 + 4399.99435688900 * x);
	R1 += 0.00000013010 * Utils.cost(5.14230107067 + 6677.70173505060 * x);
	R1 += 0.00000012492 * Utils.cost(1.03211063742 + 3341.59274776800 * x);
	R1 += 0.00000016463 * Utils.cost(3.53882915214 + 2700.71514038580 * x);
	R1 += 0.00000016171 * Utils.cost(2.34870953554 + 553.56940284240 * x);
	R1 += 0.00000013169 * Utils.cost(0.41461716663 + 5614.72937620960 * x);
	R1 += 0.00000011272 * Utils.cost(1.02375627844 + 12303.06777661000 * x);
	R1 += 0.00000012408 * Utils.cost(6.23142869816 + 5628.95647021120 * x);
	R1 += 0.00000012747 * Utils.cost(0.69046314049 + 3723.50895892300 * x);
	R1 += 0.00000011827 * Utils.cost(6.25283898676 + 2274.11694950980 * x);
	R1 += 0.00000010384 * Utils.cost(1.23257236014 + 426.59819087600 * x);
	R1 += 0.00000011208 * Utils.cost(1.31750963435 + 3496.03282613400 * x);
	R1 += 0.00000010345 * Utils.cost(0.90062464690 + 4535.05943692440 * x);
	R1 += 0.00000012215 * Utils.cost(4.22316056098 + 7079.37385680780 * x);
	R1 += 0.00000009765 * Utils.cost(3.45310940204 + 382.89653222320 * x);
	R1 += 0.00000008586 * Utils.cost(1.16471901139 + 2787.04302385740 * x);
	R1 += 0.00000007879 * Utils.cost(5.73808861790 + 2288.34404351140 * x);
	R1 += 0.00000009195 * Utils.cost(1.81689739851 + 6681.24210705180 * x);
	R1 += 0.00000007751 * Utils.cost(4.15046998466 + 6041.32756708560 * x);
	R1 += 0.00000009195 * Utils.cost(6.06945250657 + 6681.20759974740 * x);
	R1 += 0.00000009026 * Utils.cost(2.58210941053 + 2388.89402044920 * x);
	R1 += 0.00000006771 * Utils.cost(0.23987737854 + 11773.37681151540 * x);
	R1 += 0.00000007087 * Utils.cost(3.51414944377 + 8031.09226305840 * x);
	R1 += 0.00000009159 * Utils.cost(3.90158590550 + 3553.91152213780 * x);
	R1 += 0.00000006702 * Utils.cost(4.25572879119 + 242.72860397400 * x);
	R1 += 0.00000007232 * Utils.cost(3.70287400141 + 2818.03500860600 * x);
	R1 += 0.00000006546 * Utils.cost(0.04353472459 + 2957.71589447660 * x);
	R1 += 0.00000008781 * Utils.cost(2.19735028572 + 1221.84856632140 * x);
	R1 += 0.00000006540 * Utils.cost(2.11834687923 + 8429.24126646660 * x);
	R1 += 0.00000006836 * Utils.cost(4.04512263654 + 10025.36039844840 * x);
	R1 += 0.00000007280 * Utils.cost(4.26943100715 + 2803.80791460440 * x);
	R1 += 0.00000007676 * Utils.cost(1.00782250264 + 8432.76438481560 * x);
	R1 += 0.00000005732 * Utils.cost(3.13956241764 + 213.29909543800 * x);
	R1 += 0.00000005344 * Utils.cost(3.78220670098 + 5092.15195811580 * x);
	R1 += 0.00000005991 * Utils.cost(2.96408254428 + 6489.77658728800 * x);
	R1 += 0.00000005132 * Utils.cost(3.98288453952 + 7.11354700080 * x);
	R1 += 0.00000006261 * Utils.cost(1.90346469972 + 5621.84292321040 * x);
	R1 += 0.00000005241 * Utils.cost(2.67093795050 + 7477.52286021600 * x);
	R1 += 0.00000006261 * Utils.cost(1.60056695152 + 3347.72597370060 * x);
	R1 += 0.00000006526 * Utils.cost(2.76281601349 + 3339.63210563160 * x);
	R1 += 0.00000004591 * Utils.cost(1.81986278078 + 2810.92146160520 * x);
	R1 += 0.00000005460 * Utils.cost(4.60874445963 + 3583.34103067380 * x);
	R1 += 0.00000004733 * Utils.cost(0.90560026340 + 5099.26550511660 * x);
	R1 += 0.00000005486 * Utils.cost(4.91408093456 + 7632.94325965020 * x);
	R1 += 0.00000004004 * Utils.cost(4.14067157211 + 9623.68827669120 * x);
	R1 += 0.00000003837 * Utils.cost(0.03343295627 + 7234.79425624200 * x);
	R1 += 0.00000003621 * Utils.cost(5.76532393672 + 4933.20844033260 * x);
	R1 += 0.00000003747 * Utils.cost(0.08778985966 + 6525.80445396540 * x);
	R1 += 0.00000003016 * Utils.cost(3.73838855125 + 6681.29216370240 * x);
	R1 += 0.00000003975 * Utils.cost(4.91288592965 + 2942.46342329160 * x);
	R1 += 0.00000003911 * Utils.cost(0.67451768877 + 3127.31333126180 * x);
	R1 += 0.00000003923 * Utils.cost(3.07703531632 + 3.52311834900 * x);
	R1 += 0.00000003944 * Utils.cost(0.53974754515 + 5884.92684658320 * x);
	R1 += 0.00000002901 * Utils.cost(4.66281989264 + 7210.91581849420 * x);
	R1 += 0.00000002803 * Utils.cost(1.00530177454 + 7064.12138562280 * x);
	R1 += 0.00000003153 * Utils.cost(4.54673175664 + 2487.41604494780 * x);
	R1 += 0.00000002784 * Utils.cost(0.05495331967 + 639.89728631400 * x);
	R1 += 0.00000002759 * Utils.cost(5.17099857257 + 5828.02847164760 * x);
	R1 += 0.00000003017 * Utils.cost(4.14668877243 + 6681.15754309680 * x);
	R1 += 0.00000002999 * Utils.cost(0.82918667275 + 5085.03841111500 * x);
	R1 += 0.00000002677 * Utils.cost(0.69427974692 + 2699.73481931760 * x);
	R1 += 0.00000003023 * Utils.cost(2.59489020298 + 2906.90068882300 * x);
	R1 += 0.00000002596 * Utils.cost(1.08693013783 + 4929.68532198360 * x);
	R1 += 0.00000003126 * Utils.cost(1.00027692782 + 2118.76386037840 * x);
	R1 += 0.00000002598 * Utils.cost(5.01195749912 + 10018.31416175040 * x);
	R1 += 0.00000002606 * Utils.cost(5.34420770679 + 10973.55568635000 * x);
	R1 += 0.00000002779 * Utils.cost(3.98358744953 + 6467.92575796160 * x);
	R1 += 0.00000002460 * Utils.cost(1.52653571249 + 6836.64525283380 * x);
	R1 += 0.00000002382 * Utils.cost(3.93610586965 + 11371.70468975820 * x);
	R1 += 0.00000002590 * Utils.cost(5.08892664109 + 12832.75874170460 * x);
	R1 += 0.00000002201 * Utils.cost(0.18880589605 + 9595.23908922340 * x);
	R1 += 0.00000002128 * Utils.cost(5.69450469171 + 3191.04922956520 * x);
	R1 += 0.00000002065 * Utils.cost(3.54133174600 + 1066.49547719000 * x);
	R1 += 0.00000001868 * Utils.cost(5.01592531810 + 3475.67750673520 * x);
	R1 += 0.00000002081 * Utils.cost(1.30274459220 + 7740.60678358880 * x);
	R1 += 0.00000001830 * Utils.cost(5.68365327697 + 3319.83703120740 * x);
	R1 += 0.00000002022 * Utils.cost(6.16092328060 + 1744.42598441520 * x);
	R1 += 0.00000001708 * Utils.cost(2.21675931288 + 2921.12778282460 * x);
	R1 += 0.00000001836 * Utils.cost(6.16477009621 + 8425.65083781480 * x);
	R1 += 0.00000002060 * Utils.cost(6.24041853265 + 6674.11130639880 * x);
	R1 += 0.00000001735 * Utils.cost(4.58243571826 + 10419.98628350760 * x);
	R1 += 0.00000001852 * Utils.cost(1.36883022935 + 15643.68020330980 * x);
	R1 += 0.00000001689 * Utils.cost(1.92829590736 + 3767.21061757580 * x);
	R1 += 0.00000001954 * Utils.cost(0.46215988899 + 10575.40668294180 * x);
	R1 += 0.00000001800 * Utils.cost(2.30913343660 + 3355.86489788480 * x);
	R1 += 0.00000001444 * Utils.cost(2.15042616899 + 10021.85453375160 * x);
	R1 += 0.00000001760 * Utils.cost(5.87267582299 + 3320.25710730100 * x);
	R1 += 0.00000001845 * Utils.cost(4.06123235448 + 23384.28698689860 * x);
	R1 += 0.00000001423 * Utils.cost(4.65085713203 + 4562.46099302120 * x);
	R1 += 0.00000001410 * Utils.cost(1.50438410845 + 3325.35995551480 * x);
	R1 += 0.00000001444 * Utils.cost(0.11969993808 + 10021.82002644720 * x);
	R1 += 0.00000001443 * Utils.cost(0.55828572929 + 15113.98923821520 * x);
	R1 += 0.00000001334 * Utils.cost(1.25483731308 + 7875.67186362420 * x);
	R1 += 0.00000001442 * Utils.cost(1.38958943728 + 6682.20517446780 * x);
	R1 += 0.00000001606 * Utils.cost(4.34241260905 + 5331.35744374080 * x);
	R1 += 0.00000001377 * Utils.cost(0.14791683820 + 1758.65307841680 * x);
	R1 += 0.00000001282 * Utils.cost(5.78533014319 + 14584.29827312060 * x);
	R1 += 0.00000001281 * Utils.cost(1.35125896423 + 10404.73381232260 * x);
	R1 += 0.00000001471 * Utils.cost(0.34649469321 + 8969.56889691100 * x);
	R1 += 0.00000001245 * Utils.cost(6.02681709446 + 3264.34635542420 * x);
	R1 += 0.00000001234 * Utils.cost(1.88341938354 + 10177.25767953360 * x);
	R1 += 0.00000001552 * Utils.cost(5.92727420332 + 8439.87793181640 * x);
	R1 += 0.00000001182 * Utils.cost(4.18100226016 + 3360.96774609859 * x);
	R1 += 0.00000001333 * Utils.cost(1.86551437099 + 692.15760122680 * x);
	R1 += 0.00000001189 * Utils.cost(0.89892514263 + 13916.01910964160 * x);
	R1 += 0.00000001192 * Utils.cost(4.30473818946 + 6894.52394883760 * x);
	R1 += 0.00000001145 * Utils.cost(0.15197504252 + 3134.42687826260 * x);
	R1 += 0.00000001299 * Utils.cost(1.44631688592 + 6254.62666252360 * x);
	R1 += 0.00000001494 * Utils.cost(1.54417907271 + 3361.38782219220 * x);
	R1 += 0.00000001054 * Utils.cost(0.67591855339 + 3344.20285535160 * x);
	R1 += 0.00000001210 * Utils.cost(0.85117132607 + 3120.19978426100 * x);
	R1 += 0.00000001061 * Utils.cost(0.13258232364 + 522.57741809380 * x);
	R1 += 0.00000001003 * Utils.cost(1.28021784912 + 4569.57454002200 * x);
	R1 += 0.00000001012 * Utils.cost(5.77497169905 + 14314.16811304980 * x);
	R1 += 0.00000001169 * Utils.cost(2.99767730172 + 6247.51311552280 * x);
	R1 += 0.00000001062 * Utils.cost(0.25467691252 + 3337.02199804800 * x);
	R1 += 0.00000001032 * Utils.cost(5.69833683620 + 536.80451209540 * x);
	R1 += 0.00000001082 * Utils.cost(2.58016159997 + 6261.74020952440 * x);
	R1 += 0.00000000867 * Utils.cost(1.50283829131 + 6127.65545055720 * x);
	R1 += 0.00000000953 * Utils.cost(2.92377030638 + 5729.50644714900 * x);
	R1 += 0.00000000887 * Utils.cost(5.28743574972 + 10213.28554621100 * x);
	R1 += 0.00000001108 * Utils.cost(2.84339171890 + 640.87760738220 * x);
	R1 += 0.00000000861 * Utils.cost(3.21491381593 + 3914.95722503460 * x);
	R1 += 0.00000001069 * Utils.cost(0.49400181869 + 11243.68584642080 * x);
	R1 += 0.00000000800 * Utils.cost(4.64154002129 + 6144.42034130420 * x);
	R1 += 0.00000000799 * Utils.cost(3.33215212691 + 9830.38901398780 * x);
	R1 += 0.00000001046 * Utils.cost(4.05907877700 + 6158.64743530580 * x);
	R1 += 0.00000000743 * Utils.cost(4.93337997290 + 3230.40610548040 * x);
	R1 += 0.00000000740 * Utils.cost(3.01511102229 + 10818.13528691580 * x);
	R1 += 0.00000000716 * Utils.cost(2.52567242762 + 5202.35827933520 * x);
	R1 += 0.00000000705 * Utils.cost(4.39344403231 + 9808.53818466140 * x);
	R1 += 0.00000000786 * Utils.cost(1.72357089999 + 3178.14579056760 * x);
	R1 += 0.00000000719 * Utils.cost(0.38924465445 + 6298.32832117640 * x);
	R1 += 0.00000000717 * Utils.cost(6.23927283856 + 3369.06161416760 * x);
	R1 += 0.00000000704 * Utils.cost(1.96763488855 + 6688.33840040040 * x);
	R1 += 0.00000000882 * Utils.cost(2.10339285493 + 2301.58581590939 * x);
	R1 += 0.00000000913 * Utils.cost(2.30662326829 + 13517.87010623340 * x);
	R1 += 0.00000000914 * Utils.cost(4.36610748804 + 13365.97282514820 * x);
	R1 += 0.00000000659 * Utils.cost(3.40905557071 + 1648.44675719740 * x);
	R1 += 0.00000000828 * Utils.cost(2.13305589137 + 7903.07341972100 * x);
	R1 += 0.00000000652 * Utils.cost(5.97050449428 + 574.34479833480 * x);
	R1 += 0.00000000688 * Utils.cost(4.02232587894 + 1052.26838318840 * x);
	R1 += 0.00000000709 * Utils.cost(2.24658423912 + 9225.53927328300 * x);
	R1 += 0.00000000590 * Utils.cost(0.67418318613 + 8955.34180290940 * x);
	R1 += 0.00000000604 * Utils.cost(2.73550395152 + 16858.48253293320 * x);
	R1 += 0.00000000785 * Utils.cost(3.58704322751 + 2693.60159338500 * x);
	R1 += 0.00000000570 * Utils.cost(4.11146135269 + 6034.21402008480 * x);
	R1 += 0.00000000624 * Utils.cost(4.45415856101 + 12964.30070339100 * x);
	R1 += 0.00000000563 * Utils.cost(3.72383942144 + 13119.72110282519 * x);
	R1 += 0.00000000547 * Utils.cost(3.04142188931 + 2707.82868738660 * x);
	R1 += 0.00000000536 * Utils.cost(4.65546776421 + 135.06508003540 * x);
	R1 += 0.00000000680 * Utils.cost(3.62640859214 + 6048.44111408640 * x);
	R1 += 0.00000000535 * Utils.cost(3.32503801413 + 9779.10867612540 * x);
	R1 += 0.00000000615 * Utils.cost(0.31792697641 + 7910.18696672180 * x);
	R1 += 0.00000000506 * Utils.cost(1.24339056369 + 4555.34744602040 * x);
	R1 += 0.00000000633 * Utils.cost(1.32124830132 + 2648.45482547300 * x);
	R1 += 0.00000000671 * Utils.cost(2.88173567087 + 3316.73398895200 * x);
	R1 += 0.00000000570 * Utils.cost(4.94522781693 + 6923.95345737360 * x);
	R1 += 0.00000000489 * Utils.cost(0.48479532469 + 12935.85151592320 * x);
	R1 += 0.00000000490 * Utils.cost(1.57712746955 + 162.46663613220 * x);
	R1 += 0.00000000492 * Utils.cost(4.08592823251 + 10021.90459040220 * x);
	R1 += 0.00000000468 * Utils.cost(4.50628939729 + 2384.32327072920 * x);
	R1 += 0.00000000462 * Utils.cost(1.30653882308 + 17256.63153634140 * x);
	R1 += 0.00000000444 * Utils.cost(5.20556841675 + 13358.92658845020 * x);
	R1 += 0.00000000511 * Utils.cost(5.29436707935 + 853.19638175200 * x);
	R1 += 0.00000000458 * Utils.cost(5.52316111365 + 6438.49624942560 * x);
	R1 += 0.00000000443 * Utils.cost(4.37626774329 + 12168.00269657460 * x);
	R1 += 0.00000000429 * Utils.cost(4.06329082027 + 149.56319713460 * x);
	R1 += 0.00000000502 * Utils.cost(6.12188881856 + 8273.82086703240 * x);
	R1 += 0.00000000420 * Utils.cost(3.51990468754 + 9168.64089834740 * x);
	R1 += 0.00000000452 * Utils.cost(0.15931716927 + 7895.95987272020 * x);
	R1 += 0.00000000401 * Utils.cost(0.93276882765 + 433.71173787680 * x);
	R1 += 0.00000000491 * Utils.cost(4.49372643902 + 10021.76996979660 * x);
	R1 += 0.00000000390 * Utils.cost(1.26790524143 + 5459.37628707820 * x);
	R1 += 0.00000000460 * Utils.cost(3.56765356005 + 1596.18644228460 * x);
	R1 += 0.00000000514 * Utils.cost(4.14617297678 + 16460.33352952499 * x);
	R1 += 0.00000000510 * Utils.cost(2.12338136542 + 3335.08950239240 * x);
	R1 += 0.00000000365 * Utils.cost(0.84035244694 + 3364.49086444760 * x);
	R1 += 0.00000000444 * Utils.cost(0.42154996651 + 9866.41688066520 * x);
	R1 += 0.00000000380 * Utils.cost(2.74315160117 + 3344.49376205780 * x);
	R1 += 0.00000000355 * Utils.cost(2.20831807719 + 5518.75014899180 * x);
	R1 += 0.00000000374 * Utils.cost(0.93920520997 + 3863.18984479360 * x);
	R1 += 0.00000000380 * Utils.cost(0.60825828556 + 3980.50971301380 * x);
	R1 += 0.00000000366 * Utils.cost(1.45297694305 + 1039.02661079040 * x);
	R1 += 0.00000000458 * Utils.cost(5.01867719021 + 10551.52824519400 * x);
	R1 += 0.00000000352 * Utils.cost(5.59661824792 + 16062.18452611680 * x);
	R1 += 0.00000000361 * Utils.cost(5.43698827477 + 11236.57229942000 * x);
	R1 += 0.00000000323 * Utils.cost(3.25474887566 + 3116.26763099790 * x);
	R1 += 0.00000000396 * Utils.cost(5.43635200834 + 16173.37116840440 * x);
	R1 += 0.00000000316 * Utils.cost(5.10862851689 + 17395.21973472580 * x);
	R1 += 0.00000000325 * Utils.cost(4.59103320065 + 19800.94595622480 * x);
	R1 += 0.00000000320 * Utils.cost(0.10022132590 + 1692.16566950240 * x);
	R1 += 0.00000000313 * Utils.cost(4.76509182263 + 3304.58456002240 * x);
	R1 += 0.00000000329 * Utils.cost(3.51515201342 + 1903.43681250120 * x);
	R1 += 0.00000000361 * Utils.cost(1.40179572820 + 8270.29774868340 * x);
	R1 += 0.00000000380 * Utils.cost(1.11278812152 + 3503.07906283200 * x);
	R1 += 0.00000000309 * Utils.cost(1.63585786252 + 11081.21921028860 * x);
	R1 += 0.00000000304 * Utils.cost(6.27804875103 + 2391.43681773000 * x);
	R1 += 0.00000000336 * Utils.cost(2.95777936427 + 6680.24453233140 * x);
	R1 += 0.00000000299 * Utils.cost(0.48751113813 + 3347.65866339780 * x);
	R1 += 0.00000000327 * Utils.cost(3.19951479738 + 3981.49003408200 * x);
	R1 += 0.00000000298 * Utils.cost(4.26967988388 + 13936.79450513400 * x);
	R1 += 0.00000000309 * Utils.cost(5.05775078180 + 12721.57209941700 * x);
	R1 += 0.00000000310 * Utils.cost(6.10243075443 + 17924.91069982040 * x);
	R1 += 0.00000000290 * Utils.cost(4.52880846817 + 5724.93569742900 * x);
	R1 += 0.00000000279 * Utils.cost(4.30091602167 + 3607.21946842160 * x);
	R1 += 0.00000000293 * Utils.cost(1.90646493379 + 6702.00024889200 * x);
	R1 += 0.00000000375 * Utils.cost(5.37146136739 + 3376.64029337720 * x);
	R1 += 0.00000000268 * Utils.cost(4.93796347898 + 13760.59871020740 * x);
	R1 += 0.00000000269 * Utils.cost(5.63342755549 + 4032.77002792660 * x);
	R1 += 0.00000000361 * Utils.cost(4.70448724123 + 9380.95967271720 * x);
	R1 += 0.00000000285 * Utils.cost(4.37639190605 + 6040.34724601740 * x);
	R1 += 0.00000000305 * Utils.cost(3.60878132297 + 7255.56965173440 * x);
	R1 += 0.00000000265 * Utils.cost(5.82002998533 + 1214.73501932060 * x);
	R1 += 0.00000000246 * Utils.cost(3.48844723382 + 3237.51965248120 * x);
	R1 += 0.00000000339 * Utils.cost(6.05128485092 + 6660.44945790720 * x);
	R1 += 0.00000000325 * Utils.cost(5.12798981834 + 11250.79939342160 * x);
	R1 += 0.00000000243 * Utils.cost(0.48346700024 + 13362.43245314700 * x);
	R1 += 0.00000000246 * Utils.cost(4.41923388458 + 3546.79797513700 * x);
	R1 += 0.00000000239 * Utils.cost(3.73073204843 + 76.26607127560 * x);
	R1 += 0.00000000239 * Utils.cost(6.27709788173 + 1964.83862685400 * x);
	R1 += 0.00000000242 * Utils.cost(2.51411096474 + 13362.46696045140 * x);
	R1 += 0.00000000238 * Utils.cost(4.61745673345 + 17277.40693183380 * x);
	R1 += 0.00000000232 * Utils.cost(3.13987850882 + 20199.09495963300 * x);
	R1 += 0.00000000245 * Utils.cost(3.88310965561 + 4407.10790388980 * x);
	R1 += 0.00000000242 * Utils.cost(3.07232693388 + 12566.15169998280 * x);
	R1 += 0.00000000277 * Utils.cost(3.88618268628 + 10596.18207843420 * x);
	R1 += 0.00000000277 * Utils.cost(6.14459469980 + 19402.79695281660 * x);
	R1 += 0.00000000222 * Utils.cost(2.20253799065 + 7107.82304427560 * x);
	R1 += 0.00000000218 * Utils.cost(1.37621606096 + 3415.39402526710 * x);
	R1 += 0.00000000297 * Utils.cost(3.78408680173 + 2766.26762836500 * x);
	R1 += 0.00000000264 * Utils.cost(5.35345322905 + 6816.28993343500 * x);
	R1 += 0.00000000213 * Utils.cost(1.10915354432 + 19004.64794940840 * x);
	R1 += 0.00000000213 * Utils.cost(4.60032427636 + 3973.39616601300 * x);
	R1 += 0.00000000230 * Utils.cost(4.39356021431 + 26724.89941359840 * x);
	R1 += 0.00000000202 * Utils.cost(0.60981942427 + 6677.63442474780 * x);
	R1 += 0.00000000268 * Utils.cost(5.05058237041 + 9381.93999378540 * x);
	R1 += 0.00000000199 * Utils.cost(1.34402137469 + 8329.67161059700 * x);
	R1 += 0.00000000198 * Utils.cost(5.08527311506 + 5820.91492464680 * x);
	R1 += 0.00000000201 * Utils.cost(0.05002970566 + 11780.49035851620 * x);
	R1 += 0.00000000199 * Utils.cost(2.66187512344 + 6696.47732458460 * x);
	R1 += 0.00000000227 * Utils.cost(1.69939961119 + 18984.29263000960 * x);
	R1 += 0.00000000217 * Utils.cost(4.71565260831 + 8671.96987044060 * x);
	R1 += 0.00000000199 * Utils.cost(0.66532566162 + 15664.03552270859 * x);
	R1 += 0.00000000201 * Utils.cost(3.90133282111 + 266.60704172180 * x);
	R1 += 0.00000000242 * Utils.cost(0.76562027191 + 3281.23856478620 * x);
	R1 += 0.00000000254 * Utils.cost(6.07712146530 + 14054.60730802600 * x);
	R1 += 0.00000000193 * Utils.cost(6.08798590746 + 8982.81066930900 * x);
	R1 += 0.00000000202 * Utils.cost(1.12506176909 + 6684.81528205140 * x);
	R1 += 0.00000000212 * Utils.cost(0.41763591084 + 5732.04924442980 * x);
	R1 += 0.00000000191 * Utils.cost(0.63315794517 + 3017.10701004240 * x);
	R1 += 0.00000000184 * Utils.cost(5.68898048651 + 5642.19824260920 * x);
	R1 += 0.00000000180 * Utils.cost(4.60366258431 + 10235.13637553740 * x);
	R1 += 0.00000000198 * Utils.cost(1.01742381306 + 3336.73109134180 * x);
	R1 += 0.00000000207 * Utils.cost(0.80702499658 + 3877.41693879520 * x);
	R1 += 0.00000000202 * Utils.cost(1.61753574776 + 11216.28429032400 * x);
	R1 += 0.00000000177 * Utils.cost(0.20305783491 + 22743.40937951640 * x);
	R1 += 0.00000000181 * Utils.cost(6.17864681592 + 4885.96640967860 * x);
	R1 += 0.00000000228 * Utils.cost(0.90779655425 + 18454.60166491500 * x);
	R1 += 0.00000000165 * Utils.cost(3.97299091423 + 20.35531939880 * x);
	R1 += 0.00000000206 * Utils.cost(3.58770221682 + 3205.54734666440 * x);
	R1 += 0.00000000185 * Utils.cost(2.77088436060 + 220.41264243880 * x);
	R1 += 0.00000000163 * Utils.cost(0.00569068383 + 1437.17561419860 * x);
	R1 += 0.00000000185 * Utils.cost(6.23128875160 + 6660.86953400080 * x);
	R1 += 0.00000000164 * Utils.cost(4.64548469502 + 3253.30422216000 * x);
	R1 += 0.00000000210 * Utils.cost(4.85590304986 + 5618.31980486140 * x);
	R1 += 0.00000000226 * Utils.cost(1.76563729092 + 5625.36604155940 * x);
	R1 += 0.00000000163 * Utils.cost(0.67931390118 + 12310.18132361080 * x);
	R1 += 0.00000000211 * Utils.cost(1.51278040364 + 4039.88357492740 * x);
	R1 += 0.00000000177 * Utils.cost(2.14779710666 + 3346.13535100720 * x);
	R1 += 0.00000000154 * Utils.cost(3.33525296567 + 9070.11887384880 * x);
	R1 += 0.00000000178 * Utils.cost(1.65162116131 + 10713.99488132620 * x);
	R1 += 0.00000000156 * Utils.cost(6.12783235584 + 103.09277421860 * x);
	R1 += 0.00000000155 * Utils.cost(3.51854579269 + 7373.38245462640 * x);
	R1 += 0.00000000157 * Utils.cost(4.91614155659 + 15508.61512327440 * x);
	R1 += 0.00000000191 * Utils.cost(1.74459210202 + 10022.81760116760 * x);
	R1 += 0.00000000178 * Utils.cost(3.53665589741 + 533.21408344360 * x);
	R1 += 0.00000000154 * Utils.cost(2.64640687885 + 3333.56619000180 * x);
	R1 += 0.00000000162 * Utils.cost(1.27235392680 + 5415.65737477320 * x);
	R1 += 0.00000000144 * Utils.cost(1.30886254982 + 6460.81221096080 * x);
	R1 += 0.00000000173 * Utils.cost(3.76291627342 + 3561.02506913860 * x);
	R1 += 0.00000000144 * Utils.cost(0.86629692094 + 7380.49600162720 * x);
	R1 += 0.00000000150 * Utils.cost(0.23529641094 + 1228.96211332220 * x);
	R1 += 0.00000000144 * Utils.cost(0.12285484149 + 647.01083331480 * x);
	R1 += 0.00000000160 * Utils.cost(0.24157324936 + 11614.43329373220 * x);
	R1 += 0.00000000146 * Utils.cost(4.76067886088 + 16706.58525184800 * x);
	R1 += 0.00000000188 * Utils.cost(2.96688973732 + 2178.13772229200 * x);
	R1 += 0.00000000175 * Utils.cost(1.66915420767 + 22345.26037610820 * x);
	R1 += 0.00000000141 * Utils.cost(1.75571255457 + 3657.00429635640 * x);
	R1 += 0.00000000145 * Utils.cost(0.71777671857 + 6784.31762761820 * x);
	R1 += 0.00000000138 * Utils.cost(2.74151377335 + 6546.15977336420 * x);
	R1 += 0.00000000139 * Utils.cost(4.12056692213 + 3351.24909204960 * x);
	R1 += 0.00000000152 * Utils.cost(4.88528890547 + 110.20632121940 * x);
	R1 += 0.00000000134 * Utils.cost(0.86682710306 + 3603.69635007260 * x);
	R1 += 0.00000000170 * Utils.cost(5.54401695608 + 3265.83082813250 * x);
	R1 += 0.00000000165 * Utils.cost(2.74557093704 + 4672.66731424060 * x);
	R1 += 0.00000000129 * Utils.cost(0.94520493983 + 419.48464387520 * x);
	R1 += 0.00000000167 * Utils.cost(3.43007767272 + 1581.95934828300 * x);
	R1 += 0.00000000136 * Utils.cost(3.68877945956 + 13171.00144068760 * x);
	R1 += 0.00000000160 * Utils.cost(0.68321924763 + 6475.03930496240 * x);
	R1 += 0.00000000129 * Utils.cost(4.46548223743 + 9499.25986200560 * x);
	R1 += 0.00000000144 * Utils.cost(1.88085102951 + 9468.26787725700 * x);
	R1 += 0.00000000149 * Utils.cost(3.49118810274 + 14158.74771361560 * x);
	R1 += 0.00000000138 * Utils.cost(1.92770959208 + 15.25247118500 * x);
	R1 += 0.00000000172 * Utils.cost(0.23189971635 + 12323.42309600880 * x);
	R1 += 0.00000000121 * Utils.cost(1.75813513715 + 4379.63903749020 * x);
	R1 += 0.00000000120 * Utils.cost(6.04299490267 + 6606.44325483230 * x);
	R1 += 0.00000000134 * Utils.cost(1.98845453946 + 8965.97846825920 * x);
	R1 += 0.00000000118 * Utils.cost(0.22641710036 + 11766.26326451460 * x);
	R1 += 0.00000000122 * Utils.cost(2.92219895926 + 21947.11137270000 * x);
	R1 += 0.00000000147 * Utils.cost(5.86576524955 + 3169.93955608060 * x);
	R1 += 0.00000000121 * Utils.cost(5.75886629308 + 19513.98359510420 * x);
	R1 += 0.00000000119 * Utils.cost(3.93419985914 + 4936.79886898440 * x);
	R1 += 0.00000000123 * Utils.cost(4.65853055862 + 13149.15061136120 * x);
	R1 += 0.00000000151 * Utils.cost(4.38870879458 + 13362.51701710200 * x);
	R1 += 0.00000000134 * Utils.cost(4.49208622602 + 2480.30249794700 * x);
	R1 += 0.00000000115 * Utils.cost(5.78268772131 + 12722.55242048520 * x);
	R1 += 0.00000000126 * Utils.cost(4.43971496486 + 3568.08855948880 * x);
	R1 += 0.00000000114 * Utils.cost(0.36704570747 + 3384.33133900480 * x);
	R1 += 0.00000000117 * Utils.cost(0.67607782416 + 13207.02930736500 * x);
	R1 += 0.00000000124 * Utils.cost(5.80386208894 + 10721.10842832700 * x);
	R1 += 0.00000000115 * Utils.cost(0.23672592056 + 224.34479570190 * x);
	R1 += 0.00000000110 * Utils.cost(0.26402316132 + 3077.52850332700 * x);
	R1 += 0.00000000112 * Utils.cost(3.50979462224 + 1375.77379984580 * x);
	R1 += 0.00000000108 * Utils.cost(5.30086016687 + 10264.56588407340 * x);
	R1 += 0.00000000146 * Utils.cost(2.36972522432 + 4989.05918389720 * x);
	R1 += 0.00000000143 * Utils.cost(0.92798026058 + 5401.43028077160 * x);
	R1 += 0.00000000111 * Utils.cost(2.47771615302 + 18606.49894600020 * x);
	R1 += 0.00000000124 * Utils.cost(1.13870545502 + 2807.39834325620 * x);
	R1 += 0.00000000105 * Utils.cost(5.87122793977 + 4193.80880845180 * x);
	R1 += 0.00000000115 * Utils.cost(3.01754571849 + 1118.75579210280 * x);
	R1 += 0.00000000107 * Utils.cost(2.03274473347 + 25685.87280280800 * x);
	R1 += 0.00000000107 * Utils.cost(4.82345245872 + 13362.38239649640 * x);
	R1 += 0.00000000105 * Utils.cost(1.21018340855 + 8584.66166590080 * x);
	R1 += 0.00000000104 * Utils.cost(5.07527834174 + 23141.55838292460 * x);
	R1 += 0.00000000100 * Utils.cost(4.08698733114 + 3511.28529731900 * x);
	R1 += 0.00000000105 * Utils.cost(1.13833234280 + 1162.47470440780 * x);
	R1 += 0.00000000102 * Utils.cost(2.55243872323 + 664.75604513000 * x);
	R1 += 0.00000000138 * Utils.cost(3.04361079523 + 3329.97576135000 * x);
	R1 += 0.00000000130 * Utils.cost(3.04769575195 + 3341.03250279340 * x);
	R1 += 0.00000000117 * Utils.cost(2.97177407391 + 9602.35263622420 * x);
	R1 += 0.00000000098 * Utils.cost(4.54292546461 + 3362.46325602620 * x);
	R1 += 0.00000000097 * Utils.cost(2.21618504638 + 10042.61267559180 * x);
	R1 += 0.00000000100 * Utils.cost(5.45541648580 + 3024.22055704320 * x);
	R1 += 0.00000000097 * Utils.cost(1.55448890675 + 8799.98871377800 * x);
	R1 += 0.00000000107 * Utils.cost(5.15001764390 + 956.28915597060 * x);
	R1 += 0.00000000100 * Utils.cost(1.80839732601 + 6665.97238221460 * x);
	R1 += 0.00000000104 * Utils.cost(0.04641040148 + 10001.06188460700 * x);
	R1 += 0.00000000097 * Utils.cost(0.30502193916 + 10014.72373309860 * x);
	R1 += 0.00000000125 * Utils.cost(3.71144870102 + 3873.82651014340 * x);
	R1 += 0.00000000102 * Utils.cost(5.38933965862 + 13892.14067189380 * x);
	R1 += 0.00000000108 * Utils.cost(4.33438895790 + 3490.17562383440 * x);
	R1 += 0.00000000095 * Utils.cost(2.32591017464 + 10028.95082710020 * x);
	R1 += 0.00000000113 * Utils.cost(1.74323945160 + 11610.91017538320 * x);
	R1 += 0.00000000119 * Utils.cost(4.94578003013 + 3443.70520091840 * x);
	R1 += 0.00000000096 * Utils.cost(1.63239207663 + 11925.27409260060 * x);
	R1 += 0.00000000124 * Utils.cost(0.82697196609 + 9638.94074787620 * x);
	R1 += 0.00000000101 * Utils.cost(1.51065535085 + 1062.90504853820 * x);
	R1 += 0.00000000107 * Utils.cost(4.36653716080 + 6531.66165626500 * x);
	R1 += 0.00000000090 * Utils.cost(2.01534774170 + 22324.90505670940 * x);
	R1 += 0.00000000094 * Utils.cost(4.85202869277 + 14047.49376102520 * x);
	R1 += 0.00000000089 * Utils.cost(1.23714034226 + 20809.46762464520 * x);
	R1 += 0.00000000095 * Utils.cost(5.69916785631 + 6717.25272007700 * x);
	R1 += 0.00000000095 * Utils.cost(2.15038299943 + 8013.27974094040 * x);
	R1 += 0.00000000111 * Utils.cost(3.91313035726 + 3311.18291816379 * x);
	R1 += 0.00000000089 * Utils.cost(1.37925538521 + 74.78159856730 * x);
	R1 += 0.00000000094 * Utils.cost(3.24872875047 + 6657.34641565180 * x);
	R1 += 0.00000000089 * Utils.cost(0.70324117212 + 23.87843774780 * x);
	R1 += 0.00000000087 * Utils.cost(0.40376031248 + 2221.85663459700 * x);
	R1 += 0.00000000092 * Utils.cost(3.33165786190 + 2540.79130153440 * x);
	R1 += 0.00000000120 * Utils.cost(3.09344469205 + 6685.10618875760 * x);
	R1 += 0.00000000087 * Utils.cost(4.92694309070 + 1505.28780909299 * x);
	R1 += 0.00000000091 * Utils.cost(1.66121998822 + 24150.08005134500 * x);
	R1 += 0.00000000090 * Utils.cost(5.47687082598 + 16699.53901514999 * x);
	R1 += 0.00000000119 * Utils.cost(2.53709230647 + 3312.16323923200 * x);
	R1 += 0.00000000118 * Utils.cost(5.56523997231 + 2814.44457995420 * x);
	R1 += 0.00000000093 * Utils.cost(1.61394240489 + 3341.04230982650 * x);
	R1 += 0.00000000084 * Utils.cost(1.19439840758 + 3450.81874791920 * x);
	R1 += 0.00000000085 * Utils.cost(4.95060410388 + 7314.00859271280 * x);
	R1 += 0.00000000084 * Utils.cost(3.92244493446 + 170.67287061920 * x);
	R1 += 0.00000000096 * Utils.cost(5.49205832489 + 3427.92063123960 * x);
	R1 += 0.00000000106 * Utils.cost(1.61703818023 + 3774.32416457660 * x);
	R1 += 0.00000000101 * Utils.cost(6.18535119914 + 5511.63660199100 * x);
	R1 += 0.00000000081 * Utils.cost(3.16562241132 + 52175.80628314840 * x);
	R1 += 0.00000000093 * Utils.cost(5.15512549422 + 3451.79906898740 * x);
	R1 += 0.00000000108 * Utils.cost(0.33314004399 + 6709.67404086740 * x);
	R1 += 0.00000000078 * Utils.cost(2.38080208142 + 13553.89797291080 * x);
	R1 += 0.00000000085 * Utils.cost(1.18588430640 + 6705.10329114740 * x);
	R1 += 0.00000000098 * Utils.cost(3.24856024758 + 25287.72379939980 * x);
	R1 += 0.00000000080 * Utils.cost(2.54327778068 + 6675.70192909220 * x);
	R1 += 0.00000000078 * Utils.cost(4.70533248161 + 24889.57479599160 * x);
	R1 += 0.00000000095 * Utils.cost(1.59916172961 + 4271.97551355160 * x);
	R1 += 0.00000000076 * Utils.cost(0.90799171644 + 2675.85638156980 * x);
	R1 += 0.00000000091 * Utils.cost(3.80728044706 + 2125.87740737920 * x);
	R1 += 0.00000000093 * Utils.cost(5.59480359619 + 3340.18254357310 * x);
	R1 += 0.00000000095 * Utils.cost(2.06299921822 + 6518.75821726740 * x);
	R1 += 0.00000000100 * Utils.cost(6.02550501045 + 3313.21087060300 * x);
	R1 += 0.00000000075 * Utils.cost(6.16095890090 + 3370.04193523580 * x);
	R1 += 0.00000000077 * Utils.cost(4.92444879515 + 3229.42578441220 * x);
	R1 += 0.00000000090 * Utils.cost(4.55063359845 + 6701.58017279840 * x);
	R1 += 0.00000000078 * Utils.cost(2.01202524407 + 14421.83163698840 * x);
	R1 += 0.00000000079 * Utils.cost(5.92142974185 + 6155.05700665400 * x);
	R1 += 0.00000000101 * Utils.cost(2.07923317336 + 15265.88651930040 * x);
	R1 += 0.00000000082 * Utils.cost(6.04078010866 + 3760.09707057500 * x);
	R1 += 0.00000000073 * Utils.cost(3.01106366205 + 206.18554843720 * x);
	R1 += 0.00000000078 * Utils.cost(1.71095661489 + 3399.98628861340 * x);
	R1 += 0.00000000073 * Utils.cost(3.32824316241 + 9588.12554222260 * x);
	R1 += 0.00000000076 * Utils.cost(1.74030672711 + 6756.00645196690 * x);
	R1 += 0.00000000073 * Utils.cost(1.44980946324 + 5408.54382777240 * x);
	R1 += 0.00000000077 * Utils.cost(5.64501410813 + 3209.07046501340 * x);
	R1 += 0.00000000080 * Utils.cost(5.70272305344 + 10156.90236013480 * x);
	R1 += 0.00000000075 * Utils.cost(3.83222347813 + 39048.32250960720 * x);
	R1 += 0.00000000072 * Utils.cost(0.82629826575 + 7366.26890762560 * x);
	R1 += 0.00000000083 * Utils.cost(4.71804515025 + 14061.72085502680 * x);
	R1 += 0.00000000072 * Utils.cost(4.35767091893 + 21548.96236929180 * x);
	R1 += 0.00000000086 * Utils.cost(1.50107043029 + 5989.06725217280 * x);
	R1 += 0.00000000073 * Utils.cost(3.77377582806 + 28628.33622609960 * x);
	R1 += 0.00000000082 * Utils.cost(0.78740181090 + 16276.46394262300 * x);
	R1 += 0.00000000070 * Utils.cost(2.69225539304 + 3296.89351439480 * x);
	R1 += 0.00000000069 * Utils.cost(1.01941228196 + 12295.95422960920 * x);
	R1 += 0.00000000081 * Utils.cost(4.64227979982 + 6947.83189512140 * x);
	R1 += 0.00000000094 * Utils.cost(0.74502278458 + 5244.04923920100 * x);
	R1 += 0.00000000067 * Utils.cost(4.47328871650 + 20206.14119633100 * x);
	R1 += 0.00000000091 * Utils.cost(2.95968633697 + 3326.38533269820 * x);
	R1 += 0.00000000076 * Utils.cost(2.86128350856 + 8542.97070603500 * x);
	R1 += 0.00000000065 * Utils.cost(1.31079130285 + 23546.75362303080 * x);
	R1 += 0.00000000065 * Utils.cost(3.31422850411 + 6414.61781167780 * x);
	R1 += 0.00000000064 * Utils.cost(3.98415414793 + 3368.01398279660 * x);
	R1 += 0.00000000065 * Utils.cost(4.15810281695 + 3340.19235060619 * x);
	R1 += 0.00000000071 * Utils.cost(3.82044323862 + 6578.13207918100 * x);
	R1 += 0.00000000080 * Utils.cost(1.02128994578 + 7321.12213971360 * x);
	R1 += 0.00000000064 * Utils.cost(1.07965886113 + 6944.30877677240 * x);
	R1 += 0.00000000064 * Utils.cost(1.20215520018 + 38.13303563780 * x);
	R1 += 0.00000000070 * Utils.cost(5.11166911478 + 9485.03276800400 * x);
	R1 += 0.00000000067 * Utils.cost(2.22216014849 + 4845.90023579280 * x);
	R1 += 0.00000000083 * Utils.cost(1.86067842148 + 931.36308685180 * x);
	R1 += 0.00000000063 * Utils.cost(0.45029141698 + 6418.14093002680 * x);
	R1 += 0.00000000062 * Utils.cost(5.68207205878 + 4459.36821880260 * x);
	R1 += 0.00000000062 * Utils.cost(0.62454636835 + 6688.27109009760 * x);
	R1 += 0.00000000076 * Utils.cost(0.41820625869 + 5032.77809620220 * x);
	R1 += 0.00000000062 * Utils.cost(5.72811519809 + 2008.55753915900 * x);
	R1 += 0.00000000060 * Utils.cost(1.98790201827 + 12199.97500239140 * x);
	R1 += 0.00000000078 * Utils.cost(2.18035217615 + 3232.94890276120 * x);
	R1 += 0.00000000060 * Utils.cost(1.08971396071 + 10124.93005431800 * x);
	R1 += 0.00000000072 * Utils.cost(4.08555524166 + 3416.87849797540 * x);
	R1 += 0.00000000061 * Utils.cost(2.49066420507 + 4005.36847182980 * x);
	R1 += 0.00000000059 * Utils.cost(2.93755144370 + 9886.77220006400 * x);
	R1 += 0.00000000069 * Utils.cost(1.02371083242 + 6621.85099148600 * x);
	R1 += 0.00000000061 * Utils.cost(4.57446273568 + 2277.70737816160 * x);
	R1 += 0.00000000059 * Utils.cost(4.74745481720 + 16865.52876963120 * x);
	R1 += 0.00000000069 * Utils.cost(3.62576981720 + 15906.76412668260 * x);
	R1 += 0.00000000058 * Utils.cost(4.15993379336 + 1854.63230563460 * x);
	R1 += 0.00000000060 * Utils.cost(4.92798256747 + 3391.89276456221 * x);
	R1 += 0.00000000070 * Utils.cost(4.51699340219 + 16304.91313009080 * x);
	R1 += 0.00000000056 * Utils.cost(3.59354639280 + 7322.10246078180 * x);
	R1 += 0.00000000068 * Utils.cost(0.81217091970 + 16703.04487984680 * x);
	R1 += 0.00000000056 * Utils.cost(3.19997567622 + 4140.43355186520 * x);
	R1 += 0.00000000058 * Utils.cost(1.73479637157 + 2409.24933984800 * x);
	R1 += 0.00000000054 * Utils.cost(5.54310937490 + 2604.73591316800 * x);
	R1 += 0.00000000059 * Utils.cost(2.02922256380 + 45486.81875903279 * x);
	R1 += 0.00000000063 * Utils.cost(5.29505507594 + 17101.21113690720 * x);
	R1 += 0.00000000054 * Utils.cost(4.88230660750 + 48300.16010269000 * x);
	R1 += 0.00000000071 * Utils.cost(4.84381041200 + 3289.33208883739 * x);
	R1 += 0.00000000054 * Utils.cost(1.76917054114 + 3510.19260983280 * x);
	R1 += 0.00000000063 * Utils.cost(2.80175814276 + 16894.51039961060 * x);
	R1 += 0.00000000058 * Utils.cost(0.91631357427 + 10018.24685144760 * x);
	R1 += 0.00000000054 * Utils.cost(1.06826755543 + 8948.22825590860 * x);
	R1 += 0.00000000072 * Utils.cost(1.36121375974 + 10025.42770875120 * x);
	R1 += 0.00000000061 * Utils.cost(0.92427393171 + 17468.85519794540 * x);
	R1 += 0.00000000068 * Utils.cost(2.84271358352 + 16703.07938715119 * x);
	R1 += 0.00000000053 * Utils.cost(3.42679182927 + 14867.73751589219 * x);
	R1 += 0.00000000054 * Utils.cost(0.41070672545 + 18451.07854656599 * x);
	R1 += 0.00000000060 * Utils.cost(5.86922287544 + 7447.01791784600 * x);
	R1 += 0.00000000051 * Utils.cost(1.64684042106 + 3472.15438838620 * x);
	R1 += 0.00000000057 * Utils.cost(6.13250399703 + 17085.95866572220 * x);
	R1 += 0.00000000053 * Utils.cost(4.16969434701 + 6106.88005506480 * x);
	R1 += 0.00000000050 * Utils.cost(3.17196717347 + 2111.65031337760 * x);
	R1 += 0.00000000055 * Utils.cost(5.72607545560 + 10706.88133432540 * x);
	R1 += 0.00000000062 * Utils.cost(0.57333106196 + 3171.03224356680 * x);
	R1 += 0.00000000053 * Utils.cost(1.29007833025 + 6652.77566593180 * x);
	R1 += 0.00000000050 * Utils.cost(2.96441858632 + 10037.08975128440 * x);
	R1 += 0.00000000065 * Utils.cost(5.11165617529 + 3113.13629391080 * x);
	R1 += 0.00000000053 * Utils.cost(4.87447079015 + 1485.98012106520 * x);
	R1 += 0.00000000050 * Utils.cost(2.52848298042 + 10448.43547097540 * x);
	R1 += 0.00000000059 * Utils.cost(1.69623653028 + 4025.65648092580 * x);
	R1 += 0.00000000047 * Utils.cost(5.15559748285 + 12012.58229714040 * x);
	R1 += 0.00000000049 * Utils.cost(1.19473362353 + 3448.27595063840 * x);
	R1 += 0.00000000063 * Utils.cost(1.01191427607 + 11769.85369316640 * x);
	R1 += 0.00000000064 * Utils.cost(3.86219786087 + 18208.34994259200 * x);
	R1 += 0.00000000059 * Utils.cost(2.96261275062 + 14071.43950907579 * x);
	R1 += 0.00000000049 * Utils.cost(1.41657179779 + 2938.94030494260 * x);
	R1 += 0.00000000048 * Utils.cost(2.95878690387 + 11527.12508919240 * x);
	R1 += 0.00000000052 * Utils.cost(0.01971915447 + 8226.57883637840 * x);
	R1 += 0.00000000045 * Utils.cost(5.07966377852 + 3318.76159737340 * x);
	R1 += 0.00000000043 * Utils.cost(1.23879381294 + 7218.02936549500 * x);
	R1 += 0.00000000058 * Utils.cost(5.58121433163 + 6643.09181776180 * x);
	R1 += 0.00000000048 * Utils.cost(5.02446939402 + 6645.19698672220 * x);
	R1 += 0.00000000043 * Utils.cost(0.69492704598 + 20995.39296644940 * x);
	R1 += 0.00000000044 * Utils.cost(4.02272101657 + 9389.05354078620 * x);
	R1 += 0.00000000055 * Utils.cost(4.38138154697 + 1478.86657406440 * x);
	R1 += 0.00000000051 * Utils.cost(4.24292455428 + 792.77488846740 * x);
	R1 += 0.00000000042 * Utils.cost(2.74826708762 + 14577.18472611980 * x);
	R1 += 0.00000000044 * Utils.cost(4.18397905503 + 8535.85715903420 * x);
	R1 += 0.00000000047 * Utils.cost(1.33588473182 + 632.78373931320 * x);
	R1 += 0.00000000042 * Utils.cost(5.05676915852 + 3397.51080163540 * x);
	R1 += 0.00000000042 * Utils.cost(0.28204510006 + 10001.48196070061 * x);
	R1 += 0.00000000042 * Utils.cost(0.75310918544 + 6357.71943674220 * x);
	R1 += 0.00000000042 * Utils.cost(4.94532732982 + 18052.92954315780 * x);
	R1 += 0.00000000052 * Utils.cost(4.09912687749 + 5835.14201864840 * x);
	R1 += 0.00000000054 * Utils.cost(2.46533302314 + 8186.51266249260 * x);
	R1 += 0.00000000043 * Utils.cost(4.77713978044 + 32124.36905223359 * x);
	R1 += 0.00000000053 * Utils.cost(6.08293348275 + 3377.21779200400 * x);
	R1 += 0.00000000041 * Utils.cost(2.51168269556 + 4186.69526145100 * x);
	R1 += 0.00000000041 * Utils.cost(1.24482327948 + 3212.59358336240 * x);
	R1 += 0.00000000041 * Utils.cost(5.42003026893 + 685.04405422600 * x);
	R1 += 0.00000000041 * Utils.cost(5.04768364997 + 6571.01853218020 * x);
	R1 += 0.00000000042 * Utils.cost(2.08904552145 + 13363.43002786740 * x);
	R1 += 0.00000000048 * Utils.cost(4.82888746454 + 1835.32461760680 * x);
	R1 += 0.00000000043 * Utils.cost(4.17203713456 + 43340.65334255760 * x);
	R1 += 0.00000000046 * Utils.cost(0.81640935106 + 45884.96776244100 * x);
	R1 += 0.00000000042 * Utils.cost(2.26773068307 + 12729.66596748600 * x);
	R1 += 0.00000000039 * Utils.cost(5.85791936573 + 846.08283475120 * x);
	R1 += 0.00000000043 * Utils.cost(2.90976420757 + 6872.67311951120 * x);
	R1 += 0.00000000045 * Utils.cost(1.98725045807 + 1861.74585263540 * x);
	R1 += 0.00000000045 * Utils.cost(0.50053853542 + 14128.24277124560 * x);
	R1 += 0.00000000046 * Utils.cost(2.86512929328 + 38650.17350619900 * x);
	R1 += 0.00000000038 * Utils.cost(3.65846461938 + 29698.28751133580 * x);
	R1 += 0.00000000039 * Utils.cost(4.57679716458 + 6901.63749583840 * x);
	R1 += 0.00000000039 * Utils.cost(3.85504465583 + 9945.57120882380 * x);
	R1 += 0.00000000040 * Utils.cost(0.06127203284 + 9947.05568153210 * x);
	R1 += 0.00000000043 * Utils.cost(5.28854105201 + 3274.12501778540 * x);
	R1 += 0.00000000047 * Utils.cost(6.25707790441 + 24606.13555322000 * x);
	R1 += 0.00000000037 * Utils.cost(5.02115296017 + 11128.97608578420 * x);
	R1 += 0.00000000039 * Utils.cost(1.71421919870 + 7696.88787128380 * x);
	R1 += 0.00000000037 * Utils.cost(4.34652985120 + 3283.71405176420 * x);
	R1 += 0.00000000037 * Utils.cost(0.05572748092 + 21150.81336588360 * x);
	R1 += 0.00000000042 * Utils.cost(4.97872041460 + 13575.74880223720 * x);
	R1 += 0.00000000050 * Utils.cost(4.24170332288 + 7747.72033058960 * x);
	R1 += 0.00000000037 * Utils.cost(4.07496312186 + 8646.06348025360 * x);
	R1 += 0.00000000038 * Utils.cost(0.44080908793 + 24491.42579258340 * x);
	R1 += 0.00000000036 * Utils.cost(1.73681874925 + 3468.63127003720 * x);
	R1 += 0.00000000041 * Utils.cost(5.69294900686 + 26087.90314157420 * x);
	R1 += 0.00000000036 * Utils.cost(1.80256389689 + 8756.26980147300 * x);
	R1 += 0.00000000036 * Utils.cost(3.37374689465 + 48429.28218232440 * x);
	R1 += 0.00000000035 * Utils.cost(0.10555289345 + 8742.04270747140 * x);
	R1 += 0.00000000041 * Utils.cost(4.26832466355 + 21000.91589075680 * x);
	R1 += 0.00000000038 * Utils.cost(0.73199792046 + 26084.02180621620 * x);

	let R2 = 0;
	R2 += 0.00044242247 * Utils.cost(0.47930603943 + 3340.61242669980 * x);
	R2 += 0.00008138042 * Utils.cost(0.86998398093 + 6681.22485339960 * x);
	R2 += 0.00001274915 * Utils.cost(1.22594050809 + 10021.83728009940 * x);
	R2 += 0.00000187387 * Utils.cost(1.57298991982 + 13362.44970679920 * x);
	R2 += 0.00000040744 * Utils.cost(1.97080175060 + 3344.13554504880 * x);
	R2 -= 0.00000052396;
	R2 += 0.00000026616 * Utils.cost(1.91665615762 + 16703.06213349900 * x);
	R2 += 0.00000017825 * Utils.cost(4.43499505333 + 2281.23049651060 * x);
	R2 += 0.00000011713 * Utils.cost(4.52510453730 + 3185.19202726560 * x);
	R2 += 0.00000010209 * Utils.cost(5.39143469548 + 1059.38193018920 * x);
	R2 += 0.00000009950 * Utils.cost(0.41870577185 + 796.29800681640 * x);
	R2 += 0.00000009237 * Utils.cost(4.53579272961 + 2146.16541647520 * x);
	R2 += 0.00000007299 * Utils.cost(3.14218509183 + 2544.31441988340 * x);
	R2 += 0.00000007217 * Utils.cost(2.29300859074 + 6684.74797174860 * x);
	R2 += 0.00000006808 * Utils.cost(5.26702580055 + 155.42039943420 * x);
	R2 += 0.00000006528 * Utils.cost(2.30781369329 + 3738.76143010800 * x);
	R2 += 0.00000007785 * Utils.cost(5.93369079547 + 1748.01641306700 * x);
	R2 += 0.00000005840 * Utils.cost(1.05191350362 + 1349.86740965880 * x);
	R2 += 0.00000006749 * Utils.cost(5.30194395749 + 1194.44701022460 * x);
	R2 += 0.00000004695 * Utils.cost(0.76880586144 + 3097.88382272579 * x);
	R2 += 0.00000005391 * Utils.cost(1.00223256041 + 3149.16416058820 * x);
	R2 += 0.00000004406 * Utils.cost(2.45556303355 + 951.71840625060 * x);
	R2 += 0.00000004286 * Utils.cost(3.89643520638 + 1592.59601363280 * x);
	R2 += 0.00000003514 * Utils.cost(1.85168391963 + 398.14900340820 * x);
	R2 += 0.00000003699 * Utils.cost(2.26043707772 + 20043.67456019880 * x);
	R2 += 0.00000003377 * Utils.cost(3.81683532672 + 1751.53953141600 * x);
	R2 += 0.00000004585 * Utils.cost(0.80787441740 + 4136.91043351620 * x);
	R2 += 0.00000003201 * Utils.cost(2.11657635165 + 5614.72937620960 * x);
	R2 += 0.00000003622 * Utils.cost(1.32395191387 + 3333.49887969900 * x);
	R2 += 0.00000002916 * Utils.cost(1.19337460559 + 529.69096509460 * x);
	R2 += 0.00000002979 * Utils.cost(2.86481008776 + 6151.53388830500 * x);
	R2 += 0.00000003057 * Utils.cost(4.55276793064 + 5628.95647021120 * x);
	R2 += 0.00000002906 * Utils.cost(1.20295377623 + 3894.18182954220 * x);
	R2 += 0.00000003850 * Utils.cost(3.86055626689 + 553.56940284240 * x);
	R2 += 0.00000002820 * Utils.cost(2.48683324916 + 1990.74501704100 * x);
	R2 += 0.00000002657 * Utils.cost(6.07411629964 + 4292.33083295040 * x);
	R2 += 0.00000002700 * Utils.cost(2.92139773350 + 3496.03282613400 * x);
	R2 += 0.00000002395 * Utils.cost(5.94175921617 + 2787.04302385740 * x);
	R2 += 0.00000002264 * Utils.cost(2.56219866409 + 191.44826611160 * x);
	R2 += 0.00000002167 * Utils.cost(5.36812435483 + 8962.45534991020 * x);
	R2 += 0.00000002149 * Utils.cost(2.74950075397 + 242.72860397400 * x);
	R2 += 0.00000002217 * Utils.cost(1.85265984462 + 3337.08930835080 * x);
	R2 += 0.00000001996 * Utils.cost(5.76429928131 + 3341.59274776800 * x);
	R2 += 0.00000001999 * Utils.cost(3.82349238481 + 2914.01423582380 * x);
	R2 += 0.00000001835 * Utils.cost(5.68592723044 + 1589.07289528380 * x);
	R2 += 0.00000001812 * Utils.cost(3.32042068028 + 5088.62883976680 * x);
	R2 += 0.00000002413 * Utils.cost(4.68291336853 + 4690.47983635860 * x);
	R2 += 0.00000001970 * Utils.cost(4.17480610904 + 3340.59517304760 * x);
	R2 += 0.00000001970 * Utils.cost(6.20643855008 + 3340.62968035200 * x);
	R2 += 0.00000001627 * Utils.cost(5.67733051452 + 4535.05943692440 * x);
	R2 += 0.00000002160 * Utils.cost(1.07452599834 + 2388.89402044920 * x);
	R2 += 0.00000001964 * Utils.cost(3.10805316088 + 3583.34103067380 * x);
	R2 += 0.00000001985 * Utils.cost(5.75850351840 + 4399.99435688900 * x);
	R2 += 0.00000001507 * Utils.cost(4.95936409838 + 382.89653222320 * x);
	R2 += 0.00000001278 * Utils.cost(4.82232889938 + 2957.71589447660 * x);
	R2 += 0.00000001475 * Utils.cost(2.22707926559 + 3723.50895892300 * x);
	R2 += 0.00000001196 * Utils.cost(3.26724458920 + 9492.14631500480 * x);
	R2 += 0.00000001349 * Utils.cost(4.87573224485 + 6525.80445396540 * x);
	R2 += 0.00000001433 * Utils.cost(2.69734916443 + 7079.37385680780 * x);
	R2 += 0.00000001224 * Utils.cost(2.62012336714 + 10025.36039844840 * x);
	R2 += 0.00000001404 * Utils.cost(5.19056026479 + 2700.71514038580 * x);
	R2 += 0.00000001202 * Utils.cost(0.93472783088 + 2810.92146160520 * x);
	R2 += 0.00000000869 * Utils.cost(5.81340811635 + 12303.06777661000 * x);
	R2 += 0.00000000867 * Utils.cost(2.20046640409 + 2699.73481931760 * x);
	R2 += 0.00000000830 * Utils.cost(2.01484544773 + 5092.15195811580 * x);
	R2 += 0.00000000855 * Utils.cost(5.96220147975 + 426.59819087600 * x);
	R2 += 0.00000000848 * Utils.cost(2.26407047301 + 6283.07584999140 * x);
	R2 += 0.00000000917 * Utils.cost(1.40295785881 + 6489.77658728800 * x);
	R2 += 0.00000000833 * Utils.cost(1.17384197174 + 7477.52286021600 * x);
	R2 += 0.00000001041 * Utils.cost(6.27171470048 + 3347.72597370060 * x);
	R2 += 0.00000000965 * Utils.cost(3.39855816541 + 5621.84292321040 * x);
	R2 += 0.00000000722 * Utils.cost(4.26304776331 + 4933.20844033260 * x);
	R2 += 0.00000000706 * Utils.cost(2.34131594714 + 7.11354700080 * x);
	R2 += 0.00000000768 * Utils.cost(2.06208352904 + 5486.77784317500 * x);
	R2 += 0.00000000953 * Utils.cost(2.11123497948 + 3870.30339179440 * x);
	R2 += 0.00000000844 * Utils.cost(2.23931963240 + 3553.91152213780 * x);
	R2 += 0.00000000646 * Utils.cost(2.24669034469 + 3340.54511639700 * x);
	R2 += 0.00000000653 * Utils.cost(3.99043329363 + 6677.70173505060 * x);
	R2 += 0.00000000714 * Utils.cost(0.29739480601 + 6681.24210705180 * x);
	R2 += 0.00000000828 * Utils.cost(0.22863617670 + 3532.06069281140 * x);
	R2 += 0.00000000612 * Utils.cost(1.55388376751 + 7234.79425624200 * x);
	R2 += 0.00000000714 * Utils.cost(4.54969883976 + 6681.20759974740 * x);
	R2 += 0.00000000586 * Utils.cost(3.30118433303 + 1221.84856632140 * x);
	R2 += 0.00000000646 * Utils.cost(1.83853693231 + 3340.67973700260 * x);
	R2 += 0.00000000560 * Utils.cost(5.05848353328 + 8031.09226305840 * x);
	R2 += 0.00000000651 * Utils.cost(0.15897472160 + 7632.94325965020 * x);
	R2 += 0.00000000488 * Utils.cost(3.08086378649 + 6836.64525283380 * x);
	R2 += 0.00000000534 * Utils.cost(4.25727954634 + 3339.63210563160 * x);
	R2 += 0.00000000504 * Utils.cost(2.59990772815 + 23384.28698689860 * x);
	R2 += 0.00000000372 * Utils.cost(6.27186983164 + 2487.41604494780 * x);
	R2 += 0.00000000343 * Utils.cost(4.71059403854 + 639.89728631400 * x);
	R2 += 0.00000000449 * Utils.cost(1.34123846614 + 640.87760738220 * x);
	R2 += 0.00000000342 * Utils.cost(5.96338023755 + 4929.68532198360 * x);
	R2 += 0.00000000329 * Utils.cost(2.65955258770 + 9623.68827669120 * x);
	R2 += 0.00000000352 * Utils.cost(6.09567212646 + 7740.60678358880 * x);
	R2 += 0.00000000326 * Utils.cost(6.05498346093 + 2118.76386037840 * x);
	R2 += 0.00000000403 * Utils.cost(4.96465831103 + 8969.56889691100 * x);
	R2 += 0.00000000402 * Utils.cost(2.84624835384 + 5331.35744374080 * x);
	R2 += 0.00000000319 * Utils.cost(1.44545457475 + 5729.50644714900 * x);
	R2 += 0.00000000303 * Utils.cost(0.01918776551 + 6127.65545055720 * x);
	R2 += 0.00000000297 * Utils.cost(5.74070606294 + 6041.32756708560 * x);
	R2 += 0.00000000297 * Utils.cost(3.06763224975 + 10419.98628350760 * x);
	R2 += 0.00000000282 * Utils.cost(6.04069352017 + 7875.67186362420 * x);
	R2 += 0.00000000278 * Utils.cost(5.11654962157 + 11773.37681151540 * x);
	R2 += 0.00000000259 * Utils.cost(2.89786343627 + 7210.91581849420 * x);
	R2 += 0.00000000273 * Utils.cost(3.83181794308 + 8429.24126646660 * x);
	R2 += 0.00000000256 * Utils.cost(1.08862226474 + 2288.34404351140 * x);
	R2 += 0.00000000288 * Utils.cost(6.13572687680 + 6682.20517446780 * x);
	R2 += 0.00000000302 * Utils.cost(3.61490647715 + 12832.75874170460 * x);
	R2 += 0.00000000235 * Utils.cost(2.21413387615 + 6681.29216370240 * x);
	R2 += 0.00000000317 * Utils.cost(3.60634897209 + 2301.58581590939 * x);
	R2 += 0.00000000289 * Utils.cost(5.08223311018 + 2274.11694950980 * x);
	R2 += 0.00000000254 * Utils.cost(0.36603904729 + 3767.21061757580 * x);
	R2 += 0.00000000235 * Utils.cost(2.62434481550 + 6681.15754309680 * x);
	R2 += 0.00000000226 * Utils.cost(3.45305949713 + 6923.95345737360 * x);
	R2 += 0.00000000205 * Utils.cost(3.88943452829 + 10018.31416175040 * x);
	R2 += 0.00000000206 * Utils.cost(3.44453113177 + 10177.25767953360 * x);
	R2 += 0.00000000210 * Utils.cost(0.57926734389 + 10973.55568635000 * x);
	R2 += 0.00000000194 * Utils.cost(1.57870686859 + 10818.13528691580 * x);
	R2 += 0.00000000190 * Utils.cost(2.42312911773 + 8955.34180290940 * x);
	R2 += 0.00000000194 * Utils.cost(2.45887376159 + 7064.12138562280 * x);
	R2 += 0.00000000193 * Utils.cost(0.58793888724 + 5828.02847164760 * x);
	R2 += 0.00000000183 * Utils.cost(1.68247271963 + 213.29909543800 * x);
	R2 += 0.00000000236 * Utils.cost(1.98863774162 + 10575.40668294180 * x);
	R2 += 0.00000000245 * Utils.cost(2.17761779228 + 4562.46099302120 * x);
	R2 += 0.00000000177 * Utils.cost(0.66379705293 + 10021.85453375160 * x);
	R2 += 0.00000000176 * Utils.cost(4.91607557961 + 10021.82002644720 * x);
	R2 += 0.00000000217 * Utils.cost(2.93968443649 + 13365.97282514820 * x);
	R2 += 0.00000000167 * Utils.cost(4.74764434327 + 3914.95722503460 * x);
	R2 += 0.00000000213 * Utils.cost(0.15734917857 + 2942.46342329160 * x);
	R2 += 0.00000000155 * Utils.cost(1.78776991092 + 9830.38901398780 * x);
	R2 += 0.00000000180 * Utils.cost(5.21088564787 + 9866.41688066520 * x);
	R2 += 0.00000000161 * Utils.cost(5.17683861380 + 6298.32832117640 * x);
	R2 += 0.00000000159 * Utils.cost(2.68980684850 + 6894.52394883760 * x);
	R2 += 0.00000000149 * Utils.cost(6.26524493469 + 1039.02661079040 * x);
	R2 += 0.00000000147 * Utils.cost(0.36939961702 + 6688.33840040040 * x);
	R2 += 0.00000000151 * Utils.cost(1.22272892290 + 574.34479833480 * x);
	R2 += 0.00000000137 * Utils.cost(2.09492296067 + 1066.49547719000 * x);
	R2 += 0.00000000165 * Utils.cost(6.15952050903 + 15643.68020330980 * x);
	R2 += 0.00000000163 * Utils.cost(4.66507592292 + 8273.82086703240 * x);
	R2 += 0.00000000124 * Utils.cost(0.67855210339 + 6438.49624942560 * x);
	R2 += 0.00000000128 * Utils.cost(1.69206367749 + 3981.49003408200 * x);
	R2 += 0.00000000116 * Utils.cost(2.78191248964 + 3360.96774609859 * x);
	R2 += 0.00000000128 * Utils.cost(0.84461423001 + 3355.86489788480 * x);
	R2 += 0.00000000124 * Utils.cost(1.63253732557 + 6674.11130639880 * x);
	R2 += 0.00000000120 * Utils.cost(0.31762150109 + 3127.31333126180 * x);
	R2 += 0.00000000129 * Utils.cost(2.26678583645 + 6467.92575796160 * x);
	R2 += 0.00000000104 * Utils.cost(0.07355376701 + 3325.35995551480 * x);
	R2 += 0.00000000130 * Utils.cost(4.41777190830 + 3320.25710730100 * x);
	R2 += 0.00000000095 * Utils.cost(1.31957248342 + 7903.07341972100 * x);
	R2 += 0.00000000114 * Utils.cost(0.65681602343 + 3178.14579056760 * x);
	R2 += 0.00000000092 * Utils.cost(4.98392367746 + 9779.10867612540 * x);
	R2 += 0.00000000101 * Utils.cost(4.10670787374 + 536.80451209540 * x);
	R2 += 0.00000000106 * Utils.cost(5.41622566807 + 15113.98923821520 * x);
	R2 += 0.00000000096 * Utils.cost(3.52561014696 + 3475.67750673520 * x);
	R2 += 0.00000000101 * Utils.cost(2.91169549546 + 692.15760122680 * x);
	R2 += 0.00000000093 * Utils.cost(3.21464368291 + 8671.96987044060 * x);
	R2 += 0.00000000087 * Utils.cost(5.24375873119 + 13119.72110282519 * x);
	R2 += 0.00000000106 * Utils.cost(3.76804681559 + 13517.87010623340 * x);
	R2 += 0.00000000089 * Utils.cost(5.73652101746 + 11371.70468975820 * x);
	R2 += 0.00000000104 * Utils.cost(5.90078964406 + 8432.76438481560 * x);
	R2 += 0.00000000099 * Utils.cost(3.61425346453 + 853.19638175200 * x);
	R2 += 0.00000000078 * Utils.cost(0.95802015551 + 3191.04922956520 * x);
	R2 += 0.00000000089 * Utils.cost(2.50872076312 + 1052.26838318840 * x);
	R2 += 0.00000000078 * Utils.cost(2.98115354616 + 26724.89941359840 * x);
	R2 += 0.00000000079 * Utils.cost(5.91514993930 + 6040.34724601740 * x);
	R2 += 0.00000000090 * Utils.cost(3.00950470302 + 12964.30070339100 * x);
	R2 += 0.00000000075 * Utils.cost(1.31512531841 + 17924.91069982040 * x);
	R2 += 0.00000000073 * Utils.cost(5.01153593776 + 1903.43681250120 * x);
	R2 += 0.00000000075 * Utils.cost(2.57969241717 + 10021.90459040220 * x);
	R2 += 0.00000000073 * Utils.cost(4.09954161905 + 3319.83703120740 * x);
	R2 += 0.00000000070 * Utils.cost(5.37678396256 + 12310.18132361080 * x);
	R2 += 0.00000000071 * Utils.cost(0.98422998240 + 13362.46696045140 * x);
	R2 += 0.00000000068 * Utils.cost(4.69140248943 + 522.57741809380 * x);
	R2 += 0.00000000068 * Utils.cost(3.24217441291 + 16706.58525184800 * x);
	R2 += 0.00000000069 * Utils.cost(2.53964193741 + 5884.92684658320 * x);
	R2 += 0.00000000070 * Utils.cost(2.38237948321 + 13916.01910964160 * x);
	R2 += 0.00000000066 * Utils.cost(3.48443797546 + 13760.59871020740 * x);
	R2 += 0.00000000068 * Utils.cost(5.27435069681 + 3980.50971301380 * x);
	R2 += 0.00000000076 * Utils.cost(0.12288413214 + 11216.28429032400 * x);
	R2 += 0.00000000073 * Utils.cost(3.94785759909 + 16173.37116840440 * x);
	R2 += 0.00000000062 * Utils.cost(0.15518975647 + 11081.21921028860 * x);
	R2 += 0.00000000074 * Utils.cost(2.99926779692 + 10021.76996979660 * x);
	R2 += 0.00000000080 * Utils.cost(6.18812323827 + 9380.95967271720 * x);
	R2 += 0.00000000064 * Utils.cost(3.99294283669 + 13358.92658845020 * x);
	R2 += 0.00000000061 * Utils.cost(2.56817782412 + 149.56319713460 * x);
	R2 += 0.00000000059 * Utils.cost(3.80850908229 + 10264.56588407340 * x);
	R2 += 0.00000000060 * Utils.cost(4.79879360562 + 1437.17561419860 * x);
	R2 += 0.00000000068 * Utils.cost(2.07515658228 + 1596.18644228460 * x);
	R2 += 0.00000000060 * Utils.cost(2.26503107747 + 28628.33622609960 * x);
	R2 += 0.00000000058 * Utils.cost(6.10782258899 + 5459.37628707820 * x);
	R2 += 0.00000000063 * Utils.cost(0.24407077742 + 18984.29263000960 * x);
	R2 += 0.00000000058 * Utils.cost(5.22738430747 + 13362.43245314700 * x);
	R2 += 0.00000000056 * Utils.cost(1.88708253797 + 9070.11887384880 * x);
	R2 += 0.00000000055 * Utils.cost(5.72587156499 + 433.71173787680 * x);
	R2 += 0.00000000056 * Utils.cost(1.18238857561 + 6696.47732458460 * x);
	R2 += 0.00000000062 * Utils.cost(3.98214740104 + 3427.92063123960 * x);
	R2 += 0.00000000056 * Utils.cost(5.37129176649 + 5099.26550511660 * x);
	R2 += 0.00000000057 * Utils.cost(0.86204712032 + 5642.19824260920 * x);
	R2 += 0.00000000055 * Utils.cost(1.31787605222 + 8982.81066930900 * x);
	R2 += 0.00000000056 * Utils.cost(5.49808236951 + 24093.27678917520 * x);
	R2 += 0.00000000054 * Utils.cost(3.77562154746 + 10213.28554621100 * x);
	R2 += 0.00000000054 * Utils.cost(2.36294643031 + 33716.96506586640 * x);
	R2 += 0.00000000063 * Utils.cost(3.53402427573 + 3205.54734666440 * x);
	R2 += 0.00000000066 * Utils.cost(6.25810929981 + 8270.29774868340 * x);
	R2 += 0.00000000067 * Utils.cost(0.58592813080 + 3335.08950239240 * x);
	R2 += 0.00000000055 * Utils.cost(4.74995645767 + 6660.86953400080 * x);
	R2 += 0.00000000053 * Utils.cost(0.31930032532 + 12721.57209941700 * x);
	R2 += 0.00000000069 * Utils.cost(2.42905593362 + 6158.64743530580 * x);
	R2 += 0.00000000055 * Utils.cost(5.03192783121 + 7255.56965173440 * x);
	R2 += 0.00000000051 * Utils.cost(5.45351947711 + 13207.02930736500 * x);
	R2 += 0.00000000050 * Utils.cost(0.23368526162 + 4379.63903749020 * x);
	R2 += 0.00000000053 * Utils.cost(2.12826344020 + 13171.00144068760 * x);
	R2 += 0.00000000049 * Utils.cost(2.35512151368 + 4032.77002792660 * x);
	R2 += 0.00000000049 * Utils.cost(2.81773050890 + 9808.53818466140 * x);
	R2 += 0.00000000067 * Utils.cost(2.26295786556 + 2766.26762836500 * x);
	R2 += 0.00000000049 * Utils.cost(0.72597680486 + 10028.95082710020 * x);
	R2 += 0.00000000050 * Utils.cost(6.10119450350 + 3253.30422216000 * x);
	R2 += 0.00000000059 * Utils.cost(0.27861398526 + 9225.53927328300 * x);
	R2 += 0.00000000053 * Utils.cost(1.27330874549 + 3344.49376205780 * x);
	R2 += 0.00000000049 * Utils.cost(2.91499389416 + 10404.73381232260 * x);
	R2 += 0.00000000047 * Utils.cost(0.48598973231 + 17395.21973472580 * x);
	R2 += 0.00000000049 * Utils.cost(3.40240207389 + 3304.58456002240 * x);
	R2 += 0.00000000060 * Utils.cost(3.40554368741 + 10551.52824519400 * x);
	R2 += 0.00000000050 * Utils.cost(1.83471955355 + 30376.35263916660 * x);
	R2 += 0.00000000046 * Utils.cost(3.04980996832 + 6144.42034130420 * x);
	R2 += 0.00000000049 * Utils.cost(0.33200904496 + 6702.00024889200 * x);
	R2 += 0.00000000053 * Utils.cost(0.35820094732 + 9468.26787725700 * x);
	R2 += 0.00000000050 * Utils.cost(0.15378507249 + 2648.45482547300 * x);
	R2 += 0.00000000044 * Utils.cost(0.79762157297 + 7107.82304427560 * x);
	R2 += 0.00000000050 * Utils.cost(2.41332661328 + 4407.10790388980 * x);
	R2 += 0.00000000054 * Utils.cost(0.21682940856 + 10022.81760116760 * x);
	R2 += 0.00000000044 * Utils.cost(5.78502737591 + 3364.49086444760 * x);
	R2 += 0.00000000044 * Utils.cost(0.75508636274 + 16062.18452611680 * x);
	R2 += 0.00000000043 * Utils.cost(3.10581037685 + 10235.13637553740 * x);
	R2 += 0.00000000044 * Utils.cost(5.21252098878 + 7373.38245462640 * x);
	R2 += 0.00000000058 * Utils.cost(4.51680312444 + 6660.44945790720 * x);
	R2 += 0.00000000043 * Utils.cost(0.15523355839 + 1505.28780909299 * x);
	R2 += 0.00000000055 * Utils.cost(5.93371026829 + 8439.87793181640 * x);
	R2 += 0.00000000042 * Utils.cost(5.40417232308 + 3344.20285535160 * x);
	R2 += 0.00000000056 * Utils.cost(3.87534582911 + 6816.28993343500 * x);
	R2 += 0.00000000049 * Utils.cost(5.57153056447 + 17468.85519794540 * x);
	R2 += 0.00000000046 * Utils.cost(3.07783299049 + 12722.55242048520 * x);
	R2 += 0.00000000045 * Utils.cost(1.49303542795 + 6247.51311552280 * x);
	R2 += 0.00000000055 * Utils.cost(6.26098836404 + 3361.38782219220 * x);
	R2 += 0.00000000042 * Utils.cost(4.74455545491 + 3369.06161416760 * x);
	R2 += 0.00000000040 * Utils.cost(1.58676666294 + 2818.03500860600 * x);
	R2 += 0.00000000043 * Utils.cost(4.97295184315 + 3337.02199804800 * x);
	R2 += 0.00000000055 * Utils.cost(3.80215638520 + 3376.64029337720 * x);
	R2 += 0.00000000047 * Utils.cost(1.97367775421 + 1581.95934828300 * x);
	R2 += 0.00000000045 * Utils.cost(2.03598705348 + 5244.04923920100 * x);
	R2 += 0.00000000049 * Utils.cost(4.43182954044 + 9595.23908922340 * x);
	R2 += 0.00000000043 * Utils.cost(0.38914582094 + 6665.97238221460 * x);
	R2 += 0.00000000040 * Utils.cost(1.06953099245 + 23695.12778576700 * x);
	R2 += 0.00000000038 * Utils.cost(0.59996214864 + 10713.99488132620 * x);
	R2 += 0.00000000039 * Utils.cost(3.79055778605 + 33318.81606245820 * x);
	R2 += 0.00000000041 * Utils.cost(5.54542347834 + 3863.18984479360 * x);
	R2 += 0.00000000037 * Utils.cost(5.27208151144 + 20752.66436247540 * x);
	R2 += 0.00000000039 * Utils.cost(3.15412760412 + 14469.58851248400 * x);
	R2 += 0.00000000041 * Utils.cost(0.55705920174 + 3346.13535100720 * x);
	R2 += 0.00000000048 * Utils.cost(1.42210748234 + 3316.73398895200 * x);
	R2 += 0.00000000049 * Utils.cost(5.44942247991 + 9638.94074787620 * x);
	R2 += 0.00000000038 * Utils.cost(2.11846271943 + 15664.03552270859 * x);
	R2 += 0.00000000035 * Utils.cost(5.30782933148 + 6677.63442474780 * x);
	R2 += 0.00000000036 * Utils.cost(2.68151450016 + 8584.66166590080 * x);
	R2 += 0.00000000046 * Utils.cost(3.09450395763 + 6701.58017279840 * x);
	R2 += 0.00000000038 * Utils.cost(1.81885395671 + 14158.74771361560 * x);
	R2 += 0.00000000037 * Utils.cost(5.80483071722 + 6684.81528205140 * x);
	R2 += 0.00000000047 * Utils.cost(2.60317702777 + 162.46663613220 * x);
	R2 += 0.00000000038 * Utils.cost(2.22559377525 + 3503.07906283200 * x);
	R2 += 0.00000000035 * Utils.cost(0.84358942718 + 6518.75821726740 * x);
	R2 += 0.00000000033 * Utils.cost(4.92302322062 + 23141.55838292460 * x);
	R2 += 0.00000000043 * Utils.cost(0.95148893985 + 34115.11406927460 * x);
	R2 += 0.00000000046 * Utils.cost(4.99457196207 + 9381.93999378540 * x);
	R2 += 0.00000000043 * Utils.cost(1.73832102244 + 12323.42309600880 * x);
	R2 += 0.00000000032 * Utils.cost(2.92741580696 + 9499.25986200560 * x);
	R2 += 0.00000000043 * Utils.cost(1.50296327105 + 27035.74021246680 * x);
	R2 += 0.00000000033 * Utils.cost(5.41731109688 + 20597.24396304120 * x);
	R2 += 0.00000000032 * Utils.cost(4.13881058425 + 31570.79964939120 * x);
	R2 += 0.00000000040 * Utils.cost(5.84463069180 + 16460.33352952499 * x);
	R2 += 0.00000000035 * Utils.cost(5.50083743557 + 8425.65083781480 * x);
	R2 += 0.00000000038 * Utils.cost(5.91991985929 + 3336.73109134180 * x);
	R2 += 0.00000000030 * Utils.cost(5.09155042811 + 5085.03841111500 * x);
	R2 += 0.00000000031 * Utils.cost(4.27211180916 + 36659.42848915800 * x);
	R2 += 0.00000000030 * Utils.cost(4.87389489592 + 1692.16566950240 * x);
	R2 += 0.00000000030 * Utils.cost(3.75494646937 + 4845.90023579280 * x);
	R2 += 0.00000000034 * Utils.cost(3.71030605417 + 8827.39026987480 * x);
	R2 += 0.00000000030 * Utils.cost(0.01599456850 + 11243.68584642080 * x);
	R2 += 0.00000000029 * Utils.cost(2.66198696023 + 12295.95422960920 * x);
	R2 += 0.00000000028 * Utils.cost(3.12114207206 + 11925.27409260060 * x);
	R2 += 0.00000000036 * Utils.cost(1.16568750904 + 18052.92954315780 * x);
	R2 += 0.00000000032 * Utils.cost(1.72704226918 + 12566.15169998280 * x);
	R2 += 0.00000000028 * Utils.cost(2.80254457895 + 3607.21946842160 * x);
	R2 += 0.00000000032 * Utils.cost(4.04390839531 + 6680.24453233140 * x);
	R2 += 0.00000000027 * Utils.cost(2.53565904393 + 19004.64794940840 * x);
	R2 += 0.00000000036 * Utils.cost(3.33518515689 + 29978.20363575840 * x);
	R2 += 0.00000000028 * Utils.cost(0.58104982217 + 20354.51535906720 * x);
	R2 += 0.00000000029 * Utils.cost(5.85207825749 + 31172.65064598300 * x);
	R2 += 0.00000000026 * Utils.cost(2.22598820379 + 3.52311834900 * x);
	R2 += 0.00000000033 * Utils.cost(5.15903548241 + 10596.18207843420 * x);
	R2 += 0.00000000028 * Utils.cost(1.89792803028 + 3333.56619000180 * x);
	R2 += 0.00000000027 * Utils.cost(2.25129832716 + 76.26607127560 * x);
	R2 += 0.00000000026 * Utils.cost(4.32703172263 + 17085.95866572220 * x);
	R2 += 0.00000000026 * Utils.cost(5.12847780702 + 11766.26326451460 * x);
	R2 += 0.00000000028 * Utils.cost(0.80926596905 + 20735.83216142559 * x);
	R2 += 0.00000000026 * Utils.cost(5.06814803493 + 17412.05193577560 * x);
	R2 += 0.00000000024 * Utils.cost(4.47399155600 + 3134.42687826260 * x);
	R2 += 0.00000000024 * Utils.cost(4.35557152695 + 14584.29827312060 * x);
	R2 += 0.00000000027 * Utils.cost(4.98717355201 + 3877.41693879520 * x);
	R2 += 0.00000000025 * Utils.cost(5.63712701265 + 14054.60730802600 * x);
	R2 += 0.00000000024 * Utils.cost(4.12573657295 + 4193.80880845180 * x);
	R2 += 0.00000000025 * Utils.cost(1.40880282063 + 8186.51266249260 * x);
	R2 += 0.00000000024 * Utils.cost(4.96463811748 + 26087.90314157420 * x);

	let R3 = 0;
	R3 += 0.00001113107 * Utils.cost(5.14987350142 + 3340.61242669980 * x);
	R3 += 0.00000424446 * Utils.cost(5.61343766478 + 6681.22485339960 * x);
	R3 += 0.00000100044 * Utils.cost(5.99726827028 + 10021.83728009940 * x);
	R3 += 0.00000019606 * Utils.cost(0.07633062094 + 13362.44970679920 * x);
	R3 += 0.00000003477 * Utils.cost(0.42951907576 + 16703.06213349900 * x);
	R3 -= 0.00000004693;
	R3 += 0.00000002869 * Utils.cost(0.44711842697 + 3344.13554504880 * x);
	R3 += 0.00000002428 * Utils.cost(3.02115527957 + 3185.19202726560 * x);
	R3 += 0.00000000688 * Utils.cost(0.80693359444 + 6684.74797174860 * x);
	R3 += 0.00000000540 * Utils.cost(3.86836515672 + 1059.38193018920 * x);
	R3 += 0.00000000577 * Utils.cost(0.77853275120 + 20043.67456019880 * x);
	R3 += 0.00000000468 * Utils.cost(4.52450786544 + 3496.03282613400 * x);
	R3 += 0.00000000487 * Utils.cost(1.60862391345 + 3583.34103067380 * x);
	R3 += 0.00000000362 * Utils.cost(4.42397903418 + 2787.04302385740 * x);
	R3 += 0.00000000397 * Utils.cost(5.71967986581 + 3149.16416058820 * x);
	R3 += 0.00000000299 * Utils.cost(0.75640033535 + 3738.76143010800 * x);
	R3 += 0.00000000350 * Utils.cost(5.55691984889 + 4136.91043351620 * x);
	R3 += 0.00000000314 * Utils.cost(3.37632898783 + 6525.80445396540 * x);
	R3 += 0.00000000233 * Utils.cost(2.13965262306 + 3097.88382272579 * x);
	R3 += 0.00000000212 * Utils.cost(4.20487494011 + 3341.59274776800 * x);
	R3 += 0.00000000214 * Utils.cost(0.56779556947 + 155.42039943420 * x);
	R3 += 0.00000000201 * Utils.cost(2.35284464564 + 1592.59601363280 * x);
	R3 += 0.00000000204 * Utils.cost(0.96723315302 + 1990.74501704100 * x);
	R3 += 0.00000000230 * Utils.cost(5.82959057146 + 2388.89402044920 * x);
	R3 += 0.00000000160 * Utils.cost(4.14974194757 + 4535.05943692440 * x);
	R3 += 0.00000000156 * Utils.cost(5.13345210285 + 796.29800681640 * x);
	R3 += 0.00000000146 * Utils.cost(3.29541339704 + 2957.71589447660 * x);
	R3 += 0.00000000156 * Utils.cost(1.13805508457 + 10025.36039844840 * x);
	R3 += 0.00000000159 * Utils.cost(3.76174286126 + 1194.44701022460 * x);
	R3 += 0.00000000136 * Utils.cost(5.58293924642 + 3894.18182954220 * x);
	R3 += 0.00000000145 * Utils.cost(3.02112488974 + 3337.08930835080 * x);
	R3 += 0.00000000146 * Utils.cost(4.25359617225 + 4399.99435688900 * x);
	R3 += 0.00000000100 * Utils.cost(4.26740096115 + 1589.07289528380 * x);
	R3 += 0.00000000091 * Utils.cost(6.12108227231 + 6489.77658728800 * x);
	R3 += 0.00000000101 * Utils.cost(1.17242141914 + 7079.37385680780 * x);
	R3 += 0.00000000098 * Utils.cost(1.12613498307 + 23384.28698689860 * x);
	R3 += 0.00000000075 * Utils.cost(6.02182689533 + 529.69096509460 * x);
	R3 += 0.00000000078 * Utils.cost(5.93418069229 + 7477.52286021600 * x);
	R3 += 0.00000000068 * Utils.cost(1.70775041911 + 9492.14631500480 * x);
	R3 += 0.00000000070 * Utils.cost(3.67253155189 + 8962.45534991020 * x);
	R3 += 0.00000000062 * Utils.cost(4.14954627063 + 4292.33083295040 * x);
	R3 += 0.00000000067 * Utils.cost(0.15092246550 + 3870.30339179440 * x);
	R3 += 0.00000000066 * Utils.cost(1.12578506413 + 6151.53388830500 * x);
	R3 += 0.00000000062 * Utils.cost(1.93984222091 + 6923.95345737360 * x);
	R3 += 0.00000000060 * Utils.cost(4.30641513096 + 12303.06777661000 * x);
	R3 += 0.00000000074 * Utils.cost(4.72156358149 + 3347.72597370060 * x);
	R3 += 0.00000000055 * Utils.cost(2.75742802464 + 4933.20844033260 * x);
	R3 += 0.00000000053 * Utils.cost(4.77894621871 + 6127.65545055720 * x);
	R3 += 0.00000000050 * Utils.cost(2.57807944338 + 3340.59517304760 * x);
	R3 += 0.00000000048 * Utils.cost(3.72532068729 + 9866.41688066520 * x);
	R3 += 0.00000000042 * Utils.cost(6.15391373101 + 7234.79425624200 * x);
	R3 += 0.00000000043 * Utils.cost(3.43955584179 + 5486.77784317500 * x);
	R3 += 0.00000000050 * Utils.cost(4.60885064189 + 3340.62968035200 * x);
	R3 += 0.00000000044 * Utils.cost(4.47943289816 + 426.59819087600 * x);
	R3 += 0.00000000045 * Utils.cost(6.24485207500 + 2274.11694950980 * x);
	R3 += 0.00000000040 * Utils.cost(0.73805316471 + 7.11354700080 * x);
	R3 += 0.00000000038 * Utils.cost(1.06497784748 + 9623.68827669120 * x);
	R3 += 0.00000000041 * Utils.cost(4.60954640493 + 6682.20517446780 * x);
	R3 += 0.00000000038 * Utils.cost(4.60963924082 + 7740.60678358880 * x);
	R3 += 0.00000000036 * Utils.cost(3.15129246169 + 639.89728631400 * x);
	R3 += 0.00000000037 * Utils.cost(6.14629970622 + 5729.50644714900 * x);
	R3 += 0.00000000040 * Utils.cost(1.47395544850 + 13365.97282514820 * x);
	R3 += 0.00000000035 * Utils.cost(2.60772245492 + 4690.47983635860 * x);
	R3 += 0.00000000035 * Utils.cost(2.45077931900 + 2288.34404351140 * x);
	R3 += 0.00000000034 * Utils.cost(4.50544497582 + 7875.67186362420 * x);
	R3 += 0.00000000042 * Utils.cost(2.11383330882 + 12832.75874170460 * x);
	R3 += 0.00000000033 * Utils.cost(3.97655860802 + 191.44826611160 * x);
	R3 += 0.00000000032 * Utils.cost(4.06047154083 + 3532.06069281140 * x);
	R3 += 0.00000000034 * Utils.cost(5.06671994554 + 6681.24210705180 * x);
	R3 += 0.00000000042 * Utils.cost(4.67024017441 + 15643.68020330980 * x);
	R3 += 0.00000000036 * Utils.cost(0.29140871479 + 3723.50895892300 * x);
	R3 += 0.00000000033 * Utils.cost(4.52588149629 + 4929.68532198360 * x);
	R3 += 0.00000000034 * Utils.cost(2.74499072890 + 6677.70173505060 * x);
	R3 += 0.00000000030 * Utils.cost(1.57743012295 + 10419.98628350760 * x);
	R3 += 0.00000000040 * Utils.cost(1.31713176335 + 5331.35744374080 * x);
	R3 += 0.00000000034 * Utils.cost(3.03490000148 + 6681.20759974740 * x);
	R3 += 0.00000000031 * Utils.cost(1.25306164576 + 242.72860397400 * x);
	R3 += 0.00000000029 * Utils.cost(5.44118048011 + 10021.85453375160 * x);
	R3 += 0.00000000029 * Utils.cost(3.41037097794 + 10021.82002644720 * x);
	R3 += 0.00000000028 * Utils.cost(4.81855060968 + 6836.64525283380 * x);
	R3 += 0.00000000028 * Utils.cost(0.72745302325 + 6283.07584999140 * x);
	R3 += 0.00000000030 * Utils.cost(3.06267495632 + 2281.23049651060 * x);
	R3 += 0.00000000027 * Utils.cost(0.62535799761 + 6681.29216370240 * x);
	R3 += 0.00000000030 * Utils.cost(3.56389476096 + 8969.56889691100 * x);
	R3 += 0.00000000032 * Utils.cost(5.31078691958 + 553.56940284240 * x);
	R3 += 0.00000000033 * Utils.cost(2.00753799963 + 5884.92684658320 * x);
	R3 += 0.00000000027 * Utils.cost(1.18001479303 + 8955.34180290940 * x);
	R3 += 0.00000000025 * Utils.cost(2.94122791628 + 2544.31441988340 * x);
	R3 += 0.00000000025 * Utils.cost(0.17808889827 + 9830.38901398780 * x);
	R3 += 0.00000000031 * Utils.cost(5.73384204593 + 3339.63210563160 * x);
	R3 += 0.00000000028 * Utils.cost(3.70436008855 + 6298.32832117640 * x);
	R3 += 0.00000000024 * Utils.cost(0.07739730466 + 10818.13528691580 * x);
	R3 += 0.00000000027 * Utils.cost(1.03401737006 + 6681.15754309680 * x);
	R3 += 0.00000000024 * Utils.cost(0.09987383242 + 382.89653222320 * x);
	R3 += 0.00000000027 * Utils.cost(0.60053652251 + 3553.91152213780 * x);
	R3 += 0.00000000027 * Utils.cost(4.97107900859 + 3767.21061757580 * x);
	R3 += 0.00000000024 * Utils.cost(3.36621347824 + 8031.09226305840 * x);
	R3 += 0.00000000026 * Utils.cost(4.80509833364 + 7632.94325965020 * x);
	R3 += 0.00000000022 * Utils.cost(1.43966107077 + 26724.89941359840 * x);
	R3 += 0.00000000020 * Utils.cost(0.36901153144 + 398.14900340820 * x);
	R3 += 0.00000000019 * Utils.cost(1.00325306041 + 7064.12138562280 * x);
	R3 += 0.00000000020 * Utils.cost(0.19821371186 + 6674.11130639880 * x);
	R3 += 0.00000000018 * Utils.cost(1.07169297658 + 7210.91581849420 * x);
	R3 += 0.00000000021 * Utils.cost(2.69512140340 + 10018.31416175040 * x);
	R3 += 0.00000000023 * Utils.cost(3.25670295081 + 5621.84292321040 * x);
	R3 += 0.00000000018 * Utils.cost(0.24542781929 + 3981.49003408200 * x);
	R3 += 0.00000000018 * Utils.cost(5.14428605713 + 6688.33840040040 * x);
	R3 += 0.00000000020 * Utils.cost(0.97539014916 + 6894.52394883760 * x);
	R3 += 0.00000000024 * Utils.cost(4.42156401638 + 1748.01641306700 * x);
	R3 += 0.00000000016 * Utils.cost(0.65389503440 + 3340.54511639700 * x);
	R3 += 0.00000000016 * Utils.cost(5.28427106012 + 3333.49887969900 * x);

	let R4 = 0;
	R4 += 0.00000019552 * Utils.cost(3.58211650473 + 3340.61242669980 * x);
	R4 += 0.00000016323 * Utils.cost(4.05116076923 + 6681.22485339960 * x);
	R4 += 0.00000005848 * Utils.cost(4.46383962094 + 10021.83728009940 * x);
	R4 += 0.00000001532 * Utils.cost(4.84374321619 + 13362.44970679920 * x);
	R4 += 0.00000000375 * Utils.cost(1.50962233608 + 3185.19202726560 * x);
	R4 += 0.00000000339 * Utils.cost(5.20684967613 + 16703.06213349900 * x);
	R4 += 0.00000000151 * Utils.cost(5.16472931648 + 3344.13554504880 * x);
	R4 += 0.00000000125 * Utils.cost(2.19233532803 + 3496.03282613400 * x);
	R4 += 0.00000000148;
	R4 += 0.00000000087 * Utils.cost(0.10275067375 + 3583.34103067380 * x);
	R4 += 0.00000000070 * Utils.cost(5.55303619365 + 20043.67456019880 * x);
	R4 += 0.00000000048 * Utils.cost(2.91797786512 + 2787.04302385740 * x);
	R4 += 0.00000000049 * Utils.cost(5.57038514830 + 6684.74797174860 * x);
	R4 += 0.00000000057 * Utils.cost(1.86867280743 + 6525.80445396540 * x);
	R4 += 0.00000000034 * Utils.cost(3.63370917313 + 3097.88382272579 * x);
	R4 += 0.00000000021 * Utils.cost(2.30677637991 + 1059.38193018920 * x);
	R4 += 0.00000000021 * Utils.cost(4.03682122005 + 4136.91043351620 * x);
	R4 += 0.00000000018 * Utils.cost(4.17438755890 + 3149.16416058820 * x);
	R4 += 0.00000000013 * Utils.cost(1.97805475719 + 155.42039943420 * x);
	R4 += 0.00000000017 * Utils.cost(5.94856414690 + 10025.36039844840 * x);
	R4 += 0.00000000012 * Utils.cost(0.51097435253 + 6923.95345737360 * x);
	R4 += 0.00000000012 * Utils.cost(3.27945299261 + 6127.65545055720 * x);
	R4 += 0.00000000013 * Utils.cost(2.22938285522 + 9866.41688066520 * x);
	R4 += 0.00000000016 * Utils.cost(2.64206771227 + 4399.99435688900 * x);
	R4 += 0.00000000013 * Utils.cost(2.75813969974 + 6836.64525283380 * x);
	R4 += 0.00000000013 * Utils.cost(4.51988349676 + 6489.77658728800 * x);
	R4 += 0.00000000014 * Utils.cost(0.76591550754 + 3894.18182954220 * x);
	R4 += 0.00000000011 * Utils.cost(5.47381242145 + 3738.76143010800 * x);

	let R5 = 0;
	R5 += 0.00000000476 * Utils.cost(2.47617204701 + 6681.22485339960 * x);
	R5 += 0.00000000268 * Utils.cost(2.91510547706 + 10021.83728009940 * x);
	R5 += 0.00000000115 * Utils.cost(1.76888962311 + 3340.61242669980 * x);
	R5 += 0.00000000096 * Utils.cost(3.31378377179 + 13362.44970679920 * x);
	R5 += 0.00000000048 * Utils.cost(6.27457828287 + 3185.19202726560 * x);
	R5 += 0.00000000027 * Utils.cost(3.69380877066 + 16703.06213349900 * x);
	R5 += 0.00000000013 * Utils.cost(3.72005807206 + 3496.03282613400 * x);
	R5 += 0.00000000012 * Utils.cost(4.88179002689 + 3583.34103067380 * x);
	R5 -= 0.00000000012;

	let x2 = x * x;
	let x3 = x2 * x;
	let x4 = x3 * x;
	let x5 = x4 * x;

	return (R0 + R1 * x + R2 * x2 + R3 * x3 + R4 * x4 + R5 * x5);
}

/*
exports.lMars = lMars;
exports.bMars = bMars;
exports.rMars = rMars;
*/
