buildscript {
    ext.scala_version = '2.13.8'
    // ext.pi4j_version = '1.2'
}

buildscript {
    ext.kotlin_version = '1.6.0'  // '1.4.0'  // '1.3.72'
    ext.shadowVersion = '6.0.0'
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.github.jengelman.gradle.plugins:shadow:$shadowVersion"
    }
}

apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'com.github.johnrengelman.shadow'

//plugins {
//    id 'java'
//    id 'scala'
//    id 'kotlin'
//    id 'groovy'
//    id 'maven'
//    id 'com.github.johnrengelman.shadow' // version '4.0.2'
//}

shadowJar {
    zip64 true
}

group = 'oliv.raspi.coffee'
version = '1.0'

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "https://oss.sonatype.org/content/groups/public" }
    // maven { url "https://raw.githubusercontent.com/OlivierLD/raspberry-coffee/repository" }  // maven repo in git
}

dependencies {

    implementation "com.pi4j:pi4j-core:$pi4j_version"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'org.codehaus.groovy:groovy-all:2.4.6'
    implementation 'org.codehaus.groovy:http-builder:0.4.0'
    implementation 'javax.ws.rs:javax.ws.rs-api:2.0'
    implementation 'org.glassfish.jersey.core:jersey-client:2.10'
    implementation "org.scala-lang:scala-library:$scala_version"
    implementation "org.scala-lang:scala-compiler:$scala_version"
    implementation 'com.typesafe.akka:akka-actor_2.13:2.6.19' // 'com.typesafe.akka:akka-actor_2.11:2.3.11'

    testImplementation group: 'junit', name: 'junit', version: '4.13'
    implementation 'io.swagger.codegen.v3:swagger-codegen-cli:3.0.10'
    implementation 'com.google.code.gson:gson:2.8.0'
    implementation 'org.ajoberstar:gradle-git:1.1.0'
    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.0.2'

    implementation project(':common-utils')
    implementation project(':http-tiny-server')
    implementation project(':raspberry-io-pi4j:Utils')
    implementation project(':raspberry-io-pi4j:ADC')
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "11" // "1.8" //
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "11" // "1.8" //
    }
}

//task swaggerClj(type: JavaExec, description: "Generate Clojure server code for the ligth and relay example") {
//    classpath = configurations.runtime
//    main = 'io.swagger.codegen.SwaggerCodegen'
//    args "generate",
//            "-l", "clojure",
//            "-i", "sensors.yaml",
//            "-o", "./generated/clj"
//}

//task swaggerGO(type: JavaExec, description: "Generate GO server code for the ligth and relay example") {
//    classpath = configurations.runtime
//    main = 'io.swagger.codegen.SwaggerCodegen'
//    args "generate",
//            "-l", "go-server",
//            "-i", "sensors.yaml",
//            "-o", "./generated/go"
//}

task startScalaServer(type: JavaExec, dependsOn: classes, description: 'Start the Scala server') {
    main = 'scalahttp.ScalaHttpRequestServer'
    classpath sourceSets.main.runtimeClasspath
    classpath configurations.runtime
}

