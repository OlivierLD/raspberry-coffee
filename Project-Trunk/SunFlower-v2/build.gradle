buildscript {
  // ext.pi4j_version = '1.2'
}

import java.text.SimpleDateFormat

plugins {
  id 'java'
  id 'maven'
  id 'idea'
  id 'com.github.johnrengelman.shadow' // version '4.0.2'
}

shadowJar {
  zip64 true
}

group = 'oliv.raspi.coffee'
version = '1.0'

compileJava.options.compilerArgs += ["-Xlint:unchecked"]  // ["-Xlint:none"]

repositories {
  mavenLocal()
  mavenCentral()
  maven { url "https://oss.sonatype.org/content/groups/public" }
  maven { url "https://www.datanucleus.org/downloads/maven2" }
  // maven { url "https://raw.githubusercontent.com/OlivierLD/raspberry-coffee/repository" }  // maven repo in git
}

dependencies {
  implementation "com.pi4j:pi4j-core:$pi4j_version"
  implementation 'com.google.code.gson:gson:2.8.0'
  implementation 'org.fusesource.jansi:jansi:1.11'
  implementation 'oracle:xmlparser:2.0'
  implementation 'org.rxtx:rxtx:2.1.7'
  implementation project(':raspberry-io-pi4j:Serial-IO')
  implementation project(':common-utils')
  implementation project(':http-tiny-server')
  implementation project(':raspberry-io-pi4j:I2C-SPI')        // For the Motor Hat, includes common-utils, AstroComputer. 'gradlew dependencies' is your friend...
  implementation project(':raspberry-sailor:NMEA-Parser')
//  implementation project(':NMEA-multiplexer')
  implementation project(':astro-computer:AstroComputer')
  // For tests
  testImplementation 'junit:junit:4.13.2'
}

jar { // Adding some lines in the MANIFEST.mf. Compatible with shadowJar's mergeServiceFiles above.
  manifest {
    attributes (
            'Built-By'       : System.properties['user.name'],
            'Build-Timestamp': new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
//            'Build-Revision' : versioning.info.commit,
            'Build-from'     : "Module '${project.name}'",
            'Created-By'     : "Gradle ${gradle.gradleVersion}",
            'Build-Jdk'      : "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
            'Build-OS'       : "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
    )
  }
}
