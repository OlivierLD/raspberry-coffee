plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' // version '5.2.0'
    id "application"
}

group 'oliv.raspi.coffee'
version '1.0'

repositories {
    mavenCentral()
}

// sourceCompatibility = 1.8
def opencvVersion = "4.5.0"

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // The one below depends on where you have installed OpenCV
    // /usr/local/share/java/opencv4/opencv-450.jar
////    implementation fileTree(dir: '/usr/local/Cellar/opencv/4.5.0_2/share/java/opencv4', include: ['*.jar']) // Mac
//    implementation fileTree(dir: "/usr/local/share/java/opencv4/", include: ['*.jar']) // Mac
////    implementation fileTree(dir: '/usr/local/share/java/opencv4', include: ['*.jar']) // RPi

    if (System.getProperty("os.name").indexOf("Mac") > -1) {
        println "On Mac, OpenCV version ${opencvVersion}"
//        implementation fileTree(dir: "/usr/local/Cellar/opencv/${opencvVersion}/share/java/opencv4/", include: ['*.jar']) // Mac
        implementation fileTree(dir: "/usr/local/share/java/opencv4/", include: ['*.jar']) // Mac
    } else {
        println "Assuming Linux / Raspberry Pi, OpenCV version ${opencvVersion}"
//        implementation fileTree(dir: '/usr/local/share/java/opencv4', include: ['*.jar']) // RPi
        implementation fileTree(dir: "/home/pi/opencv-${opencvVersion}/build/bin", include: ['*.jar']) // RPi
    }

    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
}

tasks.withType(JavaExec) {
//    systemProperty "java.library.path", "/usr/local/Cellar/opencv/4.5.0_2/share/java/opencv4:/usr/local/Cellar/openssl/1.0.2s/lib/" // For Mac
    systemProperty "java.library.path", "/usr/local/share/java/opencv4/:/usr/local/Cellar/openssl/1.0.2s/lib/"
//    systemProperty "java.library.path", "/usr/local/share/java/opencv4" // Raspberry Pi
    if (System.getProperty('DEBUG', 'false') == 'true') {
        jvmArgs '-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=9099'
    }
}

task runOliv101(type:JavaExec) {
    main = "olivopencv.OpenCV101"
    classpath = sourceSets.main.runtimeClasspath
}

mainClassName = "olivopencv.OpenCV101"

shadowJar {
    zip64 true
    // to create an executable jar-file. Requires mainClassName.
    mergeServiceFiles()
}

build.doFirst {
    println "--------------------------------------------------------------------------------------"
    println ">>> This requires OpenCV to be installed, and possibly some path modifications in build.gradle."
    println "--------------------------------------------------------------------------------------"
}
