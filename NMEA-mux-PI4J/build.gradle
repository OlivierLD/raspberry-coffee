buildscript {
    ext.scala_version = '2.13.8'
    // ext.pi4j_version = '1.2'  // '2.1.1'
}
plugins {
    id 'java'
    id 'scala'
    id 'idea'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' // version '4.0.2'
}

group = 'oliv.raspi.coffee'
version = '1.0'

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://mvnrepository.com/artifact" }
    maven { url "https://www.datanucleus.org/downloads/maven2" }
    maven { url "https://oss.sonatype.org/content/groups/public" }
    maven { url "https://raw.githubusercontent.com/OlivierLD/ROB/repository" }  // maven repo in git
}

//compileJava.options.compilerArgs += ["-Xlint:none"]
compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

dependencies {
    implementation "com.pi4j:pi4j-core:$pi4j_version" // '2.1.1' Warning: 'com.pi4j.io.i2c.I2CFactory' seems not to be in version 2.1.1
    implementation 'org.rxtx:rxtx:2.1.7'
    implementation "org.scala-lang:scala-library:$scala_version"
    implementation "org.scala-lang:scala-compiler:$scala_version"
    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.0.2'
    // implementation 'org.java-websocket:Java-WebSocket:1.3.7'
    implementation 'org.java-websocket:Java-WebSocket:1.5.2'
    implementation 'org.fusesource.jansi:jansi:1.11'
    implementation 'oracle:xmlparser:2.0'
//    implementation 'org.yaml:snakeyaml:1.21'
//    implementation 'org.xerial:sqlite-jdbc:3.34.0'
//    implementation "com.google.code.gson:gson:$google_gson_gson"   // TODO Move to Jackson
    implementation 'org.json:json:20190722'
//    implementation 'org.glassfish.jersey.media:jersey-media-json-jackson:2.25.1'
//    implementation 'net.thisptr:jackson-jq:1.0.0-preview.20220705'  // jackson-jq

    implementation 'astro.computer:AstroComputer:1.0'         // in the Maven on GIT
    implementation 'raspberry.on.board:NMEA-Parser:1.0'       // in the Maven on GIT
    implementation 'raspberry.on.board:http-tiny-server:1.0'  // in the Maven on GIT
    implementation 'raspberry.on.board:common-utils:1.0'      // in the Maven on GIT
    implementation 'raspberry.on.board:NMEA-multiplexer:1.0'  // in the Maven on GIT

    implementation project(':raspberry-io-pi4j:I2C-SPI')

//    implementation project(':SunFlower')
//    implementation project(':GPS.sun.servo')
//    implementation project(':LoRa')    // Needed for a publisher
    testImplementation "junit:junit:$junit_version"
}

shadowJar {
    zip64 true
}

task runLogAnalyzer(type: JavaExec) {
    description 'Analyze a log file. Use gradlew runLogAnalyzer -Pdatafile=[datafile.nmea]'
    main = 'util.LogAnalyzer'
    classpath = sourceSets.main.runtimeClasspath
    // Another syntax to try:
    //     args project.findProperty('datafile') ?: './default-data-file.nmea'
    if (project.hasProperty('datafile')) { // gradlew -Pdatafile=XXXXX runLogAnalyzer
        args (project.getProperty('datafile'))
    }
}
